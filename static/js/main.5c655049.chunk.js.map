{"version":3,"sources":["pages/PowerPlantDetailPage/index.module.css","pages/PowerPlantDetailPage/EnergyGraph/index.module.css","components/Labels.module.css","App.module.css","pages/HomePage/PlantHeader.module.css","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.module.css","components/LinkButton.module.css","components/DeviceFilter.module.css","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.module.css","pages/PowerPlantDetailPage/InverterGraphs/index.module.css","reducer/divSize.js","reducer/fetch.js","reducer/byId.js","reducer/cache.js","reducer/index.js","util/index.js","api.js","components/withFetch.js","components/Loading.js","components/LinkButton.js","pages/HomePage/PlantHeader.js","util/date.js","util/math.js","pages/HomePage/GraphPlaceholder.js","pages/HomePage/FiscalEnergyGraph.js","pages/HomePage/index.js","lib/colors.js","components/withParams.js","components/ColorBox.js","components/DeviceFilter.js","components/useToggle.js","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.js","components/disableScroll.js","components/Labels.js","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.js","pages/PowerPlantDetailPage/EnergyGraph/index.js","pages/PowerPlantDetailPage/InverterGraphs/LineGraph.js","pages/PowerPlantDetailPage/InverterGraphs/index.js","pages/PowerPlantDetailPage/index.js","App.js","components/withDivSize.js","serviceWorker.js","index.js","pages/HomePage/FiscalEnergyGraph.module.css","pages/HomePage/index.module.css"],"names":["module","exports","header","headerText","subHeader","filter","filterCol","timestamp","labels","label","component","footer","devices","LinkButton","table","cell","TimeUnitButtons","filters","dateFilters","graphHeader","row","UPDATE","initialState","width","height","actions","updateDivSize","_ref","type","START","SUCCESS","FAIL","fetchStart","fetchId","fetchSuccess","_ref2","response","fetchFail","_ref3","error","INITIAL_FETCH_STATE","fetching","undefined","fetchedAt","respondedAt","getFetchState","state","selectors","UPDATE_ONE","UPDATE_MANY","updateOne","id","update","updateMany","reducer","arguments","length","action","Object","objectSpread","defineProperty","updateOneCache","name","updateManyCache","getOne","getMany","combineReducers","divSize","fetch","now","Date","toISOString","cache","byId","compose","_len","funcs","Array","_key","val","slice","reverse","reduce","v","f","get","keys","defaultVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","key","value","err","return","TIME_ZONE_OFFSET","parseInt","process","sendQuery","_callee","url","query","variables","res","text","_res","regenerator_default","a","wrap","_context","prev","method","body","JSON","stringify","headers","Content-Type","sent","parse","errors","console","Error","message","abrupt","t0","stop","_callee2","_context2","data","powerPlants","_callee3","params","_context3","powerPlant","getEnergy","_x5","_getEnergy","apply","this","_callee4","plantId","deviceId","unit","_params$timestamp","lte","gte","energy","min","i","_i","diff","_context4","timeZoneOffset","Math","toConsumableArray","d","map","max","floor","push","unixTime","getTime","warn","concat","getSimulationData","_x6","_getSimulationData","_callee5","yearGte","yearLte","_context5","year","simulation","month","parseFloat","getLogs","_x7","_getLogs","_callee6","_params$step","logs","_context6","step","log","power","current","voltage","insulationResistance","residualCurrent","withFetch","request","_ref$name","_ref$getFetchId","getFetchId","_ref$getParams","getParams","props","_ref$shouldFetch","shouldFetch","_ref$saveCache","saveCache","_ref$debounce","debounce","Component","connect","rest","objectWithoutProperties","paramId","delay","_useState","useState","_useState2","slicedToArray","debouncedVal","setDebouncedVal","useEffect","timer","setTimeout","clearTimeout","useDebounce","_fetch","asyncToGenerator","mark","_response","react_default","createElement","assign","Loading","loading","renderLoading","Message","negative","Button","onClick","onClickRetry","children","defaultProps","className","styles","PlantHeader","plant","components_LinkButton","PropTypes","shape","string","isRequired","array","func","timeZone","str","moment","tz","roundInterval","numSteps","x","numDigits","log10","abs","lastDigit","n","pow","getDigit","ceil","GraphPlaceholder","backgroundColor","style","number","MIN_Y_MAX","X_MIN","X_MAX","Y_MIN","device","yMax","getFullYear","api","y","find","model","startOf","subtract","endOf","energyLastMonth","energyCurrentMonth","yTickInterval","components_Loading","HomePage_GraphPlaceholder","stats","toLocaleString","index_es","animate","xMin","xMax","yMin","xAxisAt","xAxisHeight","xAxisLineColor","xTickInterval","xTickLength","showXLine","yAxisAt","yAxisWidth","yAxisLineColor","renderYTick","round","yLabels","render","color","drawLine","lineColor","graphs","barWidth","getBarColor","PADDING","MIN_GRAPH_WIDTH","GRAPH_HEIGHT","Graph","plantHeader","HomePage_PlantHeader","padding","paddingTop","HomePage_FiscalEnergyGraph","_getPowerPlants","getPowerPlants","numGraphsPerRow","graphWidth","count","col","arr","size","chunks","chunk","plants","history","COLORS","withParams","initialParams","setParams","ColorBox","margin","Row","checked","Dropdown","Item","Checkbox","components_ColorBox","DeviceFilter","colors","onToggle","open","setOpen","values","all","Group","basic","Menu","maxHeight","overflow","Divider","labelPosition","icon","content","useToggle","ids","setState","_toggleAll","_toggle","UNITS","TEXT","MONTH","DAY","HOUR","active","disableScroll","document","enableScroll","Labels","zoomable","draggable","ReactCanvasTimeSeries","getLayout","layout","MIN_BAR_WIDTH","BAR_PADDING","HEIGHT","renderXLabel","isNaN","add","format","renderYLabel","yMaxs","xs","onChangeXRange","mouse","setMouse","_useState3","diffs","_useState4","nearest","setNearest","graph","checkedDevices","getNumXTicks","BarGraph_Graph","renderXTick","yTickLength","xLabels","canvas","math","getX","left","getY","top","onMouseMove","e","xRange","isInside","findNearestIndex","onMouseOut","onWheel","components_Labels","NOW","unix","CURRENT_MONTH","getDefaultXRange","getGte","_unit","toLowerCase","getLte","getUnixTimeFromX","getXFromUnixTime","tMin","tMax","t","x0","deviceIds","Promise","_ref5","_x3","_ref6","_ref7","_ref8","_ref4","_useToggle","_useToggle2","toggle","Fragment","EnergyGraph_TimeUnitButtons","components_DeviceFilter","EnergyGraph_BarGraph","LineGraph","lines","mouseX","mouseY","setMouseY","line","LineGraph_Graph","unixTimes","maxPower","maxCurrent","maxVoltage","maxInsulationResistance","maxResidualCurrent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","finish","t1","repsonse","setMouseX","_useState5","_useState6","filterDates","setFilterDates","setFilterDate","date","entry_default","disabled","onChange","InverterGraphs_LineGraph","GRAPH_PADDING","MAX_GRAPH_WIDTH","_x4","_getPowerPlant","match","getPowerPlant","Infinity","bound","PowerPlantDetailPage_EnergyGraph","PowerPlantDetailPage_InverterGraphs","withDivSize","react_router","path","PowerPlantDetailPage","HomePage","ref","useRef","setDivSize","clientHeight","clientWidth","window","addEventListener","removeEventListener","Boolean","location","hostname","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","react_router_dom","basename","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c655049.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PowerPlantDetailPage_header__2Oy6X\",\"headerText\":\"PowerPlantDetailPage_headerText__3xQIM\",\"subHeader\":\"PowerPlantDetailPage_subHeader__4shvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"EnergyGraph_filter__sXpE0\",\"filterCol\":\"EnergyGraph_filterCol__3lRs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timestamp\":\"Labels_timestamp__14xTO\",\"labels\":\"Labels_labels__3OjBJ\",\"label\":\"Labels_label__3jxsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__1dd61\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PlantHeader_component__NDfu0\",\"devices\":\"PlantHeader_devices__2U2Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"BarGraph_component__2Avo8\",\"labels\":\"BarGraph_labels__3I-cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"LinkButton_LinkButton__38eEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DeviceFilter_table__lKnNt\",\"cell\":\"DeviceFilter_cell__3_4bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeUnitButtons\":\"TimeUnitButtons_TimeUnitButtons__2HFO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"InverterGraphs_filters__3YMN1\",\"dateFilters\":\"InverterGraphs_dateFilters__3mfAg\",\"graphHeader\":\"InverterGraphs_graphHeader__20S_9\",\"row\":\"InverterGraphs_row__Gj9MO\",\"labels\":\"InverterGraphs_labels__1li5R\"};","const UPDATE = \"DIV_SIZE/UPDATE\"\n\nconst initialState = {\n  width: 0,\n  height: 0,\n}\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        width: action.width,\n        height: action.height,\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  updateDivSize: ({ width, height }) => ({ type: UPDATE, width, height }),\n}\n","const START = \"FETCH/START\"\nconst SUCCESS = \"FETCH/SUCCESS\"\nconst FAIL = \"FETCH/FAIL\"\n\nexport const actions = {\n  fetchStart: ({ fetchId }) => ({ type: START, fetchId }),\n  fetchSuccess: ({ fetchId, response }) => ({\n    type: SUCCESS,\n    fetchId,\n    response,\n  }),\n  fetchFail: ({ fetchId, error }) => ({ type: FAIL, fetchId, error }),\n}\n\nconst INITIAL_FETCH_STATE = {\n  fetching: false,\n  error: \"\",\n  response: undefined,\n  fetchedAt: \"\",\n  respondedAt: \"\",\n}\n\nfunction getFetchState(state, fetchId) {\n  return state[fetchId] || INITIAL_FETCH_STATE\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case START: {\n      const { fetchId } = action\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: true,\n          error: \"\",\n        },\n      }\n    }\n    case SUCCESS: {\n      const { fetchId, response } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          response,\n          fetchedAt: now,\n          respondedAt: now,\n        },\n      }\n    }\n    case FAIL: {\n      const { fetchId, error } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          error,\n          fetchedAt: now,\n        },\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getFetchState: (state, fetchId) => state[fetchId] || INITIAL_FETCH_STATE,\n}\n","const UPDATE_ONE = \"BY_ID/UPDATE_ONE\"\nconst UPDATE_MANY = \"BY_ID/UPDATE_MANY\"\n\nexport const actions = {\n  updateOne: ({ id, update }) => ({ type: UPDATE_ONE, id, update }),\n  updateMany: ({ update }) => ({ type: UPDATE_MANY, update }),\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_ONE: {\n      const { id, update } = action\n\n      return {\n        ...state,\n        [id]: update(state[id]),\n      }\n    }\n    case UPDATE_MANY: {\n      const { update } = action\n\n      return {\n        ...state,\n        ...update(state),\n      }\n    }\n    default:\n      return state\n  }\n}\n","import * as byId from \"./byId\"\n\nconst UPDATE_ONE = \"CACHE/UPDATE_ONE\"\nconst UPDATE_MANY = \"CACHE/UPDATE_MANY\"\n\nexport const actions = {\n  updateOneCache: ({ name, id, update }) => ({\n    type: UPDATE_ONE,\n    name,\n    id,\n    update,\n  }),\n  updateManyCache: ({ name, update }) => ({ type: UPDATE_MANY, name, update }),\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_ONE: {\n      const { name, id, update } = action\n\n      return {\n        ...state,\n        [name]: byId.reducer(\n          state[name],\n          byId.actions.updateOne({ id, update })\n        ),\n      }\n    }\n    case UPDATE_MANY: {\n      const { name, update } = action\n\n      return {\n        ...state,\n        [name]: byId.reducer(state[name], byId.actions.updateMany({ update })),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getOne: (state, name, id) => (state[name] ? state[name][id] : undefined),\n  getMany: (state, name) => state[name] || {},\n}\n","import { combineReducers } from \"redux\"\nimport * as divSize from \"./divSize\"\nimport * as fetch from \"./fetch\"\nimport * as cache from \"./cache\"\n\nexport const reducer = combineReducers({\n  divSize: divSize.reducer,\n  fetch: fetch.reducer,\n  cache: cache.reducer,\n})\n\nexport const actions = {\n  divSize: divSize.actions,\n  fetch: fetch.actions,\n  cache: cache.actions,\n}\n\nexport const selectors = {\n  fetch: fetch.selectors,\n  cache: cache.selectors,\n}\n","export function compose(...funcs) {\n  return val =>\n    funcs\n      .slice()\n      .reverse()\n      .reduce((v, f) => {\n        return f(v)\n      }, val)\n}\n\nexport function chunk(arr, size) {\n  let chunks = []\n\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size))\n  }\n\n  return chunks\n}\n\nexport function get(val, keys, defaultVal) {\n  for (let key of keys) {\n    if (val == undefined) {\n      break\n    }\n    val = val[key]\n  }\n\n  if (val == undefined) {\n    return defaultVal\n  }\n\n  return val\n}\n","const TIME_ZONE_OFFSET = parseInt(process.env.REACT_APP_TIME_ZONE_OFFSET)\n\nasync function sendQuery(url, query, variables) {\n  const res = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  const text = await res.text()\n\n  try {\n    const res = JSON.parse(text)\n\n    if (res.errors) {\n      console.error(\"GraphQL error\", res.errors)\n      throw new Error(res.errors[0].message)\n    }\n\n    return res\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function getPowerPlants() {\n  const query = `\n    query {\n      powerPlants {\n        count\n        data {\n          id\n          devices {\n            id\n            model\n          }\n        }\n      }\n    }\n  `\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query)\n  return res.data.powerPlants\n}\n\nexport async function getPowerPlant(params) {\n  const { id } = params\n\n  const query = `\n    query PowerPlant($id: String!) {\n      powerPlant(id: $id) {\n        id\n        devices {\n          id\n          model\n        }\n      }\n    }\n  `\n\n  const variables = { id }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  return res.data.powerPlant\n}\n\nexport async function getEnergy(params) {\n  const query = `\n    query Energy($plantId: String!, $deviceId: String!, $unit: Unit! $timestamp: TimeZoneRangeInput!) {\n      energy(plantId: $plantId, deviceId: $deviceId, unit: $unit, timestamp: $timestamp) {\n        timestamp\n        energy\n      }\n    }\n  `\n\n  const {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: { lte, gte },\n  } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: {\n      timeZoneOffset: TIME_ZONE_OFFSET,\n      lte,\n      gte,\n    },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  const { energy } = res.data\n\n  // replace 0 energy (possibly missing data) with min energy\n  let min = Math.min(...energy.filter(d => d.energy > 0).map(d => d.energy))\n  for (let i = 0; i < energy.length; i++) {\n    min = Math.max(min, energy[i].energy)\n\n    if (energy[i].energy == 0) {\n      energy[i].energy = min\n    }\n  }\n\n  const data = []\n\n  for (let i = 1; i < energy.length; i++) {\n    const diff = Math.floor(energy[i].energy) - Math.floor(energy[i - 1].energy)\n\n    data.push({\n      timestamp: energy[i].timestamp,\n      energy: energy[i].energy,\n      unixTime: Math.floor(new Date(energy[i].timestamp).getTime() / 1000),\n      diff,\n    })\n\n    if (diff < 0) {\n      console.warn(\n        `Found negative energy diff for plant ${plantId} device ${deviceId}`,\n        data\n      )\n    }\n  }\n\n  return data\n}\n\nexport async function getSimulationData(params) {\n  const { plantId, yearGte, yearLte } = params\n\n  const query = `\n      query Simulation($plantId: String!, $year: YearRangeInput!) {\n        simulation(plantId: $plantId, year: $year) {\n          year\n          month\n          energy\n        }\n      }\n    `\n\n  const variables = {\n    plantId,\n    year: { gte: yearGte, lte: yearLte },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n\n  return res.data.simulation.map(({ year, month, energy }) => ({\n    year,\n    month,\n    energy: parseFloat(energy),\n  }))\n}\n\nexport async function getLogs(params) {\n  const query = `\n    query Logs($plantId: String!, $deviceId: String!, $timestamp: TimestampRangeInput!) {\n      logs(plantId: $plantId, deviceId: $deviceId, timestamp: $timestamp) {\n        timestamp\n        energy\n        power\n        current\n        voltage\n        insulationResistance\n        residualCurrent\n      }\n    }\n  `\n\n  const { plantId, deviceId, lte, gte, step = 1 } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    timestamp: {\n      lte,\n      gte,\n      step,\n    },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  const { logs } = res.data\n\n  return logs.map(log => ({\n    ...log,\n    energy: parseFloat(log.energy),\n    power: parseFloat(log.power),\n    current: parseFloat(log.current),\n    voltage: parseFloat(log.voltage),\n    insulationResistance: parseFloat(log.insulationResistance),\n    residualCurrent: parseFloat(log.residualCurrent),\n    unixTime: Math.floor(new Date(log.timestamp).getTime() / 1000),\n  }))\n}\n","import React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions, selectors } from \"../reducer\"\n\nfunction useDebounce(val, delay) {\n  const [debouncedVal, setDebouncedVal] = useState(val)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedVal(val)\n    }, delay)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [val])\n\n  return debouncedVal\n}\n\nexport default function withFetch(\n  request,\n  {\n    name = \"fetch\",\n    getFetchId = (name, params) => name,\n    getParams = props => ({}),\n    shouldFetch = (props, response, params) => true,\n    saveCache = (props, response, params) => {},\n    debounce = 0,\n  } = {}\n) {\n  return Component => {\n    function WithFetch(props) {\n      const {\n        fetching,\n        error,\n        response,\n        fetchedAt,\n        respondedAt,\n        fetchStart,\n        fetchSuccess,\n        fetchFail,\n        ...rest\n      } = props\n\n      const params = getParams(props)\n      const fetchId = getFetchId(name, params)\n      const paramId = useDebounce(JSON.stringify(params), debounce)\n\n      async function fetch() {\n        if (!shouldFetch(props, response, params)) {\n          return\n        }\n\n        if (fetching) {\n          return\n        }\n\n        fetchStart({ fetchId })\n\n        try {\n          const response = await request(params, props)\n\n          fetchSuccess({ fetchId, response })\n          saveCache(props, response, params)\n        } catch (error) {\n          fetchFail({ fetchId, error: error.message })\n        }\n      }\n\n      useEffect(() => {\n        fetch()\n      }, [paramId])\n\n      return (\n        <Component\n          {...rest}\n          {...{\n            [name]: {\n              fetching,\n              error,\n              fetch,\n              response,\n              fetchedAt,\n              respondedAt,\n              params,\n            },\n          }}\n        />\n      )\n    }\n\n    WithFetch.propTypes = {\n      fetching: PropTypes.bool.isRequired,\n      error: PropTypes.string.isRequired,\n      response: PropTypes.any,\n      respondedAt: PropTypes.string.isRequired,\n      fetchedAt: PropTypes.string.isRequired,\n      fetchStart: PropTypes.func.isRequired,\n      fetchSuccess: PropTypes.func.isRequired,\n      fetchFail: PropTypes.func.isRequired,\n    }\n\n    return connect(\n      (state, props) => {\n        const params = getParams(props)\n        const fetchId = getFetchId(name, params)\n\n        return selectors.fetch.getFetchState(state.fetch, fetchId)\n      },\n      actions.fetch\n    )(WithFetch)\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Message, Button } from \"semantic-ui-react\"\n\nexport function Loading(props) {\n  if (props.loading) {\n    return props.renderLoading()\n  }\n\n  if (props.error) {\n    return (\n      <Message negative>\n        <p>{props.error}</p>\n        <Button onClick={props.onClickRetry}>Retry</Button>\n      </Message>\n    )\n  }\n\n  return props.children\n}\n\nLoading.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onClickRetry: PropTypes.func.isRequired,\n  renderLoading: PropTypes.func.isRequired,\n}\n\nLoading.defaultProps = {\n  renderLoading: () => <div>Loading...</div>,\n}\n\nexport default Loading\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styles from \"./LinkButton.module.css\"\n\nexport function LinkButton(props) {\n  const { onClick, children } = props\n\n  return (\n    <button className={styles.LinkButton} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default LinkButton\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport LinkButton from \"../../components/LinkButton\"\nimport styles from \"./PlantHeader.module.css\"\n\nexport function PlantHeader(props) {\n  const { plant, onClick } = props\n\n  return (\n    <div className={styles.component}>\n      <LinkButton onClick={onClick}>Plant {plant.id}</LinkButton>\n      <div className={styles.devices}>{plant.devices.length} devices</div>\n    </div>\n  )\n}\n\nPlantHeader.defaultProps = {\n  plant: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    devices: PropTypes.array.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default PlantHeader\n","import moment from \"moment-timezone\"\n\nexport function timeZone(str) {\n  return moment.tz(str, process.env.REACT_APP_TIME_ZONE)\n}\n\nexport function now() {\n  return moment().unix()\n}\n\nexport function getMonth(unixTime) {\n  return moment.tz(unixTime * 1000, process.env.REACT_APP_TIME_ZONE).month()\n}\n","function getNumDigits(x) {\n  return Math.max(Math.floor(Math.log10(Math.abs(x))), 0) + 1\n}\n\nfunction getDigit(x, n) {\n  return Math.floor((x / Math.pow(10, n - 1)) % 10)\n}\n\nexport function roundInterval(max, min, numSteps) {\n  const numDigits = getNumDigits((max - min) / numSteps)\n  const lastDigit = getDigit((max - min) / numSteps, numDigits)\n\n  // mapping from last digit to scale\n  // 9, 10 -> 10\n  // 7, 8 -> 8\n  // ...\n  // 1, 2 -> 1\n  const scale = 2 * Math.ceil(lastDigit / 2)\n  return scale * 10 ** (numDigits - 1)\n}\n\nexport function bound(val, min = -Infinity, max = Infinity) {\n  return Math.min(Math.max(val, min), max)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function GraphPlaceholder(props) {\n  const { width, height, backgroundColor } = props\n\n  return <div style={{ width, height, backgroundColor }} />\n}\n\nGraphPlaceholder.defaultProps = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n}\n\nexport default GraphPlaceholder\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Graph } from \"react-canvas-time-series\"\nimport { get } from \"../../util\"\nimport { timeZone } from \"../../util/date\"\nimport { roundInterval } from \"../../util/math\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport GraphPlaceholder from \"./GraphPlaceholder\"\nimport styles from \"./FiscalEnergyGraph.module.css\"\n\nconst MIN_Y_MAX = 1000\nconst X_MIN = 0.5\nconst X_MAX = 12.5\nconst Y_MIN = 0\n\nexport function FiscalEnergyGraph(props) {\n  const { width, height, getEnergy } = props\n\n  const { fetching, fetchedAt, fetch, error } = getEnergy\n\n  const simulation = get(getEnergy, [\"response\", \"simulation\"], [])\n  const data = get(getEnergy, [\"response\", \"data\"], [])\n  const yMax = Math.max(MIN_Y_MAX, get(getEnergy, [\"response\", \"yMax\"], 0))\n  const energyLastMonth = get(data, [data.length - 2, \"diff\"], 0)\n  const energyCurrentMonth = get(data, [data.length - 1, \"diff\"], 0)\n\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  return (\n    <Loading\n      loading={fetching || !fetchedAt}\n      error={error}\n      onClickRetry={fetch}\n      renderLoading={() => (\n        <GraphPlaceholder\n          width={width}\n          height={height}\n          backgroundColor=\"whitesmoke\"\n        />\n      )}\n    >\n      <div>\n        <div className={styles.stats}>\n          <div className={styles.month}>\n            Last month{\" \"}\n            <span className={styles.number}>\n              {energyLastMonth.toLocaleString()} kWh\n            </span>\n          </div>\n          <div className={styles.month}>\n            This month{\" \"}\n            <span className={styles.number}>\n              {energyCurrentMonth.toLocaleString()} kWh\n            </span>\n          </div>\n        </div>\n        <Graph\n          width={width}\n          height={height}\n          backgroundColor=\"beige\"\n          animate={false}\n          xMin={X_MIN}\n          xMax={X_MAX}\n          yMin={Y_MIN}\n          yMax={yMax}\n          xAxisAt=\"bottom\"\n          xAxisHeight={20}\n          xAxisLineColor=\"lightgrey\"\n          xTickInterval={1}\n          xTickLength={5}\n          showXLine={false}\n          yAxisAt=\"right\"\n          yAxisWidth={70}\n          yAxisLineColor=\"lightgrey\"\n          yTickInterval={yTickInterval}\n          renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n          yLabels={[\n            {\n              y: yMax,\n              width: 70,\n              height: 20,\n              render: y => `${y.toLocaleString()} kWh`,\n              color: \"white\",\n              backgroundColor: \"blue\",\n              drawLine: true,\n              lineColor: \"blue\",\n            },\n          ]}\n          graphs={[\n            {\n              type: \"bars\",\n              barWidth: 16,\n              getBarColor: () => \"orange\",\n              data,\n            },\n            {\n              type: \"line\",\n              data: simulation,\n              lineColor: \"red\",\n              step: 1,\n            },\n          ]}\n        />\n      </div>\n    </Loading>\n  )\n}\n\nFiscalEnergyGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n    error: PropTypes.string.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      simulation: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n      yMax: PropTypes.number.isRequired,\n    }),\n  }),\n}\n\nasync function getEnergy(params, props) {\n  const { plantId } = params\n\n  const now = new Date()\n\n  const year = now.getFullYear()\n\n  const simulation = (await api.getSimulationData({\n    plantId,\n    yearGte: year,\n    yearLte: year,\n  })).map(({ year, month, energy }) => ({\n    x: month + 1,\n    y: energy,\n  }))\n\n  // Find the first cluster controller\n  const device = props.plant.devices.find(\n    device => device.model == \"Cluster Controller\"\n  )\n\n  const res = await api.getEnergy({\n    plantId,\n    deviceId: device.id,\n    unit: \"MONTH\",\n    timestamp: {\n      // last year December\n      gte: timeZone(now.toISOString())\n        .startOf(\"year\")\n        .subtract(1, \"month\")\n        .toISOString(),\n      // end of current month\n      lte: timeZone(now.toISOString())\n        .endOf(\"month\")\n        .toISOString(),\n    },\n  })\n\n  const data = res.map((energy, i) => ({\n    ...energy,\n    x: i + 1,\n    y: energy.diff,\n  }))\n\n  const yMax = Math.max(...data.map(d => d.y), ...simulation.map(d => d.y))\n\n  return {\n    data,\n    yMax,\n    simulation,\n  }\n}\n\nexport default withFetch(getEnergy, {\n  name: \"getEnergy\",\n  getFetchId: (name, params) => `${name}-${params.plantId}`,\n  getParams: props => ({ plantId: props.plant.id }),\n  shouldFetch: (props, response) => !response,\n})(FiscalEnergyGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose, chunk } from \"../../util\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport PlantHeader from \"./PlantHeader\"\nimport FiscalEnergyGraph from \"./FiscalEnergyGraph\"\n\nconst PADDING = 10\nconst MIN_GRAPH_WIDTH = 340\nconst GRAPH_HEIGHT = 210\n\nexport function getNumGraphsPerRow(width) {\n  if (width < MIN_GRAPH_WIDTH * 2 + 2 * PADDING) {\n    return 1\n  }\n  if (width < MIN_GRAPH_WIDTH * 3 + 2 * PADDING) {\n    return 2\n  }\n  if (width < MIN_GRAPH_WIDTH * 5 + 2 * PADDING) {\n    return 3\n  }\n\n  return 5\n}\n\nfunction Graph(props) {\n  const { width, plant, onClick } = props\n  const padding = 10\n\n  return (\n    <div>\n      <div className={styles.plantHeader}>\n        <PlantHeader plant={plant} onClick={onClick} />\n      </div>\n      <div style={{ padding, paddingTop: 0 }}>\n        <FiscalEnergyGraph\n          width={width - 2 * padding}\n          height={GRAPH_HEIGHT}\n          plant={plant}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function HomePage(props) {\n  const { divSize, getPowerPlants } = props\n\n  const numGraphsPerRow = getNumGraphsPerRow(divSize.width)\n  const graphWidth = Math.max(\n    Math.floor((divSize.width - 2 * PADDING) / numGraphsPerRow),\n    MIN_GRAPH_WIDTH\n  )\n\n  const count = get(getPowerPlants, [\"response\", \"count\"], 0)\n  const data = get(getPowerPlants, [\"response\", \"data\"], [])\n\n  return (\n    <Loading\n      loading={getPowerPlants.fetching || !getPowerPlants.fetchedAt}\n      error={getPowerPlants.error}\n      onClickRetry={getPowerPlants.fetch}\n    >\n      <div className={styles.count}>{count} power plants</div>\n      <div className={styles.col}>\n        {chunk(data, numGraphsPerRow).map((plants, i) => (\n          <div key={i} className={styles.row}>\n            {plants.map(plant => (\n              <Graph\n                key={plant.id}\n                width={graphWidth}\n                plant={plant}\n                onClick={() => props.history.push(`/plants/${plant.id}`)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </Loading>\n  )\n}\n\nHomePage.propTypes = {\n  divSize: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  getPowerPlants: PropTypes.shape({\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      data: PropTypes.array.isRequired,\n      count: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(api.getPowerPlants, {\n    name: \"getPowerPlants\",\n    shouldFetch: (props, response) => !response,\n  })\n)(HomePage)\n","const COLORS = [\n  \"#1CE6FF\",\n  \"#FF34FF\",\n  \"#FF4A46\",\n  \"#008941\",\n  \"#006FA6\",\n  \"#A30059\",\n  \"#FFDBE5\",\n  \"#7A4900\",\n  \"#0000A6\",\n  \"#63FFAC\",\n  \"#B79762\",\n  \"#004D43\",\n  \"#8FB0FF\",\n  \"#997D87\",\n  \"#5A0007\",\n  \"#809693\",\n  \"#1B4400\",\n  \"#4FC601\",\n  \"#3B5DFF\",\n  \"#4A3B53\",\n  \"#FF2F80\",\n  \"#61615A\",\n  \"#BA0900\",\n  \"#6B7900\",\n  \"#00C2A0\",\n  \"#FFAA92\",\n  \"#FF90C9\",\n  \"#B903AA\",\n  \"#D16100\",\n  \"#7B4F4B\",\n  \"#A1C299\",\n  \"#300018\",\n  \"#0AA6D8\",\n  \"#013349\",\n  \"#00846F\",\n  \"#372101\",\n  \"#FFB500\",\n  \"#C2FFED\",\n  \"#A079BF\",\n  \"#CC0744\",\n  \"#C0B9B2\",\n  \"#C2FF99\",\n  \"#00489C\",\n  \"#6F0062\",\n  \"#0CBD66\",\n  \"#EEC3FF\",\n  \"#456D75\",\n  \"#B77B68\",\n  \"#7A87A1\",\n  \"#788D66\",\n  \"#885578\",\n  \"#FAD09F\",\n  \"#FF8A9A\",\n  \"#D157A0\",\n  \"#BEC459\",\n  \"#456648\",\n  \"#0086ED\",\n  \"#886F4C\",\n\n  \"#34362D\",\n  \"#B4A8BD\",\n  \"#00A6AA\",\n  \"#452C2C\",\n  \"#636375\",\n  \"#A3C8C9\",\n  \"#FF913F\",\n  \"#938A81\",\n  \"#575329\",\n  \"#00FECF\",\n  \"#B05B6F\",\n  \"#8CD0FF\",\n  \"#3B9700\",\n  \"#04F757\",\n  \"#C8A1A1\",\n  \"#1E6E00\",\n  \"#7900D7\",\n  \"#A77500\",\n  \"#6367A9\",\n  \"#A05837\",\n  \"#6B002C\",\n  \"#772600\",\n  \"#D790FF\",\n  \"#9B9700\",\n  \"#549E79\",\n  \"#FFF69F\",\n  \"#72418F\",\n  \"#BC23FF\",\n  \"#99ADC0\",\n  \"#3A2465\",\n  \"#922329\",\n  \"#5B4534\",\n  \"#404E55\",\n  \"#0089A3\",\n  \"#CB7E98\",\n  \"#A4E804\",\n  \"#324E72\",\n  \"#6A3A4C\",\n  \"#83AB58\",\n  \"#D1F7CE\",\n  \"#004B28\",\n  \"#C8D0F6\",\n  \"#A3A489\",\n  \"#806C66\",\n  \"#BF5650\",\n  \"#E83000\",\n  \"#66796D\",\n  \"#DA007C\",\n  \"#FF1A59\",\n  \"#8ADBB4\",\n  \"#5B4E51\",\n  \"#C895C5\",\n  \"#320033\",\n  \"#FF6832\",\n  \"#66E1D3\",\n  \"#CFCDAC\",\n  \"#D0AC94\",\n  \"#7ED379\",\n  \"#012C58\",\n]\n\nexport default COLORS\n","import React, { useState } from \"react\"\n\nexport default function withParams(initialParams = {}) {\n  return Component => {\n    function WithParams(props) {\n      const [params, setParams] = useState(initialParams)\n\n      return <Component {...props} params={params} setParams={setParams} />\n    }\n\n    return WithParams\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function ColorBox(props) {\n  const { size, margin, color } = props\n\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        margin: margin,\n        backgroundColor: color,\n      }}\n    />\n  )\n}\n\nColorBox.defaultProps = {\n  color: \"red\",\n  size: 10,\n  margin: 5,\n}\n\nColorBox.propTypes = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  margin: PropTypes.number.isRequired,\n}\n\nexport default ColorBox\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Checkbox, Dropdown, Button } from \"semantic-ui-react\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./DeviceFilter.module.css\"\n\nfunction Row(props) {\n  const { onClick, checked, color, text } = props\n\n  return (\n    <Dropdown.Item onClick={onClick}>\n      <div className={styles.cell}>\n        <Checkbox checked={!!checked} />\n        <ColorBox color={color} />\n        <div>{text}</div>\n      </div>\n    </Dropdown.Item>\n  )\n}\n\nexport function DeviceFilter(props) {\n  const { devices, checked, colors, onToggle } = props\n\n  const [open, setOpen] = useState(false)\n\n  function onClick(id) {\n    if (id == \"all\") {\n      onToggle(\"all\", devices.map(({ id }) => id))\n    } else {\n      onToggle(id)\n    }\n  }\n\n  const count = Object.values(checked).filter(v => v).length\n  const all = count == devices.length\n\n  return (\n    <Button.Group basic size=\"small\">\n      <Dropdown open={open}>\n        <Dropdown.Menu style={{ maxHeight: 200, overflow: \"auto\" }}>\n          <Row\n            onClick={() => onClick(\"all\")}\n            checked={all}\n            color=\"transparent\"\n            text={`All ${devices.length} devices`}\n          />\n          <Dropdown.Divider />\n          {devices.map((device, i) => (\n            <Row\n              key={i}\n              onClick={() => onClick(device.id)}\n              checked={checked[device.id]}\n              color={colors[device.id]}\n              text={`${device.model} - ${device.id}`}\n            />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Button\n        labelPosition=\"right\"\n        icon=\"caret down\"\n        content={`Showing ${count} devices`}\n        onClick={() => setOpen(!open)}\n      />\n    </Button.Group>\n  )\n}\n\nDeviceFilter.propTypes = {\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  checked: PropTypes.object.isRequired,\n  colors: PropTypes.object.isRequired,\n}\n\nexport default DeviceFilter\n","import { useState } from \"react\"\n\nexport default function useToggle(ids) {\n  const [checked, setState] = useState(\n    ids.reduce((checked, id) => {\n      checked[id] = true\n      return checked\n    }, {})\n  )\n\n  function _toggle(id) {\n    setState({\n      ...checked,\n      [id]: !checked[id],\n    })\n  }\n\n  function _toggleAll(ids = []) {\n    const all = Object.values(checked).filter(v => v).length == ids.length\n\n    if (all) {\n      setState({})\n    } else {\n      setState(\n        ids.reduce((checked, id) => {\n          checked[id] = true\n          return checked\n        }, {})\n      )\n    }\n  }\n\n  function toggle(id, ids) {\n    if (id == \"all\") {\n      _toggleAll(ids)\n    } else {\n      _toggle(id)\n    }\n  }\n\n  return [checked, toggle]\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport styles from \"./TimeUnitButtons.module.css\"\n\nexport const UNITS = [\"MONTH\", \"DAY\", \"HOUR\"]\n\nconst TEXT = {\n  MONTH: \"Month\",\n  DAY: \"Day\",\n  HOUR: \"Hour\",\n}\n\nexport function TimeUnitButtons(props) {\n  const { active } = props\n\n  function getColor(key) {\n    return key == active ? \"yellow\" : undefined\n  }\n\n  return (\n    <div className={styles.TimeUnitButtons}>\n      {UNITS.map(unit => (\n        <Button\n          key={unit}\n          color={getColor(unit)}\n          onClick={() => props.onClick(unit)}\n        >\n          {TEXT[unit]}\n        </Button>\n      ))}\n    </div>\n  )\n}\n\nTimeUnitButtons.propTypes = {\n  active: PropTypes.oneOf(UNITS).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default TimeUnitButtons\n","import React from \"react\"\n\nexport default function disableScroll(Component) {\n  function DisableScroll(props) {\n    function disableScroll() {\n      document.body.style.overflow = \"hidden\"\n    }\n\n    function enableScroll() {\n      document.body.style.overflow = \"unset\"\n    }\n\n    return (\n      <Component\n        {...props}\n        disableScroll={disableScroll}\n        enableScroll={enableScroll}\n      />\n    )\n  }\n\n  return DisableScroll\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./Labels.module.css\"\n\nexport function Labels(props) {\n  const { timestamp, labels } = props\n\n  return (\n    <div>\n      <div className={styles.timestamp}>{timestamp}</div>\n      <div className={styles.labels}>\n        {labels.map(label => (\n          <div key={label.id} className={styles.label}>\n            <ColorBox color={label.color} />\n            <div>{label.value}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nLabels.propTypes = {\n  timestamp: PropTypes.string.isRequired,\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default Labels\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  layout,\n  zoomable,\n  draggable,\n} from \"react-canvas-time-series\"\nimport { get } from \"../../../util\"\nimport { timeZone } from \"../../../util/date\"\nimport { roundInterval } from \"../../../util/math\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport Labels from \"../../../components/Labels\"\nimport styles from \"./BarGraph.module.css\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst MIN_BAR_WIDTH = 5\nconst BAR_PADDING = 5\n\nconst HEIGHT = 200\n\nconst Y_MIN = 0\n\nfunction getNumXTicks(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return 12\n    case \"DAY\":\n      return 6\n    case \"HOUR\":\n      return 6\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction renderXLabel(unit, x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  const now = new Date()\n\n  switch (unit) {\n    case \"MONTH\":\n      return timeZone(now.toISOString())\n        .startOf(\"month\")\n        .add(Math.round(x), \"month\")\n        .format(\"YYYY-MM\")\n    case \"DAY\":\n      return timeZone(now.toISOString())\n        .startOf(\"day\")\n        .add(Math.round(x), \"day\")\n        .format(\"YYYY-MM-DD\")\n    case \"HOUR\":\n      return timeZone(now.toISOString())\n        .startOf(\"hour\")\n        .add(Math.round(x), \"hour\")\n        .format(\"YYYY-MM-DD HH:mm\")\n    default:\n      return\n  }\n}\n\nfunction renderYLabel(y) {\n  if (!y) {\n    return \"0 kWh\"\n  }\n\n  return `${Math.round(y).toLocaleString()} kWh`\n}\n\nexport function BarGraph(props) {\n  const {\n    width,\n    data,\n    yMaxs,\n    xs,\n    loading,\n    devices,\n    checked,\n    colors,\n    xMin,\n    xMax,\n    unit,\n    onChangeXRange,\n  } = props\n\n  const [mouse, setMouse] = useState({\n    x: undefined,\n    y: undefined,\n  })\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    diffs: {},\n  })\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n  const yMax = Math.max(...checkedDevices.map(device => yMaxs[device.id]), 10)\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouse(mouse)\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(xs, x)\n\n      const timestamp = get(data, [get(devices, [0, \"id\"]), i, \"timestamp\"])\n\n      if (timestamp) {\n        setNearest({\n          timestamp,\n          diffs: checkedDevices.reduce((diffs, device) => {\n            diffs[device.id] = get(data, [device.id, i, \"diff\"], 0)\n            return diffs\n          }, {}),\n        })\n      }\n    } else {\n      props.enableScroll()\n\n      setMouse({\n        x: undefined,\n        y: undefined,\n      })\n\n      setNearest({\n        timestamp: undefined,\n        diffs: {},\n      })\n    }\n\n    onChangeXRange(xRange)\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouse({\n      x: undefined,\n      y: undefined,\n    })\n\n    setNearest({\n      timestamp: undefined,\n      diffs: {},\n    })\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    onChangeXRange(xRange)\n  }\n\n  const barWidth = Math.max(\n    MIN_BAR_WIDTH,\n    Math.floor(graph.width / (xMax - xMin)) - 2 * BAR_PADDING\n  )\n\n  // TODO xTickInterval based on graph.width\n  const xTickInterval = Math.max(\n    1,\n    Math.floor((xMax - xMin) / getNumXTicks(unit))\n  )\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  const graphs = checkedDevices.map(device => ({\n    type: \"bars\",\n    barWidth,\n    getBarColor: () => colors[device.id],\n    data: data[device.id] || [],\n  }))\n\n  return (\n    <div className={styles.component}>\n      <Graph\n        width={width}\n        height={HEIGHT}\n        backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n        mouse={mouse}\n        xMin={xMin}\n        xMax={xMax}\n        yMin={Y_MIN}\n        yMax={yMax}\n        xAxisAt=\"bottom\"\n        xAxisHeight={20}\n        xAxisLineColor=\"lightgrey\"\n        xTickInterval={xTickInterval}\n        xTickLength={5}\n        renderXTick={x => renderXLabel(unit, x)}\n        showXLine={false}\n        yAxisAt=\"right\"\n        yAxisWidth={70}\n        yAxisLineColor=\"lightgrey\"\n        yTickInterval={yTickInterval}\n        yTickLength={5}\n        renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n        graphs={graphs}\n        xLabels={[\n          {\n            x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x),\n            width: 100,\n            height: 20,\n            render: x => renderXLabel(unit, x),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        yLabels={[\n          {\n            y: yMax,\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"black\",\n            backgroundColor: \"orange\",\n            lineColor: \"orange\",\n          },\n          {\n            y: canvas.math.getY(graph.height, graph.top, yMax, Y_MIN, mouse.y),\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        onMouseMove={onMouseMove}\n        onMouseOut={onMouseOut}\n        onWheel={onWheel}\n      />\n      <div className={styles.labels}>\n        <Labels\n          timestamp={nearest.timestamp}\n          labels={checkedDevices.map(device => ({\n            id: device.id,\n            color: colors[device.id],\n            value: `${get(nearest.diffs, [device.id], 0)} kWh`,\n          }))}\n        />\n      </div>\n    </div>\n  )\n}\n\nBarGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  yMaxs: PropTypes.object.isRequired,\n  xs: PropTypes.arrayOf(PropTypes.number).isRequired,\n  loading: PropTypes.bool.isRequired,\n  unit: PropTypes.oneOf([\"MONTH\", \"DAY\", \"HOUR\"]),\n  onChangeXRange: PropTypes.func.isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nexport default disableScroll(BarGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { get, compose } from \"../../../util\"\nimport { timeZone, now, getMonth } from \"../../../util/date\"\nimport * as api from \"../../../api\"\nimport withFetch from \"../../../components/withFetch\"\nimport withParams from \"../../../components/withParams\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport useToggle from \"../../../components/useToggle\"\nimport styles from \"./index.module.css\"\nimport TimeUnitButtons, { UNITS } from \"./TimeUnitButtons\"\nimport BarGraph from \"./BarGraph\"\n\nconst NOW = now()\nconst CURRENT_MONTH = getMonth(NOW)\n\nfunction getDefaultXRange(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return {\n        xMin: -(CURRENT_MONTH + 0.5),\n        xMax: 11 - (CURRENT_MONTH + 0.5),\n      }\n    case \"DAY\":\n      return {\n        xMin: -30.5,\n        xMax: 0.5,\n      }\n    case \"HOUR\":\n      return {\n        xMin: -72.5,\n        xMax: 0.5,\n      }\n    default:\n      console.error(`Unknown unit ${unit}`)\n  }\n}\n\nexport function EnergyGraph(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    params,\n    setParams,\n    getEnergy,\n  } = props\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  function onClickTimeUnitButton(unit) {\n    setParams({\n      ...params,\n      unit,\n      ...getDefaultXRange(unit),\n    })\n  }\n\n  function onChangeXRange({ xMin, xMax }) {\n    setParams({\n      ...params,\n      xMin,\n      xMax,\n    })\n  }\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <div className={styles.filterCol}>\n          <TimeUnitButtons\n            active={params.unit}\n            onClick={onClickTimeUnitButton}\n          />\n        </div>\n        <div className={styles.filterCol}>\n          <DeviceFilter\n            devices={devices}\n            checked={checked}\n            colors={colors}\n            onToggle={toggle}\n          />\n        </div>\n      </div>\n      <BarGraph\n        plantId={plantId}\n        devices={devices}\n        width={graphWidth}\n        checked={checked}\n        colors={colors}\n        data={get(getEnergy.response, [\"data\"], {})}\n        yMaxs={get(getEnergy.response, [\"yMaxs\"], {})}\n        xs={get(getEnergy.response, [\"xs\"], [])}\n        loading={getEnergy.fetching}\n        {...params}\n        onChangeXRange={onChangeXRange}\n      />\n    </>\n  )\n}\n\nEnergyGraph.propTypes = {\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  graphWidth: PropTypes.number.isRequired,\n  colors: PropTypes.object.isRequired,\n  params: PropTypes.shape({\n    unit: PropTypes.oneOf(UNITS).isRequired,\n    xMin: PropTypes.number.isRequired,\n    xMax: PropTypes.number.isRequired,\n  }).isRequired,\n  setParams: PropTypes.func.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n  }).isRequired,\n}\n\nfunction getGte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) - 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getLte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) + 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getUnixTimeFromX(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .endOf(_unit)\n        .add(x, _unit)\n        .unix()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getXFromUnixTime({ xMin, xMax, tMin, tMax, t }) {\n  const d = (xMax - xMin) / (tMax - tMin)\n  const x0 = xMin - d * tMin\n\n  return Math.round(d * t + x0)\n}\n\nasync function getEnergy(params, props) {\n  const { plantId, deviceIds, unit, xMin, xMax } = params\n\n  const now = new Date()\n\n  const gte = getGte(unit, now, xMin)\n  const lte = getLte(unit, now, xMax)\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getEnergy({\n        plantId,\n        deviceId,\n        unit,\n        timestamp: {\n          gte,\n          lte,\n        },\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n  const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n\n  const data = res.reduce((map, { deviceId, data }) => {\n    map[deviceId] = data.map(d => ({\n      ...d,\n      x: getXFromUnixTime({\n        xMin: parseInt(xMin),\n        xMax: parseInt(xMax),\n        tMin,\n        tMax,\n        t: d.unixTime,\n      }),\n      y: d.diff,\n    }))\n\n    return map\n  }, {})\n\n  const yMaxs = res.reduce((yMaxs, { deviceId, data }) => {\n    yMaxs[deviceId] = Math.max(...data.map(d => d.diff), 0)\n\n    return yMaxs\n  }, {})\n\n  return {\n    data,\n    yMaxs,\n    xs: get(data, [deviceIds[0]], []).map(({ x }) => x),\n  }\n}\n\nexport default compose(\n  withParams({\n    unit: UNITS[0],\n    ...getDefaultXRange(UNITS[0]),\n  }),\n  withFetch(getEnergy, {\n    name: \"getEnergy\",\n    getFetchId: (name, params) => `${name}-${params.plantId}-${params.unit}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      unit: props.params.unit,\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {\n      // props.cacheEnergy({\n      //   id: getCacheId(props),\n      //   data: response,\n      // })\n    },\n    shouldFetch: () => true,\n    // shouldFetch: (props, response, params) => {\n    //   const {\n    //     energy: { data },\n    //   } = props\n    //\n    //   const { unit, xMin, xMax } = params\n    //\n    //   const now = new Date()\n    //   const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n    //   const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n    //\n    //   return (\n    //     data.length == 0 ||\n    //     tMin < data[0].unixTime ||\n    //     tMax > data[data.length - 1].unixTime\n    //   )\n    // },\n  })\n)(EnergyGraph)\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  zoomable,\n  draggable,\n  layout,\n} from \"react-canvas-time-series\"\nimport { roundInterval } from \"../../../util/math\"\nimport { timeZone } from \"../../../util/date\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst HEIGHT = 150\n\nfunction renderXLabel(x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  return timeZone(x * 1000).format(\"MM DD HH:mm\")\n}\n\nfunction renderYLabel(y, unit) {\n  if (!y) {\n    return `${y} ${unit}`\n  }\n\n  return `${Math.round(y).toLocaleString()} ${unit}`\n}\n\nexport function LineGraph(props) {\n  const { loading, width, lines, yMin, yMax, xMin, xMax, mouseX, unit } = props\n\n  const [mouseY, setMouseY] = useState()\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      setMouseY(mouse.y)\n    } else {\n      setMouseY()\n    }\n\n    props.onMouseMove(mouse, graph, xRange)\n  }\n\n  function onMouseOut() {\n    setMouseY()\n    props.onMouseOut()\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    props.onWheel(xRange)\n  }\n\n  const xTickInterval = 24 * 3600\n  const yTickInterval = roundInterval(yMax, yMin, 4)\n\n  const graphs = lines.map(line => ({\n    type: \"line\",\n    data: line.data,\n    lineColor: line.color,\n    step: 1,\n  }))\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const mouse = {\n    x: mouseX,\n    y: mouseY,\n  }\n\n  return (\n    <Graph\n      width={width}\n      height={HEIGHT}\n      backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n      mouse={mouse}\n      xMin={xMin}\n      xMax={xMax}\n      yMin={yMin}\n      yMax={yMax}\n      xAxisAt=\"bottom\"\n      xAxisHeight={20}\n      xAxisLineColor=\"lightgrey\"\n      xTickInterval={xTickInterval}\n      xTickLength={5}\n      renderXTick={renderXLabel}\n      showXLine={true}\n      yAxisAt=\"right\"\n      yAxisWidth={70}\n      yAxisLineColor=\"lightgrey\"\n      yTickInterval={yTickInterval}\n      yTickLength={5}\n      renderYTick={y => renderYLabel(y, unit)}\n      graphs={graphs}\n      xLabels={[\n        {\n          x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouseX),\n          width: 100,\n          height: 20,\n          render: renderXLabel,\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      yLabels={[\n        {\n          y: canvas.math.getY(graph.height, graph.top, yMax, yMin, mouseY),\n          width: 70,\n          height: 20,\n          render: y => renderYLabel(y, unit),\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      onMouseMove={onMouseMove}\n      onMouseOut={onMouseOut}\n      onWheel={onWheel}\n    />\n  )\n}\n\nLineGraph.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired,\n  xMin: PropTypes.number.isRequired,\n  xMax: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n  lines: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      data: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n  unit: PropTypes.oneOf([\"watts\", \"amp\", \"v\", \"kOhm\"]).isRequired,\n}\n\nexport default LineGraph\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport DatePicker from \"react-date-picker\"\nimport { canvas } from \"react-canvas-time-series\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../../util\"\nimport * as api from \"../../../api\"\nimport withParams from \"../../../components/withParams\"\nimport withFetch from \"../../../components/withFetch\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport useToggle from \"../../../components/useToggle\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport Labels from \"../../../components/Labels\"\nimport LineGraph from \"./LineGraph\"\nimport styles from \"./index.module.css\"\n\nconst X_MIN = Math.round(new Date().getTime() / 1000 - 5 * 24 * 3600)\nconst X_MAX = Math.round(new Date().getTime() / 1000)\n\n// const NOW = Math.round(new Date().getTime() / 1000)\n// const X_MIN = NOW - 9 * 24 * 3600\n// const X_MAX = NOW + 24 * 3600\n\nexport function InverterGraphs(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    getLogs,\n    params,\n    setParams,\n  } = props\n\n  const { fetching } = getLogs\n\n  const data = get(getLogs, [\"response\"], {})\n  const logs = get(data, [\"logs\"], {})\n  const unixTimes = get(data, [\"unixTimes\"], {})\n\n  const maxPower = get(data, [\"maxPower\"], 0)\n  const maxCurrent = get(data, [\"maxCurrent\"], 0)\n  const maxVoltage = get(data, [\"maxVoltage\"], 0)\n  const maxInsulationResistance = get(data, [\"maxInsulationResistance\"], 0)\n  const maxResidualCurrent = get(data, [\"maxResidualCurrent\"], 0)\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  const [mouseX, setMouseX] = useState()\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    power: {},\n    current: {},\n    voltage: {},\n    insulationResistance: {},\n    residualCurrent: {},\n  })\n\n  const [filterDates, setFilterDates] = useState({\n    gte: new Date(X_MIN * 1000),\n    lte: new Date(X_MAX * 1000),\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n\n  function setFilterDate(name, date) {\n    setFilterDates({\n      ...filterDates,\n      [name]: date,\n    })\n  }\n\n  function onClickFilter() {\n    setParams({\n      ...params,\n      xMin: Math.round(filterDates.gte.getTime() / 1000),\n      xMax: Math.round(filterDates.lte.getTime() / 1000),\n    })\n  }\n\n  function onMouseMove(mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouseX(mouse.x)\n\n      const { xMin, xMax } = xRange\n\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(unixTimes, x)\n\n      const unixTime = unixTimes[i]\n\n      if (unixTime) {\n        const nearest = {\n          timestamp: new Date(unixTime * 1000).toISOString(),\n          power: {},\n          current: {},\n          voltage: {},\n          insulationResistance: {},\n          residualCurrent: {},\n        }\n\n        for (const device of checkedDevices) {\n          nearest.power[device.id] = get(logs, [device.id, \"power\", i, \"y\"], 0)\n          nearest.current[device.id] = get(\n            logs,\n            [device.id, \"current\", i, \"y\"],\n            0\n          )\n          nearest.voltage[device.id] = get(\n            logs,\n            [device.id, \"voltage\", i, \"y\"],\n            0\n          )\n          nearest.insulationResistance[device.id] = get(\n            logs,\n            [device.id, \"insulationResistance\", i, \"y\"],\n            0\n          )\n          nearest.residualCurrent[device.id] = get(\n            logs,\n            [device.id, \"residualCurrent\", i, \"y\"],\n            0\n          )\n        }\n\n        setNearest(nearest)\n      }\n    } else {\n      props.enableScroll()\n\n      setMouseX()\n\n      setNearest({\n        timestamp: undefined,\n        power: {},\n        current: {},\n        voltage: {},\n        insulationResistance: {},\n        residualCurrent: {},\n      })\n    }\n\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouseX()\n\n    setNearest({\n      timestamp: undefined,\n      power: {},\n      current: {},\n      voltage: {},\n      insulationResistance: {},\n      residualCurrent: {},\n    })\n  }\n\n  function onWheel(xRange) {\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  const { xMin, xMax } = params\n\n  return (\n    <div>\n      <div className={styles.filters}>\n        <DeviceFilter\n          devices={devices}\n          checked={checked}\n          colors={colors}\n          onToggle={toggle}\n        />\n        <div className={styles.dateFilters}>\n          <DatePicker\n            format=\"yyyy-MM-dd\"\n            value={filterDates.gte}\n            disabled={fetching}\n            onChange={date => setFilterDate(\"gte\", date)}\n          />\n          <div> - </div>\n          <DatePicker\n            format=\"yyyy-MM-dd\"\n            value={filterDates.lte}\n            disabled={fetching}\n            onChange={date => setFilterDate(\"lte\", date)}\n          />\n        </div>\n        <Button loading={fetching} onClick={onClickFilter}>\n          Filter\n        </Button>\n      </div>\n      <h5 className={styles.graphHeader}>Power (watts)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"power\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"watts\"\n          yMax={maxPower}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.power, [device.id], 0)} watts`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Current (amp)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          plantId={plantId}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"current\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"amp\"\n          yMax={maxCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.current, [device.id], 0)} amp`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Voltage (v)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"voltage\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"v\"\n          yMax={maxVoltage}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.voltage, [device.id], 0)} v`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Insulation Resistance (kOhm)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"insulationResistance\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"kOhm\"\n          yMax={maxInsulationResistance}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(\n                nearest.insulationResistance,\n                [device.id],\n                0\n              )} kOhm`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Residual Current (mA)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"residualCurrent\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"mA\"\n          yMax={maxResidualCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.residualCurrent, [device.id], 0)} mA`,\n            }))}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nInverterGraphs.propTypes = {\n  graphWidth: PropTypes.number.isRequired,\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nasync function getLogs(params, props) {\n  const { plantId, deviceIds, xMin, xMax } = params\n\n  const gte = new Date(xMin * 1000).toISOString()\n  const lte = new Date(xMax * 1000).toISOString()\n  const step = 5\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getLogs({\n        plantId,\n        deviceId,\n        gte,\n        lte,\n        step,\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const unixTimes = get(res, [0, \"data\"], []).map(({ unixTime }) => unixTime)\n\n  let maxPower = 0\n  let maxCurrent = 0\n  let maxVoltage = 0\n  let maxInsulationResistance = 0\n  let maxResidualCurrent = 0\n\n  const logs = {}\n\n  for (const { deviceId, data } of res) {\n    logs[deviceId] = {\n      power: [],\n      current: [],\n      voltage: [],\n      insulationResistance: [],\n      residualCurrent: [],\n    }\n\n    for (const d of data) {\n      logs[deviceId].power.push({\n        x: d.unixTime,\n        y: d.power,\n      })\n\n      logs[deviceId].current.push({\n        x: d.unixTime,\n        y: d.current,\n      })\n\n      logs[deviceId].voltage.push({\n        x: d.unixTime,\n        y: d.voltage,\n      })\n\n      logs[deviceId].insulationResistance.push({\n        x: d.unixTime,\n        y: d.insulationResistance,\n      })\n\n      logs[deviceId].residualCurrent.push({\n        x: d.unixTime,\n        y: d.residualCurrent,\n      })\n\n      maxPower = Math.max(d.power, maxPower)\n      maxCurrent = Math.max(d.current, maxCurrent)\n      maxVoltage = Math.max(d.voltage, maxVoltage)\n      maxInsulationResistance = Math.max(\n        d.insulationResistance,\n        maxInsulationResistance\n      )\n      maxResidualCurrent = Math.max(d.residualCurrent, maxResidualCurrent)\n    }\n  }\n\n  return {\n    maxPower,\n    maxCurrent,\n    maxVoltage,\n    maxInsulationResistance,\n    maxResidualCurrent,\n    logs,\n    unixTimes,\n  }\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  disableScroll,\n  withParams({\n    xMin: X_MIN,\n    xMax: X_MAX,\n  }),\n  withFetch(getLogs, {\n    name: \"getLogs\",\n    getFetchId: (name, params) => `${name}-${params.plantId}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {},\n    shouldFetch: (props, repsonse, params) => true,\n  })\n)(InverterGraphs)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../util\"\nimport * as api from \"../../api\"\nimport COLORS from \"../../lib/colors\"\nimport { bound } from \"../../util/math\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport EnergyGraph from \"./EnergyGraph\"\nimport InverterGraphs from \"./InverterGraphs\"\n\nconst GRAPH_PADDING = 10\nconst MIN_GRAPH_WIDTH = 300\nconst MAX_GRAPH_WIDTH = 1200\n\nexport function PowerPlantDetailPage(props) {\n  const { divSize, getPowerPlant } = props\n\n  const devices = get(getPowerPlant, [\"response\", \"devices\"], [])\n\n  const colors = devices.reduce((colors, device, i) => {\n    colors[device.id] = COLORS[i]\n    return colors\n  }, {})\n\n  const graphWidth = bound(\n    divSize.width - 2 * GRAPH_PADDING,\n    MIN_GRAPH_WIDTH,\n    MAX_GRAPH_WIDTH\n  )\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <div className={styles.headerText}>\n          Plant {props.match.params.plantId}\n        </div>\n        <div className={styles.subHeader}>{devices.length} devices</div>\n      </div>\n      <Loading\n        loading={getPowerPlant.fetching || !getPowerPlant.fetchedAt}\n        error={getPowerPlant.error}\n        onClickRetry={getPowerPlant.fetch}\n      >\n        {devices.length > 0 && (\n          <>\n            <EnergyGraph\n              plantId={props.match.params.plantId}\n              devices={devices}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n            <InverterGraphs\n              plantId={props.match.params.plantId}\n              devices={devices.filter(\n                device => device.model != \"Cluster Controller\"\n              )}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n          </>\n        )}\n      </Loading>\n    </div>\n  )\n}\n\nPowerPlantDetailPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      plantId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  divSize: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  getPowerPlant: PropTypes.shape({\n    response: PropTypes.shape({\n      devices: PropTypes.array.isRequired,\n    }),\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(params => api.getPowerPlant(params), {\n    name: \"getPowerPlant\",\n    getFetchId: (name, params) => `${name}-${params.id}`,\n    getParams: props => ({ id: props.match.params.plantId }),\n    shouldFetch: (props, response) => !response,\n  })\n)(PowerPlantDetailPage)\n","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport styles from \"./App.module.css\"\nimport withDivSize from \"./components/withDivSize\"\nimport HomePage from \"./pages/HomePage\"\nimport PowerPlantDetailPage from \"./pages/PowerPlantDetailPage\"\n\nexport function App() {\n  return (\n    <div className={styles.component}>\n      <h5>Time zone: {process.env.REACT_APP_TIME_ZONE}</h5>\n\n      <Switch>\n        <Route path=\"/plants/:plantId\" component={PowerPlantDetailPage} />\n        <Route component={HomePage} />\n      </Switch>\n\n      <div className={styles.footer} />\n    </div>\n  )\n}\n\nexport default withDivSize(App)\n","import React, { useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions } from \"../reducer\"\n\nexport default function withDivSize(Component) {\n  function WithDivSize(props) {\n    const ref = useRef()\n\n    useEffect(() => {\n      function setDivSize() {\n        props.updateDivSize({\n          // size of div\n          height: ref.current.clientHeight,\n          width: ref.current.clientWidth,\n        })\n      }\n\n      setDivSize()\n\n      window.addEventListener(\"resize\", setDivSize)\n\n      return () => {\n        window.removeEventListener(\"resize\", setDivSize)\n      }\n    }, [])\n\n    return (\n      <div ref={ref}>\n        <Component {...props} />\n      </div>\n    )\n  }\n\n  WithDivSize.propTypes = {\n    updateDivSize: PropTypes.func.isRequired,\n  }\n\n  return connect(\n    undefined,\n    actions.divSize\n  )(WithDivSize)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { HashRouter as Router } from \"react-router-dom\"\n\n// redux\nimport { applyMiddleware, createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport { reducer } from \"./reducer\"\n\nlet middlewares = [thunk]\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(logger)\n}\n\nconst store = createStore(reducer, applyMiddleware(...middlewares))\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"FiscalEnergyGraph_stats__3j2T_\",\"month\":\"FiscalEnergyGraph_month__1qsdS\",\"number\":\"FiscalEnergyGraph_number__3ViBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"HomePage_count__3Q6q8\",\"col\":\"HomePage_col__33bFf\",\"row\":\"HomePage_row__i7JCH\",\"plantHeader\":\"HomePage_plantHeader__26-Kz\"};"],"sourceRoot":""}