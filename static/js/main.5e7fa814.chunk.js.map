{"version":3,"sources":["pages/PowerPlantDetailPage/EnergyGraph/index.module.css","components/Labels.module.css","App.module.css","pages/HomePage/PlantHeader.module.css","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.module.css","components/LinkButton.module.css","components/DeviceFilter.module.css","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.module.css","pages/PowerPlantDetailPage/InverterGraphs/index.module.css","reducer/divSize.js","reducer/fetch.js","reducer/byId.js","reducer/cache.js","reducer/index.js","util/index.js","api.js","components/withFetch.js","components/Loading.js","components/LinkButton.js","pages/HomePage/PlantHeader.js","util/date.js","util/math.js","pages/HomePage/GraphPlaceholder.js","pages/HomePage/FiscalEnergyGraph.js","pages/HomePage/index.js","lib/colors.js","components/withParams.js","components/ColorBox.js","components/DeviceFilter.js","components/useToggle.js","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.js","components/disableScroll.js","components/Labels.js","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.js","pages/PowerPlantDetailPage/EnergyGraph/index.js","pages/PowerPlantDetailPage/InverterGraphs/LineGraph.js","pages/PowerPlantDetailPage/InverterGraphs/index.js","pages/PowerPlantDetailPage/index.js","App.js","components/withDivSize.js","serviceWorker.js","index.js","pages/HomePage/FiscalEnergyGraph.module.css","pages/HomePage/index.module.css","pages/PowerPlantDetailPage/index.module.css"],"names":["module","exports","UPDATE","initialState","width","height","actions","updateDivSize","type","START","FAIL","fetchStart","fetchId","fetchSuccess","response","fetchFail","error","INITIAL_FETCH_STATE","fetching","undefined","fetchedAt","respondedAt","getFetchState","state","selectors","id","update","reducer","action","updateOneCache","name","updateManyCache","combineReducers","divSize","fetch","now","Date","toISOString","cache","byId","compose","funcs","val","slice","reverse","reduce","v","f","get","keys","defaultVal","key","TIME_ZONE_OFFSET","parseInt","process","sendQuery","url","query","variables","a","method","body","JSON","stringify","headers","res","text","parse","errors","console","Error","message","data","powerPlants","params","powerPlant","getEnergy","plantId","deviceId","unit","timestamp","lte","gte","timeZoneOffset","energy","min","Math","filter","d","map","i","length","max","diff","floor","push","unixTime","getTime","warn","getSimulationData","yearGte","yearLte","year","simulation","month","parseFloat","getLogs","step","logs","log","power","current","voltage","insulationResistance","residualCurrent","useDebounce","delay","useState","debouncedVal","setDebouncedVal","useEffect","timer","setTimeout","clearTimeout","withFetch","request","getFetchId","getParams","props","shouldFetch","saveCache","debounce","Component","connect","rest","paramId","Loading","loading","renderLoading","Message","negative","Button","onClick","onClickRetry","children","defaultProps","LinkButton","className","styles","PlantHeader","plant","component","devices","PropTypes","shape","string","isRequired","array","func","timeZone","str","moment","tz","roundInterval","numSteps","x","numDigits","log10","abs","lastDigit","n","pow","getDigit","ceil","GraphPlaceholder","backgroundColor","style","number","getFullYear","api","y","device","find","model","startOf","subtract","endOf","yMax","energyLastMonth","energyCurrentMonth","yTickInterval","stats","toLocaleString","animate","xMin","xMax","yMin","xAxisAt","xAxisHeight","xAxisLineColor","xTickInterval","xTickLength","showXLine","yAxisAt","yAxisWidth","yAxisLineColor","renderYTick","round","yLabels","render","color","drawLine","lineColor","graphs","barWidth","getBarColor","Graph","plantHeader","padding","paddingTop","getPowerPlants","numGraphsPerRow","MIN_GRAPH_WIDTH","graphWidth","count","col","arr","size","chunks","chunk","plants","row","history","COLORS","withParams","initialParams","setParams","ColorBox","margin","Row","checked","Dropdown","Item","cell","Checkbox","DeviceFilter","colors","onToggle","open","setOpen","Object","values","all","Group","basic","Menu","maxHeight","overflow","Divider","labelPosition","icon","content","useToggle","ids","setState","_toggleAll","_toggle","UNITS","TEXT","MONTH","DAY","HOUR","TimeUnitButtons","active","disableScroll","document","enableScroll","Labels","labels","label","value","zoomable","draggable","ReactCanvasTimeSeries","getLayout","layout","renderXLabel","isNaN","add","format","renderYLabel","yMaxs","xs","onChangeXRange","mouse","setMouse","diffs","nearest","setNearest","graph","checkedDevices","getNumXTicks","renderXTick","yTickLength","xLabels","canvas","math","getX","left","getY","top","onMouseMove","e","xRange","isInside","findNearestIndex","onMouseOut","onWheel","NOW","unix","CURRENT_MONTH","getDefaultXRange","getGte","_unit","toLowerCase","getLte","getUnixTimeFromX","getXFromUnixTime","tMin","tMax","t","x0","deviceIds","Promise","toggle","filterCol","LineGraph","lines","mouseX","mouseY","setMouseY","line","X_MIN","X_MAX","unixTimes","maxPower","maxCurrent","maxVoltage","maxInsulationResistance","maxResidualCurrent","repsonse","setMouseX","filterDates","setFilterDates","setFilterDate","date","filters","dateFilters","disabled","onChange","graphHeader","match","getPowerPlant","Infinity","bound","header","headerText","subHeader","withDivSize","path","PowerPlantDetailPage","HomePage","footer","ref","useRef","setDivSize","clientHeight","clientWidth","window","addEventListener","removeEventListener","Boolean","location","hostname","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e7fa814.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"EnergyGraph_filter__sXpE0\",\"filterCol\":\"EnergyGraph_filterCol__3lRs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timestamp\":\"Labels_timestamp__14xTO\",\"labels\":\"Labels_labels__3OjBJ\",\"label\":\"Labels_label__3jxsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__1dd61\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PlantHeader_component__NDfu0\",\"devices\":\"PlantHeader_devices__2U2Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"BarGraph_component__2Avo8\",\"labels\":\"BarGraph_labels__3I-cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"LinkButton_LinkButton__38eEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DeviceFilter_table__lKnNt\",\"cell\":\"DeviceFilter_cell__3_4bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeUnitButtons\":\"TimeUnitButtons_TimeUnitButtons__2HFO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"InverterGraphs_filters__3YMN1\",\"dateFilters\":\"InverterGraphs_dateFilters__3mfAg\",\"graphHeader\":\"InverterGraphs_graphHeader__20S_9\",\"row\":\"InverterGraphs_row__Gj9MO\",\"labels\":\"InverterGraphs_labels__1li5R\"};","const UPDATE = \"DIV_SIZE/UPDATE\"\n\nconst initialState = {\n  width: 0,\n  height: 0,\n}\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        width: action.width,\n        height: action.height,\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  updateDivSize: ({ width, height }) => ({ type: UPDATE, width, height }),\n}\n","const START = \"FETCH/START\"\nconst SUCCESS = \"FETCH/SUCCESS\"\nconst FAIL = \"FETCH/FAIL\"\n\nexport const actions = {\n  fetchStart: ({ fetchId }) => ({ type: START, fetchId }),\n  fetchSuccess: ({ fetchId, response }) => ({\n    type: SUCCESS,\n    fetchId,\n    response,\n  }),\n  fetchFail: ({ fetchId, error }) => ({ type: FAIL, fetchId, error }),\n}\n\nconst INITIAL_FETCH_STATE = {\n  fetching: false,\n  error: \"\",\n  response: undefined,\n  fetchedAt: \"\",\n  respondedAt: \"\",\n}\n\nfunction getFetchState(state, fetchId) {\n  return state[fetchId] || INITIAL_FETCH_STATE\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case START: {\n      const { fetchId } = action\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: true,\n          error: \"\",\n        },\n      }\n    }\n    case SUCCESS: {\n      const { fetchId, response } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          response,\n          fetchedAt: now,\n          respondedAt: now,\n        },\n      }\n    }\n    case FAIL: {\n      const { fetchId, error } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          error,\n          fetchedAt: now,\n        },\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getFetchState: (state, fetchId) => state[fetchId] || INITIAL_FETCH_STATE,\n}\n","const UPDATE_ONE = \"BY_ID/UPDATE_ONE\"\nconst UPDATE_MANY = \"BY_ID/UPDATE_MANY\"\n\nexport const actions = {\n  updateOne: ({ id, update }) => ({ type: UPDATE_ONE, id, update }),\n  updateMany: ({ update }) => ({ type: UPDATE_MANY, update }),\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_ONE: {\n      const { id, update } = action\n\n      return {\n        ...state,\n        [id]: update(state[id]),\n      }\n    }\n    case UPDATE_MANY: {\n      const { update } = action\n\n      return {\n        ...state,\n        ...update(state),\n      }\n    }\n    default:\n      return state\n  }\n}\n","import * as byId from \"./byId\"\n\nconst UPDATE_ONE = \"CACHE/UPDATE_ONE\"\nconst UPDATE_MANY = \"CACHE/UPDATE_MANY\"\n\nexport const actions = {\n  updateOneCache: ({ name, id, update }) => ({\n    type: UPDATE_ONE,\n    name,\n    id,\n    update,\n  }),\n  updateManyCache: ({ name, update }) => ({ type: UPDATE_MANY, name, update }),\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_ONE: {\n      const { name, id, update } = action\n\n      return {\n        ...state,\n        [name]: byId.reducer(\n          state[name],\n          byId.actions.updateOne({ id, update })\n        ),\n      }\n    }\n    case UPDATE_MANY: {\n      const { name, update } = action\n\n      return {\n        ...state,\n        [name]: byId.reducer(state[name], byId.actions.updateMany({ update })),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getOne: (state, name, id) => (state[name] ? state[name][id] : undefined),\n  getMany: (state, name) => state[name] || {},\n}\n","import { combineReducers } from \"redux\"\nimport * as divSize from \"./divSize\"\nimport * as fetch from \"./fetch\"\nimport * as cache from \"./cache\"\n\nexport const reducer = combineReducers({\n  divSize: divSize.reducer,\n  fetch: fetch.reducer,\n  cache: cache.reducer,\n})\n\nexport const actions = {\n  divSize: divSize.actions,\n  fetch: fetch.actions,\n  cache: cache.actions,\n}\n\nexport const selectors = {\n  fetch: fetch.selectors,\n  cache: cache.selectors,\n}\n","export function compose(...funcs) {\n  return val =>\n    funcs\n      .slice()\n      .reverse()\n      .reduce((v, f) => {\n        return f(v)\n      }, val)\n}\n\nexport function chunk(arr, size) {\n  let chunks = []\n\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size))\n  }\n\n  return chunks\n}\n\nexport function get(val, keys, defaultVal) {\n  for (let key of keys) {\n    if (val == undefined) {\n      break\n    }\n    val = val[key]\n  }\n\n  if (val == undefined) {\n    return defaultVal\n  }\n\n  return val\n}\n","const TIME_ZONE_OFFSET = parseInt(process.env.REACT_APP_TIME_ZONE_OFFSET)\n\nasync function sendQuery(url, query, variables) {\n  const res = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  const text = await res.text()\n\n  try {\n    const res = JSON.parse(text)\n\n    if (res.errors) {\n      console.error(\"GraphQL error\", res.errors)\n      throw new Error(res.errors[0].message)\n    }\n\n    return res\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function getPowerPlants() {\n  const query = `\n    query {\n      powerPlants {\n        count\n        data {\n          id\n          devices {\n            id\n            model\n          }\n        }\n      }\n    }\n  `\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query)\n  return res.data.powerPlants\n}\n\nexport async function getPowerPlant(params) {\n  const { id } = params\n\n  const query = `\n    query PowerPlant($id: String!) {\n      powerPlant(id: $id) {\n        id\n        devices {\n          id\n          model\n        }\n      }\n    }\n  `\n\n  const variables = { id }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  return res.data.powerPlant\n}\n\nexport async function getEnergy(params) {\n  const query = `\n    query Energy($plantId: String!, $deviceId: String!, $unit: Unit! $timestamp: TimeZoneRangeInput!) {\n      energy(plantId: $plantId, deviceId: $deviceId, unit: $unit, timestamp: $timestamp) {\n        timestamp\n        energy\n      }\n    }\n  `\n\n  const {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: { lte, gte },\n  } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: {\n      timeZoneOffset: TIME_ZONE_OFFSET,\n      lte,\n      gte,\n    },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  const { energy } = res.data\n\n  // replace 0 energy (possibly missing data) with min energy\n  let min = Math.min(...energy.filter(d => d.energy > 0).map(d => d.energy))\n  for (let i = 0; i < energy.length; i++) {\n    min = Math.max(min, energy[i].energy)\n\n    if (energy[i].energy == 0) {\n      energy[i].energy = min\n    }\n  }\n\n  const data = []\n\n  for (let i = 1; i < energy.length; i++) {\n    const diff = Math.floor(energy[i].energy) - Math.floor(energy[i - 1].energy)\n\n    data.push({\n      timestamp: energy[i].timestamp,\n      energy: energy[i].energy,\n      unixTime: Math.floor(new Date(energy[i].timestamp).getTime() / 1000),\n      diff,\n    })\n\n    if (diff < 0) {\n      console.warn(\n        `Found negative energy diff for plant ${plantId} device ${deviceId}`,\n        data\n      )\n    }\n  }\n\n  return data\n}\n\nexport async function getSimulationData(params) {\n  const { plantId, yearGte, yearLte } = params\n\n  const query = `\n      query Simulation($plantId: String!, $year: YearRangeInput!) {\n        simulation(plantId: $plantId, year: $year) {\n          year\n          month\n          energy\n        }\n      }\n    `\n\n  const variables = {\n    plantId,\n    year: { gte: yearGte, lte: yearLte },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n\n  return res.data.simulation.map(({ year, month, energy }) => ({\n    year,\n    month,\n    energy: parseFloat(energy),\n  }))\n}\n\nexport async function getLogs(params) {\n  const query = `\n    query Logs($plantId: String!, $deviceId: String!, $timestamp: TimestampRangeInput!) {\n      logs(plantId: $plantId, deviceId: $deviceId, timestamp: $timestamp) {\n        timestamp\n        energy\n        power\n        current\n        voltage\n        insulationResistance\n        residualCurrent\n      }\n    }\n  `\n\n  const { plantId, deviceId, lte, gte, step = 1 } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    timestamp: {\n      lte,\n      gte,\n      step,\n    },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  const { logs } = res.data\n\n  return logs.map(log => ({\n    ...log,\n    energy: parseFloat(log.energy),\n    power: parseFloat(log.power),\n    current: parseFloat(log.current),\n    voltage: parseFloat(log.voltage),\n    insulationResistance: parseFloat(log.insulationResistance),\n    residualCurrent: parseFloat(log.residualCurrent),\n    unixTime: Math.floor(new Date(log.timestamp).getTime() / 1000),\n  }))\n}\n","import React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions, selectors } from \"../reducer\"\n\nfunction useDebounce(val, delay) {\n  const [debouncedVal, setDebouncedVal] = useState(val)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedVal(val)\n    }, delay)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [val])\n\n  return debouncedVal\n}\n\nexport default function withFetch(\n  request,\n  {\n    name = \"fetch\",\n    getFetchId = (name, params) => name,\n    getParams = props => ({}),\n    shouldFetch = (props, response, params) => true,\n    saveCache = (props, response, params) => {},\n    debounce = 0,\n  } = {}\n) {\n  return Component => {\n    function WithFetch(props) {\n      const {\n        fetching,\n        error,\n        response,\n        fetchedAt,\n        respondedAt,\n        fetchStart,\n        fetchSuccess,\n        fetchFail,\n        ...rest\n      } = props\n\n      const params = getParams(props)\n      const fetchId = getFetchId(name, params)\n      const paramId = useDebounce(JSON.stringify(params), debounce)\n\n      async function fetch() {\n        if (!shouldFetch(props, response, params)) {\n          return\n        }\n\n        if (fetching) {\n          return\n        }\n\n        fetchStart({ fetchId })\n\n        try {\n          const response = await request(params, props)\n\n          fetchSuccess({ fetchId, response })\n          saveCache(props, response, params)\n        } catch (error) {\n          fetchFail({ fetchId, error: error.message })\n        }\n      }\n\n      useEffect(() => {\n        fetch()\n      }, [paramId])\n\n      return (\n        <Component\n          {...rest}\n          {...{\n            [name]: {\n              fetching,\n              error,\n              fetch,\n              response,\n              fetchedAt,\n              respondedAt,\n              params,\n            },\n          }}\n        />\n      )\n    }\n\n    WithFetch.propTypes = {\n      fetching: PropTypes.bool.isRequired,\n      error: PropTypes.string.isRequired,\n      response: PropTypes.any,\n      respondedAt: PropTypes.string.isRequired,\n      fetchedAt: PropTypes.string.isRequired,\n      fetchStart: PropTypes.func.isRequired,\n      fetchSuccess: PropTypes.func.isRequired,\n      fetchFail: PropTypes.func.isRequired,\n    }\n\n    return connect(\n      (state, props) => {\n        const params = getParams(props)\n        const fetchId = getFetchId(name, params)\n\n        return selectors.fetch.getFetchState(state.fetch, fetchId)\n      },\n      actions.fetch\n    )(WithFetch)\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Message, Button } from \"semantic-ui-react\"\n\nexport function Loading(props) {\n  if (props.loading) {\n    return props.renderLoading()\n  }\n\n  if (props.error) {\n    return (\n      <Message negative>\n        <p>{props.error}</p>\n        <Button onClick={props.onClickRetry}>Retry</Button>\n      </Message>\n    )\n  }\n\n  return props.children\n}\n\nLoading.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onClickRetry: PropTypes.func.isRequired,\n  renderLoading: PropTypes.func.isRequired,\n}\n\nLoading.defaultProps = {\n  renderLoading: () => <div>Loading...</div>,\n}\n\nexport default Loading\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styles from \"./LinkButton.module.css\"\n\nexport function LinkButton(props) {\n  const { onClick, children } = props\n\n  return (\n    <button className={styles.LinkButton} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default LinkButton\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport LinkButton from \"../../components/LinkButton\"\nimport styles from \"./PlantHeader.module.css\"\n\nexport function PlantHeader(props) {\n  const { plant, onClick } = props\n\n  return (\n    <div className={styles.component}>\n      <LinkButton onClick={onClick}>Plant {plant.id}</LinkButton>\n      <div className={styles.devices}>{plant.devices.length} devices</div>\n    </div>\n  )\n}\n\nPlantHeader.defaultProps = {\n  plant: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    devices: PropTypes.array.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default PlantHeader\n","import moment from \"moment-timezone\"\n\nexport function timeZone(str) {\n  return moment.tz(str, process.env.REACT_APP_TIME_ZONE)\n}\n\nexport function now() {\n  return moment().unix()\n}\n\nexport function getMonth(unixTime) {\n  return moment.tz(unixTime * 1000, process.env.REACT_APP_TIME_ZONE).month()\n}\n","function getNumDigits(x) {\n  return Math.max(Math.floor(Math.log10(Math.abs(x))), 0) + 1\n}\n\nfunction getDigit(x, n) {\n  return Math.floor((x / Math.pow(10, n - 1)) % 10)\n}\n\nexport function roundInterval(max, min, numSteps) {\n  const numDigits = getNumDigits((max - min) / numSteps)\n  const lastDigit = getDigit((max - min) / numSteps, numDigits)\n\n  // mapping from last digit to scale\n  // 9, 10 -> 10\n  // 7, 8 -> 8\n  // ...\n  // 1, 2 -> 1\n  const scale = 2 * Math.ceil(lastDigit / 2)\n  return scale * 10 ** (numDigits - 1)\n}\n\nexport function bound(val, min = -Infinity, max = Infinity) {\n  return Math.min(Math.max(val, min), max)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function GraphPlaceholder(props) {\n  const { width, height, backgroundColor } = props\n\n  return <div style={{ width, height, backgroundColor }} />\n}\n\nGraphPlaceholder.defaultProps = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n}\n\nexport default GraphPlaceholder\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Graph } from \"react-canvas-time-series\"\nimport { get } from \"../../util\"\nimport { timeZone } from \"../../util/date\"\nimport { roundInterval } from \"../../util/math\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport GraphPlaceholder from \"./GraphPlaceholder\"\nimport styles from \"./FiscalEnergyGraph.module.css\"\n\nconst MIN_Y_MAX = 1000\nconst X_MIN = 0.5\nconst X_MAX = 12.5\nconst Y_MIN = 0\n\nexport function FiscalEnergyGraph(props) {\n  const { width, height, getEnergy } = props\n\n  const { fetching, fetchedAt, fetch, error } = getEnergy\n\n  const simulation = get(getEnergy, [\"response\", \"simulation\"], [])\n  const data = get(getEnergy, [\"response\", \"data\"], [])\n  const yMax = Math.max(MIN_Y_MAX, get(getEnergy, [\"response\", \"yMax\"], 0))\n  const energyLastMonth = get(data, [data.length - 2, \"diff\"], 0)\n  const energyCurrentMonth = get(data, [data.length - 1, \"diff\"], 0)\n\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  return (\n    <Loading\n      loading={fetching || !fetchedAt}\n      error={error}\n      onClickRetry={fetch}\n      renderLoading={() => (\n        <GraphPlaceholder\n          width={width}\n          height={height}\n          backgroundColor=\"whitesmoke\"\n        />\n      )}\n    >\n      <div>\n        <div className={styles.stats}>\n          <div className={styles.month}>\n            Last month{\" \"}\n            <span className={styles.number}>\n              {energyLastMonth.toLocaleString()} kWh\n            </span>\n          </div>\n          <div className={styles.month}>\n            This month{\" \"}\n            <span className={styles.number}>\n              {energyCurrentMonth.toLocaleString()} kWh\n            </span>\n          </div>\n        </div>\n        <Graph\n          width={width}\n          height={height}\n          backgroundColor=\"beige\"\n          animate={false}\n          xMin={X_MIN}\n          xMax={X_MAX}\n          yMin={Y_MIN}\n          yMax={yMax}\n          xAxisAt=\"bottom\"\n          xAxisHeight={20}\n          xAxisLineColor=\"lightgrey\"\n          xTickInterval={1}\n          xTickLength={5}\n          showXLine={false}\n          yAxisAt=\"right\"\n          yAxisWidth={70}\n          yAxisLineColor=\"lightgrey\"\n          yTickInterval={yTickInterval}\n          renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n          yLabels={[\n            {\n              y: yMax,\n              width: 70,\n              height: 20,\n              render: y => `${y.toLocaleString()} kWh`,\n              color: \"white\",\n              backgroundColor: \"blue\",\n              drawLine: true,\n              lineColor: \"blue\",\n            },\n          ]}\n          graphs={[\n            {\n              type: \"bars\",\n              barWidth: 16,\n              getBarColor: () => \"orange\",\n              data,\n            },\n            {\n              type: \"line\",\n              data: simulation,\n              lineColor: \"red\",\n              step: 1,\n            },\n          ]}\n        />\n      </div>\n    </Loading>\n  )\n}\n\nFiscalEnergyGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n    error: PropTypes.string.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      simulation: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n      yMax: PropTypes.number.isRequired,\n    }),\n  }),\n}\n\nasync function getEnergy(params, props) {\n  const { plantId } = params\n\n  const now = new Date()\n\n  const year = now.getFullYear()\n\n  const simulation = (await api.getSimulationData({\n    plantId,\n    yearGte: year,\n    yearLte: year,\n  })).map(({ year, month, energy }) => ({\n    x: month + 1,\n    y: energy,\n  }))\n\n  // Find the first cluster controller\n  const device = props.plant.devices.find(\n    device => device.model == \"Cluster Controller\"\n  )\n\n  const res = await api.getEnergy({\n    plantId,\n    deviceId: device.id,\n    unit: \"MONTH\",\n    timestamp: {\n      // last year December\n      gte: timeZone(now.toISOString())\n        .startOf(\"year\")\n        .subtract(1, \"month\")\n        .toISOString(),\n      // end of current month\n      lte: timeZone(now.toISOString())\n        .endOf(\"month\")\n        .toISOString(),\n    },\n  })\n\n  const data = res.map((energy, i) => ({\n    ...energy,\n    x: i + 1,\n    y: energy.diff,\n  }))\n\n  const yMax = Math.max(...data.map(d => d.y), ...simulation.map(d => d.y))\n\n  return {\n    data,\n    yMax,\n    simulation,\n  }\n}\n\nexport default withFetch(getEnergy, {\n  name: \"getEnergy\",\n  getFetchId: (name, params) => `${name}-${params.plantId}`,\n  getParams: props => ({ plantId: props.plant.id }),\n  shouldFetch: (props, response) => !response,\n})(FiscalEnergyGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose, chunk } from \"../../util\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport PlantHeader from \"./PlantHeader\"\nimport FiscalEnergyGraph from \"./FiscalEnergyGraph\"\n\nconst PADDING = 10\nconst MIN_GRAPH_WIDTH = 340\nconst GRAPH_HEIGHT = 210\n\nexport function getNumGraphsPerRow(width) {\n  if (width < MIN_GRAPH_WIDTH * 2 + 2 * PADDING) {\n    return 1\n  }\n  if (width < MIN_GRAPH_WIDTH * 3 + 2 * PADDING) {\n    return 2\n  }\n  if (width < MIN_GRAPH_WIDTH * 5 + 2 * PADDING) {\n    return 3\n  }\n\n  return 5\n}\n\nfunction Graph(props) {\n  const { width, plant, onClick } = props\n  const padding = 10\n\n  return (\n    <div>\n      <div className={styles.plantHeader}>\n        <PlantHeader plant={plant} onClick={onClick} />\n      </div>\n      <div style={{ padding, paddingTop: 0 }}>\n        <FiscalEnergyGraph\n          width={width - 2 * padding}\n          height={GRAPH_HEIGHT}\n          plant={plant}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function HomePage(props) {\n  const { divSize, getPowerPlants } = props\n\n  const numGraphsPerRow = getNumGraphsPerRow(divSize.width)\n  const graphWidth = Math.max(\n    Math.floor((divSize.width - 2 * PADDING) / numGraphsPerRow),\n    MIN_GRAPH_WIDTH\n  )\n\n  const count = get(getPowerPlants, [\"response\", \"count\"], 0)\n  const data = get(getPowerPlants, [\"response\", \"data\"], [])\n\n  return (\n    <Loading\n      loading={getPowerPlants.fetching || !getPowerPlants.fetchedAt}\n      error={getPowerPlants.error}\n      onClickRetry={getPowerPlants.fetch}\n    >\n      <div className={styles.count}>{count} power plants</div>\n      <div className={styles.col}>\n        {chunk(data, numGraphsPerRow).map((plants, i) => (\n          <div key={i} className={styles.row}>\n            {plants.map(plant => (\n              <Graph\n                key={plant.id}\n                width={graphWidth}\n                plant={plant}\n                onClick={() => props.history.push(`/plants/${plant.id}`)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </Loading>\n  )\n}\n\nHomePage.propTypes = {\n  divSize: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  getPowerPlants: PropTypes.shape({\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      data: PropTypes.array.isRequired,\n      count: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(api.getPowerPlants, {\n    name: \"getPowerPlants\",\n    shouldFetch: (props, response) => !response,\n  })\n)(HomePage)\n","const COLORS = [\n  \"#1CE6FF\",\n  \"#FF34FF\",\n  \"#FF4A46\",\n  \"#008941\",\n  \"#006FA6\",\n  \"#A30059\",\n  \"#FFDBE5\",\n  \"#7A4900\",\n  \"#0000A6\",\n  \"#63FFAC\",\n  \"#B79762\",\n  \"#004D43\",\n  \"#8FB0FF\",\n  \"#997D87\",\n  \"#5A0007\",\n  \"#809693\",\n  \"#1B4400\",\n  \"#4FC601\",\n  \"#3B5DFF\",\n  \"#4A3B53\",\n  \"#FF2F80\",\n  \"#61615A\",\n  \"#BA0900\",\n  \"#6B7900\",\n  \"#00C2A0\",\n  \"#FFAA92\",\n  \"#FF90C9\",\n  \"#B903AA\",\n  \"#D16100\",\n  \"#7B4F4B\",\n  \"#A1C299\",\n  \"#300018\",\n  \"#0AA6D8\",\n  \"#013349\",\n  \"#00846F\",\n  \"#372101\",\n  \"#FFB500\",\n  \"#C2FFED\",\n  \"#A079BF\",\n  \"#CC0744\",\n  \"#C0B9B2\",\n  \"#C2FF99\",\n  \"#00489C\",\n  \"#6F0062\",\n  \"#0CBD66\",\n  \"#EEC3FF\",\n  \"#456D75\",\n  \"#B77B68\",\n  \"#7A87A1\",\n  \"#788D66\",\n  \"#885578\",\n  \"#FAD09F\",\n  \"#FF8A9A\",\n  \"#D157A0\",\n  \"#BEC459\",\n  \"#456648\",\n  \"#0086ED\",\n  \"#886F4C\",\n\n  \"#34362D\",\n  \"#B4A8BD\",\n  \"#00A6AA\",\n  \"#452C2C\",\n  \"#636375\",\n  \"#A3C8C9\",\n  \"#FF913F\",\n  \"#938A81\",\n  \"#575329\",\n  \"#00FECF\",\n  \"#B05B6F\",\n  \"#8CD0FF\",\n  \"#3B9700\",\n  \"#04F757\",\n  \"#C8A1A1\",\n  \"#1E6E00\",\n  \"#7900D7\",\n  \"#A77500\",\n  \"#6367A9\",\n  \"#A05837\",\n  \"#6B002C\",\n  \"#772600\",\n  \"#D790FF\",\n  \"#9B9700\",\n  \"#549E79\",\n  \"#FFF69F\",\n  \"#72418F\",\n  \"#BC23FF\",\n  \"#99ADC0\",\n  \"#3A2465\",\n  \"#922329\",\n  \"#5B4534\",\n  \"#404E55\",\n  \"#0089A3\",\n  \"#CB7E98\",\n  \"#A4E804\",\n  \"#324E72\",\n  \"#6A3A4C\",\n  \"#83AB58\",\n  \"#D1F7CE\",\n  \"#004B28\",\n  \"#C8D0F6\",\n  \"#A3A489\",\n  \"#806C66\",\n  \"#BF5650\",\n  \"#E83000\",\n  \"#66796D\",\n  \"#DA007C\",\n  \"#FF1A59\",\n  \"#8ADBB4\",\n  \"#5B4E51\",\n  \"#C895C5\",\n  \"#320033\",\n  \"#FF6832\",\n  \"#66E1D3\",\n  \"#CFCDAC\",\n  \"#D0AC94\",\n  \"#7ED379\",\n  \"#012C58\",\n]\n\nexport default COLORS\n","import React, { useState } from \"react\"\n\nexport default function withParams(initialParams = {}) {\n  return Component => {\n    function WithParams(props) {\n      const [params, setParams] = useState(initialParams)\n\n      return <Component {...props} params={params} setParams={setParams} />\n    }\n\n    return WithParams\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function ColorBox(props) {\n  const { size, margin, color } = props\n\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        margin: margin,\n        backgroundColor: color,\n      }}\n    />\n  )\n}\n\nColorBox.defaultProps = {\n  color: \"red\",\n  size: 10,\n  margin: 5,\n}\n\nColorBox.propTypes = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  margin: PropTypes.number.isRequired,\n}\n\nexport default ColorBox\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Checkbox, Dropdown, Button } from \"semantic-ui-react\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./DeviceFilter.module.css\"\n\nfunction Row(props) {\n  const { onClick, checked, color, text } = props\n\n  return (\n    <Dropdown.Item onClick={onClick}>\n      <div className={styles.cell}>\n        <Checkbox checked={!!checked} />\n        <ColorBox color={color} />\n        <div>{text}</div>\n      </div>\n    </Dropdown.Item>\n  )\n}\n\nexport function DeviceFilter(props) {\n  const { devices, checked, colors, onToggle } = props\n\n  const [open, setOpen] = useState(false)\n\n  function onClick(id) {\n    if (id == \"all\") {\n      onToggle(\"all\", devices.map(({ id }) => id))\n    } else {\n      onToggle(id)\n    }\n  }\n\n  const count = Object.values(checked).filter(v => v).length\n  const all = count == devices.length\n\n  return (\n    <Button.Group basic size=\"small\">\n      <Dropdown open={open}>\n        <Dropdown.Menu style={{ maxHeight: 200, overflow: \"auto\" }}>\n          <Row\n            onClick={() => onClick(\"all\")}\n            checked={all}\n            color=\"transparent\"\n            text={`All ${devices.length} devices`}\n          />\n          <Dropdown.Divider />\n          {devices.map((device, i) => (\n            <Row\n              key={i}\n              onClick={() => onClick(device.id)}\n              checked={checked[device.id]}\n              color={colors[device.id]}\n              text={`${device.model} - ${device.id}`}\n            />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Button\n        labelPosition=\"right\"\n        icon=\"caret down\"\n        content={`Showing ${count} devices`}\n        onClick={() => setOpen(!open)}\n      />\n    </Button.Group>\n  )\n}\n\nDeviceFilter.propTypes = {\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  checked: PropTypes.object.isRequired,\n  colors: PropTypes.object.isRequired,\n}\n\nexport default DeviceFilter\n","import { useState } from \"react\"\n\nexport default function useToggle(ids) {\n  const [checked, setState] = useState(\n    ids.reduce((checked, id) => {\n      checked[id] = true\n      return checked\n    }, {})\n  )\n\n  function _toggle(id) {\n    setState({\n      ...checked,\n      [id]: !checked[id],\n    })\n  }\n\n  function _toggleAll(ids = []) {\n    const all = Object.values(checked).filter(v => v).length == ids.length\n\n    if (all) {\n      setState({})\n    } else {\n      setState(\n        ids.reduce((checked, id) => {\n          checked[id] = true\n          return checked\n        }, {})\n      )\n    }\n  }\n\n  function toggle(id, ids) {\n    if (id == \"all\") {\n      _toggleAll(ids)\n    } else {\n      _toggle(id)\n    }\n  }\n\n  return [checked, toggle]\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport styles from \"./TimeUnitButtons.module.css\"\n\nexport const UNITS = [\"MONTH\", \"DAY\", \"HOUR\"]\n\nconst TEXT = {\n  MONTH: \"Month\",\n  DAY: \"Day\",\n  HOUR: \"Hour\",\n}\n\nexport function TimeUnitButtons(props) {\n  const { active } = props\n\n  function getColor(key) {\n    return key == active ? \"yellow\" : undefined\n  }\n\n  return (\n    <div className={styles.TimeUnitButtons}>\n      {UNITS.map(unit => (\n        <Button\n          key={unit}\n          color={getColor(unit)}\n          onClick={() => props.onClick(unit)}\n        >\n          {TEXT[unit]}\n        </Button>\n      ))}\n    </div>\n  )\n}\n\nTimeUnitButtons.propTypes = {\n  active: PropTypes.oneOf(UNITS).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default TimeUnitButtons\n","import React from \"react\"\n\nexport default function disableScroll(Component) {\n  function DisableScroll(props) {\n    function disableScroll() {\n      document.body.style.overflow = \"hidden\"\n    }\n\n    function enableScroll() {\n      document.body.style.overflow = \"unset\"\n    }\n\n    return (\n      <Component\n        {...props}\n        disableScroll={disableScroll}\n        enableScroll={enableScroll}\n      />\n    )\n  }\n\n  return DisableScroll\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./Labels.module.css\"\n\nexport function Labels(props) {\n  const { timestamp, labels } = props\n\n  return (\n    <div>\n      <div className={styles.timestamp}>{timestamp}</div>\n      <div className={styles.labels}>\n        {labels.map((label) => (\n          <div key={label.id} className={styles.label}>\n            <ColorBox color={label.color} />\n            <div>{label.value}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nLabels.propTypes = {\n  timestamp: PropTypes.string,\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default Labels\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  layout,\n  zoomable,\n  draggable,\n} from \"react-canvas-time-series\"\nimport { get } from \"../../../util\"\nimport { timeZone } from \"../../../util/date\"\nimport { roundInterval } from \"../../../util/math\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport Labels from \"../../../components/Labels\"\nimport styles from \"./BarGraph.module.css\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst MIN_BAR_WIDTH = 5\nconst BAR_PADDING = 5\n\nconst HEIGHT = 200\n\nconst Y_MIN = 0\n\nfunction getNumXTicks(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return 12\n    case \"DAY\":\n      return 6\n    case \"HOUR\":\n      return 6\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction renderXLabel(unit, x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  const now = new Date()\n\n  switch (unit) {\n    case \"MONTH\":\n      return timeZone(now.toISOString())\n        .startOf(\"month\")\n        .add(Math.round(x), \"month\")\n        .format(\"YYYY-MM\")\n    case \"DAY\":\n      return timeZone(now.toISOString())\n        .startOf(\"day\")\n        .add(Math.round(x), \"day\")\n        .format(\"YYYY-MM-DD\")\n    case \"HOUR\":\n      return timeZone(now.toISOString())\n        .startOf(\"hour\")\n        .add(Math.round(x), \"hour\")\n        .format(\"YYYY-MM-DD HH:mm\")\n    default:\n      return\n  }\n}\n\nfunction renderYLabel(y) {\n  if (!y) {\n    return \"0 kWh\"\n  }\n\n  return `${Math.round(y).toLocaleString()} kWh`\n}\n\nexport function BarGraph(props) {\n  const {\n    width,\n    data,\n    yMaxs,\n    xs,\n    loading,\n    devices,\n    checked,\n    colors,\n    xMin,\n    xMax,\n    unit,\n    onChangeXRange,\n  } = props\n\n  const [mouse, setMouse] = useState({\n    x: undefined,\n    y: undefined,\n  })\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    diffs: {},\n  })\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n  const yMax = Math.max(...checkedDevices.map(device => yMaxs[device.id]), 10)\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouse(mouse)\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(xs, x)\n\n      const timestamp = get(data, [get(devices, [0, \"id\"]), i, \"timestamp\"])\n\n      if (timestamp) {\n        setNearest({\n          timestamp,\n          diffs: checkedDevices.reduce((diffs, device) => {\n            diffs[device.id] = get(data, [device.id, i, \"diff\"], 0)\n            return diffs\n          }, {}),\n        })\n      }\n    } else {\n      props.enableScroll()\n\n      setMouse({\n        x: undefined,\n        y: undefined,\n      })\n\n      setNearest({\n        timestamp: undefined,\n        diffs: {},\n      })\n    }\n\n    onChangeXRange(xRange)\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouse({\n      x: undefined,\n      y: undefined,\n    })\n\n    setNearest({\n      timestamp: undefined,\n      diffs: {},\n    })\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    onChangeXRange(xRange)\n  }\n\n  const barWidth = Math.max(\n    MIN_BAR_WIDTH,\n    Math.floor(graph.width / (xMax - xMin)) - 2 * BAR_PADDING\n  )\n\n  // TODO xTickInterval based on graph.width\n  const xTickInterval = Math.max(\n    1,\n    Math.floor((xMax - xMin) / getNumXTicks(unit))\n  )\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  const graphs = checkedDevices.map(device => ({\n    type: \"bars\",\n    barWidth,\n    getBarColor: () => colors[device.id],\n    data: data[device.id] || [],\n  }))\n\n  return (\n    <div className={styles.component}>\n      <Graph\n        width={width}\n        height={HEIGHT}\n        backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n        mouse={mouse}\n        xMin={xMin}\n        xMax={xMax}\n        yMin={Y_MIN}\n        yMax={yMax}\n        xAxisAt=\"bottom\"\n        xAxisHeight={20}\n        xAxisLineColor=\"lightgrey\"\n        xTickInterval={xTickInterval}\n        xTickLength={5}\n        renderXTick={x => renderXLabel(unit, x)}\n        showXLine={false}\n        yAxisAt=\"right\"\n        yAxisWidth={70}\n        yAxisLineColor=\"lightgrey\"\n        yTickInterval={yTickInterval}\n        yTickLength={5}\n        renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n        graphs={graphs}\n        xLabels={[\n          {\n            x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x),\n            width: 100,\n            height: 20,\n            render: x => renderXLabel(unit, x),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        yLabels={[\n          {\n            y: yMax,\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"black\",\n            backgroundColor: \"orange\",\n            lineColor: \"orange\",\n          },\n          {\n            y: canvas.math.getY(graph.height, graph.top, yMax, Y_MIN, mouse.y),\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        onMouseMove={onMouseMove}\n        onMouseOut={onMouseOut}\n        onWheel={onWheel}\n      />\n      <div className={styles.labels}>\n        <Labels\n          timestamp={nearest.timestamp}\n          labels={checkedDevices.map(device => ({\n            id: device.id,\n            color: colors[device.id],\n            value: `${get(nearest.diffs, [device.id], 0)} kWh`,\n          }))}\n        />\n      </div>\n    </div>\n  )\n}\n\nBarGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  yMaxs: PropTypes.object.isRequired,\n  xs: PropTypes.arrayOf(PropTypes.number).isRequired,\n  loading: PropTypes.bool.isRequired,\n  unit: PropTypes.oneOf([\"MONTH\", \"DAY\", \"HOUR\"]),\n  onChangeXRange: PropTypes.func.isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nexport default disableScroll(BarGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { get, compose } from \"../../../util\"\nimport { timeZone, now, getMonth } from \"../../../util/date\"\nimport * as api from \"../../../api\"\nimport withFetch from \"../../../components/withFetch\"\nimport withParams from \"../../../components/withParams\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport useToggle from \"../../../components/useToggle\"\nimport styles from \"./index.module.css\"\nimport TimeUnitButtons, { UNITS } from \"./TimeUnitButtons\"\nimport BarGraph from \"./BarGraph\"\n\nconst NOW = now()\nconst CURRENT_MONTH = getMonth(NOW)\n\nfunction getDefaultXRange(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return {\n        xMin: -(CURRENT_MONTH + 0.5),\n        xMax: 11 - (CURRENT_MONTH + 0.5),\n      }\n    case \"DAY\":\n      return {\n        xMin: -30.5,\n        xMax: 0.5,\n      }\n    case \"HOUR\":\n      return {\n        xMin: -72.5,\n        xMax: 0.5,\n      }\n    default:\n      console.error(`Unknown unit ${unit}`)\n  }\n}\n\nexport function EnergyGraph(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    params,\n    setParams,\n    getEnergy,\n  } = props\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  function onClickTimeUnitButton(unit) {\n    setParams({\n      ...params,\n      unit,\n      ...getDefaultXRange(unit),\n    })\n  }\n\n  function onChangeXRange({ xMin, xMax }) {\n    setParams({\n      ...params,\n      xMin,\n      xMax,\n    })\n  }\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <div className={styles.filterCol}>\n          <TimeUnitButtons\n            active={params.unit}\n            onClick={onClickTimeUnitButton}\n          />\n        </div>\n        <div className={styles.filterCol}>\n          <DeviceFilter\n            devices={devices}\n            checked={checked}\n            colors={colors}\n            onToggle={toggle}\n          />\n        </div>\n      </div>\n      <BarGraph\n        plantId={plantId}\n        devices={devices}\n        width={graphWidth}\n        checked={checked}\n        colors={colors}\n        data={get(getEnergy.response, [\"data\"], {})}\n        yMaxs={get(getEnergy.response, [\"yMaxs\"], {})}\n        xs={get(getEnergy.response, [\"xs\"], [])}\n        loading={getEnergy.fetching}\n        {...params}\n        onChangeXRange={onChangeXRange}\n      />\n    </>\n  )\n}\n\nEnergyGraph.propTypes = {\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  graphWidth: PropTypes.number.isRequired,\n  colors: PropTypes.object.isRequired,\n  params: PropTypes.shape({\n    unit: PropTypes.oneOf(UNITS).isRequired,\n    xMin: PropTypes.number.isRequired,\n    xMax: PropTypes.number.isRequired,\n  }).isRequired,\n  setParams: PropTypes.func.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n  }).isRequired,\n}\n\nfunction getGte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) - 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getLte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) + 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getUnixTimeFromX(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .endOf(_unit)\n        .add(x, _unit)\n        .unix()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getXFromUnixTime({ xMin, xMax, tMin, tMax, t }) {\n  const d = (xMax - xMin) / (tMax - tMin)\n  const x0 = xMin - d * tMin\n\n  return Math.round(d * t + x0)\n}\n\nasync function getEnergy(params, props) {\n  const { plantId, deviceIds, unit, xMin, xMax } = params\n\n  const now = new Date()\n\n  const gte = getGte(unit, now, xMin)\n  const lte = getLte(unit, now, xMax)\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getEnergy({\n        plantId,\n        deviceId,\n        unit,\n        timestamp: {\n          gte,\n          lte,\n        },\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n  const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n\n  const data = res.reduce((map, { deviceId, data }) => {\n    map[deviceId] = data.map(d => ({\n      ...d,\n      x: getXFromUnixTime({\n        xMin: parseInt(xMin),\n        xMax: parseInt(xMax),\n        tMin,\n        tMax,\n        t: d.unixTime,\n      }),\n      y: d.diff,\n    }))\n\n    return map\n  }, {})\n\n  const yMaxs = res.reduce((yMaxs, { deviceId, data }) => {\n    yMaxs[deviceId] = Math.max(...data.map(d => d.diff), 0)\n\n    return yMaxs\n  }, {})\n\n  return {\n    data,\n    yMaxs,\n    xs: get(data, [deviceIds[0]], []).map(({ x }) => x),\n  }\n}\n\nexport default compose(\n  withParams({\n    unit: UNITS[0],\n    ...getDefaultXRange(UNITS[0]),\n  }),\n  withFetch(getEnergy, {\n    name: \"getEnergy\",\n    getFetchId: (name, params) => `${name}-${params.plantId}-${params.unit}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      unit: props.params.unit,\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {\n      // props.cacheEnergy({\n      //   id: getCacheId(props),\n      //   data: response,\n      // })\n    },\n    shouldFetch: () => true,\n    // shouldFetch: (props, response, params) => {\n    //   const {\n    //     energy: { data },\n    //   } = props\n    //\n    //   const { unit, xMin, xMax } = params\n    //\n    //   const now = new Date()\n    //   const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n    //   const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n    //\n    //   return (\n    //     data.length == 0 ||\n    //     tMin < data[0].unixTime ||\n    //     tMax > data[data.length - 1].unixTime\n    //   )\n    // },\n  })\n)(EnergyGraph)\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  zoomable,\n  draggable,\n  layout,\n} from \"react-canvas-time-series\"\nimport { roundInterval } from \"../../../util/math\"\nimport { timeZone } from \"../../../util/date\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst HEIGHT = 150\n\nfunction renderXLabel(x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  return timeZone(x * 1000).format(\"MM DD HH:mm\")\n}\n\nfunction renderYLabel(y, unit) {\n  if (!y) {\n    return `${y} ${unit}`\n  }\n\n  return `${Math.round(y).toLocaleString()} ${unit}`\n}\n\nexport function LineGraph(props) {\n  const { loading, width, lines, yMin, yMax, xMin, xMax, mouseX, unit } = props\n\n  const [mouseY, setMouseY] = useState()\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      setMouseY(mouse.y)\n    } else {\n      setMouseY()\n    }\n\n    props.onMouseMove(mouse, graph, xRange)\n  }\n\n  function onMouseOut() {\n    setMouseY()\n    props.onMouseOut()\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    props.onWheel(xRange)\n  }\n\n  const xTickInterval = 24 * 3600\n  const yTickInterval = roundInterval(yMax, yMin, 4)\n\n  const graphs = lines.map((line) => ({\n    type: \"line\",\n    data: line.data,\n    lineColor: line.color,\n    step: 1,\n  }))\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const mouse = {\n    x: mouseX,\n    y: mouseY,\n  }\n\n  return (\n    <Graph\n      width={width}\n      height={HEIGHT}\n      backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n      mouse={mouse}\n      xMin={xMin}\n      xMax={xMax}\n      yMin={yMin}\n      yMax={yMax}\n      xAxisAt=\"bottom\"\n      xAxisHeight={20}\n      xAxisLineColor=\"lightgrey\"\n      xTickInterval={xTickInterval}\n      xTickLength={5}\n      renderXTick={renderXLabel}\n      showXLine={true}\n      yAxisAt=\"right\"\n      yAxisWidth={70}\n      yAxisLineColor=\"lightgrey\"\n      yTickInterval={yTickInterval}\n      yTickLength={5}\n      renderYTick={(y) => renderYLabel(y, unit)}\n      graphs={graphs}\n      xLabels={[\n        {\n          x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouseX),\n          width: 100,\n          height: 20,\n          render: renderXLabel,\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      yLabels={[\n        {\n          y: canvas.math.getY(graph.height, graph.top, yMax, yMin, mouseY),\n          width: 70,\n          height: 20,\n          render: (y) => renderYLabel(y, unit),\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      onMouseMove={onMouseMove}\n      onMouseOut={onMouseOut}\n      onWheel={onWheel}\n    />\n  )\n}\n\nLineGraph.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired,\n  xMin: PropTypes.number.isRequired,\n  xMax: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n  lines: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n    })\n  ).isRequired,\n  unit: PropTypes.oneOf([\"watts\", \"amp\", \"v\", \"kOhm\", \"mA\"]).isRequired,\n}\n\nexport default LineGraph\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport DatePicker from \"react-date-picker\"\nimport { canvas } from \"react-canvas-time-series\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../../util\"\nimport * as api from \"../../../api\"\nimport withParams from \"../../../components/withParams\"\nimport withFetch from \"../../../components/withFetch\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport useToggle from \"../../../components/useToggle\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport Labels from \"../../../components/Labels\"\nimport LineGraph from \"./LineGraph\"\nimport styles from \"./index.module.css\"\n\nconst X_MIN = Math.round(new Date().getTime() / 1000 - 5 * 24 * 3600)\nconst X_MAX = Math.round(new Date().getTime() / 1000)\n\n// const NOW = Math.round(new Date().getTime() / 1000)\n// const X_MIN = NOW - 9 * 24 * 3600\n// const X_MAX = NOW + 24 * 3600\n\nexport function InverterGraphs(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    getLogs,\n    params,\n    setParams,\n  } = props\n\n  const { fetching } = getLogs\n\n  const data = get(getLogs, [\"response\"], {})\n  const logs = get(data, [\"logs\"], {})\n  const unixTimes = get(data, [\"unixTimes\"], {})\n\n  const maxPower = get(data, [\"maxPower\"], 0)\n  const maxCurrent = get(data, [\"maxCurrent\"], 0)\n  const maxVoltage = get(data, [\"maxVoltage\"], 0)\n  const maxInsulationResistance = get(data, [\"maxInsulationResistance\"], 0)\n  const maxResidualCurrent = get(data, [\"maxResidualCurrent\"], 0)\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  const [mouseX, setMouseX] = useState()\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    power: {},\n    current: {},\n    voltage: {},\n    insulationResistance: {},\n    residualCurrent: {},\n  })\n\n  const [filterDates, setFilterDates] = useState({\n    gte: new Date(X_MIN * 1000),\n    lte: new Date(X_MAX * 1000),\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n\n  function setFilterDate(name, date) {\n    setFilterDates({\n      ...filterDates,\n      [name]: date,\n    })\n  }\n\n  function onClickFilter() {\n    setParams({\n      ...params,\n      xMin: Math.round(filterDates.gte.getTime() / 1000),\n      xMax: Math.round(filterDates.lte.getTime() / 1000),\n    })\n  }\n\n  function onMouseMove(mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouseX(mouse.x)\n\n      const { xMin, xMax } = xRange\n\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(unixTimes, x)\n\n      const unixTime = unixTimes[i]\n\n      if (unixTime) {\n        const nearest = {\n          timestamp: new Date(unixTime * 1000).toISOString(),\n          power: {},\n          current: {},\n          voltage: {},\n          insulationResistance: {},\n          residualCurrent: {},\n        }\n\n        for (const device of checkedDevices) {\n          nearest.power[device.id] = get(logs, [device.id, \"power\", i, \"y\"], 0)\n          nearest.current[device.id] = get(\n            logs,\n            [device.id, \"current\", i, \"y\"],\n            0\n          )\n          nearest.voltage[device.id] = get(\n            logs,\n            [device.id, \"voltage\", i, \"y\"],\n            0\n          )\n          nearest.insulationResistance[device.id] = get(\n            logs,\n            [device.id, \"insulationResistance\", i, \"y\"],\n            0\n          )\n          nearest.residualCurrent[device.id] = get(\n            logs,\n            [device.id, \"residualCurrent\", i, \"y\"],\n            0\n          )\n        }\n\n        setNearest(nearest)\n      }\n    } else {\n      props.enableScroll()\n\n      setMouseX()\n\n      setNearest({\n        timestamp: undefined,\n        power: {},\n        current: {},\n        voltage: {},\n        insulationResistance: {},\n        residualCurrent: {},\n      })\n    }\n\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouseX()\n\n    setNearest({\n      timestamp: undefined,\n      power: {},\n      current: {},\n      voltage: {},\n      insulationResistance: {},\n      residualCurrent: {},\n    })\n  }\n\n  function onWheel(xRange) {\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  const { xMin, xMax } = params\n\n  return (\n    <div>\n      <div className={styles.filters}>\n        <DeviceFilter\n          devices={devices}\n          checked={checked}\n          colors={colors}\n          onToggle={toggle}\n        />\n        <div className={styles.dateFilters}>\n          <DatePicker\n            format=\"yyyy-MM-dd\"\n            value={filterDates.gte}\n            disabled={fetching}\n            onChange={date => setFilterDate(\"gte\", date)}\n          />\n          <div> - </div>\n          <DatePicker\n            format=\"yyyy-MM-dd\"\n            value={filterDates.lte}\n            disabled={fetching}\n            onChange={date => setFilterDate(\"lte\", date)}\n          />\n        </div>\n        <Button loading={fetching} onClick={onClickFilter}>\n          Filter\n        </Button>\n      </div>\n      <h5 className={styles.graphHeader}>Power (watts)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"power\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"watts\"\n          yMax={maxPower}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.power, [device.id], 0)} watts`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Current (amp)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          plantId={plantId}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"current\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"amp\"\n          yMax={maxCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.current, [device.id], 0)} amp`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Voltage (v)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"voltage\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"v\"\n          yMax={maxVoltage}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.voltage, [device.id], 0)} v`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Insulation Resistance (kOhm)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"insulationResistance\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"kOhm\"\n          yMax={maxInsulationResistance}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(\n                nearest.insulationResistance,\n                [device.id],\n                0\n              )} kOhm`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Residual Current (mA)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"residualCurrent\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"mA\"\n          yMax={maxResidualCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.residualCurrent, [device.id], 0)} mA`,\n            }))}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nInverterGraphs.propTypes = {\n  graphWidth: PropTypes.number.isRequired,\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nasync function getLogs(params, props) {\n  const { plantId, deviceIds, xMin, xMax } = params\n\n  const gte = new Date(xMin * 1000).toISOString()\n  const lte = new Date(xMax * 1000).toISOString()\n  const step = 5\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getLogs({\n        plantId,\n        deviceId,\n        gte,\n        lte,\n        step,\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const unixTimes = get(res, [0, \"data\"], []).map(({ unixTime }) => unixTime)\n\n  let maxPower = 0\n  let maxCurrent = 0\n  let maxVoltage = 0\n  let maxInsulationResistance = 0\n  let maxResidualCurrent = 0\n\n  const logs = {}\n\n  for (const { deviceId, data } of res) {\n    logs[deviceId] = {\n      power: [],\n      current: [],\n      voltage: [],\n      insulationResistance: [],\n      residualCurrent: [],\n    }\n\n    for (const d of data) {\n      logs[deviceId].power.push({\n        x: d.unixTime,\n        y: d.power,\n      })\n\n      logs[deviceId].current.push({\n        x: d.unixTime,\n        y: d.current,\n      })\n\n      logs[deviceId].voltage.push({\n        x: d.unixTime,\n        y: d.voltage,\n      })\n\n      logs[deviceId].insulationResistance.push({\n        x: d.unixTime,\n        y: d.insulationResistance,\n      })\n\n      logs[deviceId].residualCurrent.push({\n        x: d.unixTime,\n        y: d.residualCurrent,\n      })\n\n      maxPower = Math.max(d.power, maxPower)\n      maxCurrent = Math.max(d.current, maxCurrent)\n      maxVoltage = Math.max(d.voltage, maxVoltage)\n      maxInsulationResistance = Math.max(\n        d.insulationResistance,\n        maxInsulationResistance\n      )\n      maxResidualCurrent = Math.max(d.residualCurrent, maxResidualCurrent)\n    }\n  }\n\n  return {\n    maxPower,\n    maxCurrent,\n    maxVoltage,\n    maxInsulationResistance,\n    maxResidualCurrent,\n    logs,\n    unixTimes,\n  }\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  disableScroll,\n  withParams({\n    xMin: X_MIN,\n    xMax: X_MAX,\n  }),\n  withFetch(getLogs, {\n    name: \"getLogs\",\n    getFetchId: (name, params) => `${name}-${params.plantId}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {},\n    shouldFetch: (props, repsonse, params) => true,\n  })\n)(InverterGraphs)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../util\"\nimport * as api from \"../../api\"\nimport COLORS from \"../../lib/colors\"\nimport { bound } from \"../../util/math\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport EnergyGraph from \"./EnergyGraph\"\nimport InverterGraphs from \"./InverterGraphs\"\n\nconst GRAPH_PADDING = 10\nconst MIN_GRAPH_WIDTH = 300\nconst MAX_GRAPH_WIDTH = 1200\n\nexport function PowerPlantDetailPage(props) {\n  const { divSize, getPowerPlant } = props\n\n  const devices = get(getPowerPlant, [\"response\", \"devices\"], [])\n\n  const colors = devices.reduce((colors, device, i) => {\n    colors[device.id] = COLORS[i]\n    return colors\n  }, {})\n\n  const graphWidth = bound(\n    divSize.width - 2 * GRAPH_PADDING,\n    MIN_GRAPH_WIDTH,\n    MAX_GRAPH_WIDTH\n  )\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <div className={styles.headerText}>\n          Plant {props.match.params.plantId}\n        </div>\n        <div className={styles.subHeader}>{devices.length} devices</div>\n      </div>\n      <Loading\n        loading={getPowerPlant.fetching || !getPowerPlant.fetchedAt}\n        error={getPowerPlant.error}\n        onClickRetry={getPowerPlant.fetch}\n      >\n        {devices.length > 0 && (\n          <>\n            <EnergyGraph\n              plantId={props.match.params.plantId}\n              devices={devices}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n            <InverterGraphs\n              plantId={props.match.params.plantId}\n              devices={devices.filter(\n                (device) => device.model != \"Cluster Controller\"\n              )}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n          </>\n        )}\n      </Loading>\n    </div>\n  )\n}\n\nPowerPlantDetailPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      plantId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  divSize: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  getPowerPlant: PropTypes.shape({\n    response: PropTypes.shape({\n      devices: PropTypes.array.isRequired,\n    }),\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default compose(\n  connect((state) => ({ divSize: state.divSize })),\n  withFetch((params) => api.getPowerPlant(params), {\n    name: \"getPowerPlant\",\n    getFetchId: (name, params) => `${name}-${params.id}`,\n    getParams: (props) => ({ id: props.match.params.plantId }),\n    shouldFetch: (props, response) => !response,\n  })\n)(PowerPlantDetailPage)\n","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport styles from \"./App.module.css\"\nimport withDivSize from \"./components/withDivSize\"\nimport HomePage from \"./pages/HomePage\"\nimport PowerPlantDetailPage from \"./pages/PowerPlantDetailPage\"\n\nexport function App() {\n  return (\n    <div className={styles.component}>\n      <h5>Time zone: {process.env.REACT_APP_TIME_ZONE}</h5>\n\n      <Switch>\n        <Route path=\"/plants/:plantId\" component={PowerPlantDetailPage} />\n        <Route component={HomePage} />\n      </Switch>\n\n      <div className={styles.footer} />\n    </div>\n  )\n}\n\nexport default withDivSize(App)\n","import React, { useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions } from \"../reducer\"\n\nexport default function withDivSize(Component) {\n  function WithDivSize(props) {\n    const ref = useRef()\n\n    useEffect(() => {\n      function setDivSize() {\n        props.updateDivSize({\n          // size of div\n          height: ref.current.clientHeight,\n          width: ref.current.clientWidth,\n        })\n      }\n\n      setDivSize()\n\n      window.addEventListener(\"resize\", setDivSize)\n\n      return () => {\n        window.removeEventListener(\"resize\", setDivSize)\n      }\n    }, [])\n\n    return (\n      <div ref={ref}>\n        <Component {...props} />\n      </div>\n    )\n  }\n\n  WithDivSize.propTypes = {\n    updateDivSize: PropTypes.func.isRequired,\n  }\n\n  return connect(\n    undefined,\n    actions.divSize\n  )(WithDivSize)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { HashRouter as Router } from \"react-router-dom\"\n\n// redux\nimport { applyMiddleware, createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport { reducer } from \"./reducer\"\n\nlet middlewares = [thunk]\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(logger)\n}\n\nconst store = createStore(reducer, applyMiddleware(...middlewares))\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"FiscalEnergyGraph_stats__3j2T_\",\"month\":\"FiscalEnergyGraph_month__1qsdS\",\"number\":\"FiscalEnergyGraph_number__3ViBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"HomePage_count__3Q6q8\",\"col\":\"HomePage_col__33bFf\",\"row\":\"HomePage_row__i7JCH\",\"plantHeader\":\"HomePage_plantHeader__26-Kz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PowerPlantDetailPage_header__2Oy6X\",\"headerText\":\"PowerPlantDetailPage_headerText__3xQIM\",\"subHeader\":\"PowerPlantDetailPage_subHeader__4shvN\"};"],"sourceRoot":""}