{"version":3,"sources":["pages/PowerPlantDetailPage/index.module.css","pages/PowerPlantDetailPage/EnergyGraph/index.module.css","components/Labels.module.css","App.module.css","pages/HomePage/PlantHeader.module.css","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.module.css","components/LinkButton.module.css","components/DeviceFilter.module.css","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.module.css","pages/PowerPlantDetailPage/InverterGraphs/index.module.css","reducer/divSize.js","reducer/fetch.js","reducer/byId.js","reducer/cache.js","reducer/index.js","util/index.js","api.js","components/withFetch.js","components/Loading.js","components/LinkButton.js","pages/HomePage/PlantHeader.js","util/date.js","util/math.js","pages/HomePage/GraphPlaceholder.js","pages/HomePage/FiscalEnergyGraph.js","pages/HomePage/index.js","lib/colors.js","components/withParams.js","components/ColorBox.js","components/DeviceFilter.js","components/useToggle.js","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.js","components/disableScroll.js","components/Labels.js","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.js","pages/PowerPlantDetailPage/EnergyGraph/index.js","pages/PowerPlantDetailPage/InverterGraphs/LineGraph.js","pages/PowerPlantDetailPage/InverterGraphs/index.js","pages/PowerPlantDetailPage/index.js","App.js","components/withDivSize.js","serviceWorker.js","index.js","pages/HomePage/FiscalEnergyGraph.module.css","pages/HomePage/index.module.css"],"names":["module","exports","header","headerText","subHeader","filter","filterCol","timestamp","labels","label","component","footer","devices","LinkButton","table","cell","TimeUnitButtons","filters","dateFilters","graphHeader","row","UPDATE","initialState","width","height","actions","updateDivSize","_ref","type","START","SUCCESS","FAIL","fetchStart","fetchId","fetchSuccess","_ref2","response","fetchFail","_ref3","error","INITIAL_FETCH_STATE","fetching","undefined","fetchedAt","respondedAt","getFetchState","state","selectors","UPDATE_ONE","UPDATE_MANY","updateOne","id","update","updateMany","reducer","arguments","length","action","Object","objectSpread","defineProperty","updateOneCache","name","updateManyCache","getOne","getMany","combineReducers","divSize","fetch","now","Date","toISOString","cache","byId","compose","_len","funcs","Array","_key","val","slice","reverse","reduce","v","f","get","keys","defaultVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","key","value","err","return","TIME_ZONE_OFFSET","parseInt","process","sendQuery","_callee","url","query","variables","res","text","_res","regenerator_default","a","wrap","_context","prev","method","body","JSON","stringify","headers","Content-Type","sent","parse","errors","console","Error","message","abrupt","t0","stop","_callee2","_context2","data","powerPlants","_callee3","params","_context3","powerPlant","getEnergy","_x5","_getEnergy","apply","this","_callee4","plantId","deviceId","unit","_params$timestamp","lte","gte","energy","min","i","_i","diff","_context4","timeZoneOffset","Math","toConsumableArray","d","map","max","floor","push","unixTime","getTime","warn","concat","getLogs","_x6","_getLogs","_callee5","_params$step","logs","_context5","step","log","parseFloat","power","current","voltage","insulationResistance","residualCurrent","withFetch","request","_ref$name","_ref$getFetchId","getFetchId","_ref$getParams","getParams","props","_ref$shouldFetch","shouldFetch","_ref$saveCache","saveCache","_ref$debounce","debounce","Component","connect","rest","objectWithoutProperties","paramId","delay","_useState","useState","_useState2","slicedToArray","debouncedVal","setDebouncedVal","useEffect","timer","setTimeout","clearTimeout","useDebounce","_fetch","asyncToGenerator","mark","_response","react_default","createElement","assign","Loading","loading","renderLoading","Message","negative","Button","onClick","onClickRetry","children","defaultProps","className","styles","PlantHeader","plant","components_LinkButton","PropTypes","shape","string","isRequired","array","func","timeZone","str","moment","tz","roundInterval","numSteps","x","numDigits","log10","abs","lastDigit","n","pow","getDigit","ceil","GraphPlaceholder","backgroundColor","style","number","MIN_Y_MAX","X_MIN","X_MAX","Y_MIN","_","y","device","yMax","find","model","api","startOf","subtract","endOf","energyLastMonth","energyCurrentMonth","yTickInterval","components_Loading","HomePage_GraphPlaceholder","stats","month","toLocaleString","index_es","animate","xMin","xMax","yMin","xAxisAt","xAxisHeight","xAxisLineColor","xTickInterval","xTickLength","showXLine","yAxisAt","yAxisWidth","yAxisLineColor","renderYTick","round","yLabels","render","color","drawLine","lineColor","graphs","barWidth","getBarColor","PADDING","MIN_GRAPH_WIDTH","GRAPH_HEIGHT","Graph","plantHeader","HomePage_PlantHeader","padding","paddingTop","HomePage_FiscalEnergyGraph","_getPowerPlants","getPowerPlants","numGraphsPerRow","graphWidth","count","col","arr","size","chunks","chunk","plants","history","COLORS","withParams","initialParams","setParams","ColorBox","margin","Row","checked","Dropdown","Item","Checkbox","components_ColorBox","DeviceFilter","colors","onToggle","open","setOpen","values","all","Group","basic","Menu","maxHeight","overflow","Divider","labelPosition","icon","content","useToggle","ids","setState","_toggleAll","_toggle","UNITS","TEXT","MONTH","DAY","HOUR","active","disableScroll","document","enableScroll","Labels","zoomable","draggable","ReactCanvasTimeSeries","getLayout","layout","MIN_BAR_WIDTH","BAR_PADDING","HEIGHT","renderXLabel","isNaN","add","format","renderYLabel","yMaxs","xs","onChangeXRange","mouse","setMouse","_useState3","diffs","_useState4","nearest","setNearest","graph","checkedDevices","getNumXTicks","BarGraph_Graph","renderXTick","yTickLength","xLabels","canvas","math","getX","left","getY","top","onMouseMove","e","xRange","isInside","findNearestIndex","onMouseOut","onWheel","components_Labels","NOW","unix","CURRENT_MONTH","getDefaultXRange","getGte","_unit","toLowerCase","getLte","getUnixTimeFromX","getXFromUnixTime","tMin","tMax","t","x0","deviceIds","Promise","_ref5","_x3","_ref6","_ref7","_ref8","_ref4","_useToggle","_useToggle2","toggle","Fragment","EnergyGraph_TimeUnitButtons","components_DeviceFilter","EnergyGraph_BarGraph","LineGraph","lines","mouseX","mouseY","setMouseY","line","LineGraph_Graph","unixTimes","maxPower","maxCurrent","maxVoltage","maxInsulationResistance","maxResidualCurrent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","finish","t1","repsonse","setMouseX","_useState5","_useState6","filterDates","setFilterDates","setFilterDate","date","entry_default","disabled","onChange","InverterGraphs_LineGraph","GRAPH_PADDING","MAX_GRAPH_WIDTH","_x4","_getPowerPlant","match","getPowerPlant","Infinity","bound","PowerPlantDetailPage_EnergyGraph","PowerPlantDetailPage_InverterGraphs","withDivSize","react_router","path","PowerPlantDetailPage","HomePage","ref","useRef","setDivSize","clientHeight","clientWidth","window","addEventListener","removeEventListener","Boolean","location","hostname","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","react_router_dom","basename","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8709f9aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PowerPlantDetailPage_header__2Oy6X\",\"headerText\":\"PowerPlantDetailPage_headerText__3xQIM\",\"subHeader\":\"PowerPlantDetailPage_subHeader__4shvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"EnergyGraph_filter__sXpE0\",\"filterCol\":\"EnergyGraph_filterCol__3lRs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timestamp\":\"Labels_timestamp__14xTO\",\"labels\":\"Labels_labels__3OjBJ\",\"label\":\"Labels_label__3jxsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__1dd61\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PlantHeader_component__NDfu0\",\"devices\":\"PlantHeader_devices__2U2Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"BarGraph_component__2Avo8\",\"labels\":\"BarGraph_labels__3I-cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"LinkButton_LinkButton__38eEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DeviceFilter_table__lKnNt\",\"cell\":\"DeviceFilter_cell__3_4bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeUnitButtons\":\"TimeUnitButtons_TimeUnitButtons__2HFO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"InverterGraphs_filters__3YMN1\",\"dateFilters\":\"InverterGraphs_dateFilters__3mfAg\",\"graphHeader\":\"InverterGraphs_graphHeader__20S_9\",\"row\":\"InverterGraphs_row__Gj9MO\",\"labels\":\"InverterGraphs_labels__1li5R\"};","const UPDATE = \"DIV_SIZE/UPDATE\"\n\nconst initialState = {\n  width: 0,\n  height: 0,\n}\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        width: action.width,\n        height: action.height,\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  updateDivSize: ({ width, height }) => ({ type: UPDATE, width, height }),\n}\n","const START = \"FETCH/START\"\nconst SUCCESS = \"FETCH/SUCCESS\"\nconst FAIL = \"FETCH/FAIL\"\n\nexport const actions = {\n  fetchStart: ({ fetchId }) => ({ type: START, fetchId }),\n  fetchSuccess: ({ fetchId, response }) => ({\n    type: SUCCESS,\n    fetchId,\n    response,\n  }),\n  fetchFail: ({ fetchId, error }) => ({ type: FAIL, fetchId, error }),\n}\n\nconst INITIAL_FETCH_STATE = {\n  fetching: false,\n  error: \"\",\n  response: undefined,\n  fetchedAt: \"\",\n  respondedAt: \"\",\n}\n\nfunction getFetchState(state, fetchId) {\n  return state[fetchId] || INITIAL_FETCH_STATE\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case START: {\n      const { fetchId } = action\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: true,\n          error: \"\",\n        },\n      }\n    }\n    case SUCCESS: {\n      const { fetchId, response } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          response,\n          fetchedAt: now,\n          respondedAt: now,\n        },\n      }\n    }\n    case FAIL: {\n      const { fetchId, error } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          error,\n          fetchedAt: now,\n        },\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getFetchState: (state, fetchId) => state[fetchId] || INITIAL_FETCH_STATE,\n}\n","const UPDATE_ONE = \"BY_ID/UPDATE_ONE\"\nconst UPDATE_MANY = \"BY_ID/UPDATE_MANY\"\n\nexport const actions = {\n  updateOne: ({ id, update }) => ({ type: UPDATE_ONE, id, update }),\n  updateMany: ({ update }) => ({ type: UPDATE_MANY, update }),\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_ONE: {\n      const { id, update } = action\n\n      return {\n        ...state,\n        [id]: update(state[id]),\n      }\n    }\n    case UPDATE_MANY: {\n      const { update } = action\n\n      return {\n        ...state,\n        ...update(state),\n      }\n    }\n    default:\n      return state\n  }\n}\n","import * as byId from \"./byId\"\n\nconst UPDATE_ONE = \"CACHE/UPDATE_ONE\"\nconst UPDATE_MANY = \"CACHE/UPDATE_MANY\"\n\nexport const actions = {\n  updateOneCache: ({ name, id, update }) => ({\n    type: UPDATE_ONE,\n    name,\n    id,\n    update,\n  }),\n  updateManyCache: ({ name, update }) => ({ type: UPDATE_MANY, name, update }),\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_ONE: {\n      const { name, id, update } = action\n\n      return {\n        ...state,\n        [name]: byId.reducer(\n          state[name],\n          byId.actions.updateOne({ id, update })\n        ),\n      }\n    }\n    case UPDATE_MANY: {\n      const { name, update } = action\n\n      return {\n        ...state,\n        [name]: byId.reducer(state[name], byId.actions.updateMany({ update })),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getOne: (state, name, id) => (state[name] ? state[name][id] : undefined),\n  getMany: (state, name) => state[name] || {},\n}\n","import { combineReducers } from \"redux\"\nimport * as divSize from \"./divSize\"\nimport * as fetch from \"./fetch\"\nimport * as cache from \"./cache\"\n\nexport const reducer = combineReducers({\n  divSize: divSize.reducer,\n  fetch: fetch.reducer,\n  cache: cache.reducer,\n})\n\nexport const actions = {\n  divSize: divSize.actions,\n  fetch: fetch.actions,\n  cache: cache.actions,\n}\n\nexport const selectors = {\n  fetch: fetch.selectors,\n  cache: cache.selectors,\n}\n","export function compose(...funcs) {\n  return val =>\n    funcs\n      .slice()\n      .reverse()\n      .reduce((v, f) => {\n        return f(v)\n      }, val)\n}\n\nexport function chunk(arr, size) {\n  let chunks = []\n\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size))\n  }\n\n  return chunks\n}\n\nexport function get(val, keys, defaultVal) {\n  for (let key of keys) {\n    if (val == undefined) {\n      break\n    }\n    val = val[key]\n  }\n\n  if (val == undefined) {\n    return defaultVal\n  }\n\n  return val\n}\n","const TIME_ZONE_OFFSET = parseInt(process.env.REACT_APP_TIME_ZONE_OFFSET)\n\nasync function sendQuery(url, query, variables) {\n  const res = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  const text = await res.text()\n\n  try {\n    const res = JSON.parse(text)\n\n    if (res.errors) {\n      console.error(\"GraphQL error\", res.errors)\n      throw new Error(res.errors[0].message)\n    }\n\n    return res\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function getPowerPlants() {\n  const query = `\n    query {\n      powerPlants {\n        count\n        data {\n          id\n          devices {\n            id\n            model\n          }\n        }\n      }\n    }\n  `\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query)\n  return res.data.powerPlants\n}\n\nexport async function getPowerPlant(params) {\n  const { id } = params\n\n  const query = `\n    query PowerPlant($id: String!) {\n      powerPlant(id: $id) {\n        id\n        devices {\n          id\n          model\n        }\n      }\n    }\n  `\n\n  const variables = { id }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  return res.data.powerPlant\n}\n\nexport async function getEnergy(params) {\n  const query = `\n    query Energy($plantId: String!, $deviceId: String!, $unit: Unit! $timestamp: TimeZoneRangeInput!) {\n      energy(plantId: $plantId, deviceId: $deviceId, unit: $unit, timestamp: $timestamp) {\n        timestamp\n        energy\n      }\n    }\n  `\n\n  const {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: { lte, gte },\n  } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: {\n      timeZoneOffset: TIME_ZONE_OFFSET,\n      lte,\n      gte,\n    },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  const { energy } = res.data\n\n  // replace 0 energy (possibly missing data) with min energy\n  let min = Math.min(...energy.filter(d => d.energy > 0).map(d => d.energy))\n  for (let i = 0; i < energy.length; i++) {\n    min = Math.max(min, energy[i].energy)\n\n    if (energy[i].energy == 0) {\n      energy[i].energy = min\n    }\n  }\n\n  const data = []\n\n  for (let i = 1; i < energy.length; i++) {\n    const diff = Math.floor(energy[i].energy) - Math.floor(energy[i - 1].energy)\n\n    data.push({\n      timestamp: energy[i].timestamp,\n      energy: energy[i].energy,\n      unixTime: Math.floor(new Date(energy[i].timestamp).getTime() / 1000),\n      diff,\n    })\n\n    if (diff < 0) {\n      console.warn(\n        `Found negative energy diff for plant ${plantId} device ${deviceId}`,\n        data\n      )\n    }\n  }\n\n  return data\n}\n\nexport async function getLogs(params) {\n  const query = `\n    query Logs($plantId: String!, $deviceId: String!, $timestamp: TimestampRangeInput!) {\n      logs(plantId: $plantId, deviceId: $deviceId, timestamp: $timestamp) {\n        timestamp\n        energy\n        power\n        current\n        voltage\n        insulationResistance\n        residualCurrent\n      }\n    }\n  `\n\n  const { plantId, deviceId, lte, gte, step = 1 } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    timestamp: {\n      lte,\n      gte,\n      step,\n    },\n  }\n\n  const res = await sendQuery(process.env.REACT_APP_API_URL, query, variables)\n  const { logs } = res.data\n\n  return logs.map(log => ({\n    ...log,\n    energy: parseFloat(log.energy),\n    power: parseFloat(log.power),\n    current: parseFloat(log.current),\n    voltage: parseFloat(log.voltage),\n    insulationResistance: parseFloat(log.insulationResistance),\n    residualCurrent: parseFloat(log.residualCurrent),\n    unixTime: Math.floor(new Date(log.timestamp).getTime() / 1000),\n  }))\n}\n","import React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions, selectors } from \"../reducer\"\n\nfunction useDebounce(val, delay) {\n  const [debouncedVal, setDebouncedVal] = useState(val)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedVal(val)\n    }, delay)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [val])\n\n  return debouncedVal\n}\n\nexport default function withFetch(\n  request,\n  {\n    name = \"fetch\",\n    getFetchId = (name, params) => name,\n    getParams = props => ({}),\n    shouldFetch = (props, response, params) => true,\n    saveCache = (props, response, params) => {},\n    debounce = 0,\n  } = {}\n) {\n  return Component => {\n    function WithFetch(props) {\n      const {\n        fetching,\n        error,\n        response,\n        fetchedAt,\n        respondedAt,\n        fetchStart,\n        fetchSuccess,\n        fetchFail,\n        ...rest\n      } = props\n\n      const params = getParams(props)\n      const fetchId = getFetchId(name, params)\n      const paramId = useDebounce(JSON.stringify(params), debounce)\n\n      async function fetch() {\n        if (!shouldFetch(props, response, params)) {\n          return\n        }\n\n        if (fetching) {\n          return\n        }\n\n        fetchStart({ fetchId })\n\n        try {\n          const response = await request(params, props)\n\n          fetchSuccess({ fetchId, response })\n          saveCache(props, response, params)\n        } catch (error) {\n          fetchFail({ fetchId, error: error.message })\n        }\n      }\n\n      useEffect(() => {\n        fetch()\n      }, [paramId])\n\n      return (\n        <Component\n          {...rest}\n          {...{\n            [name]: {\n              fetching,\n              error,\n              fetch,\n              response,\n              fetchedAt,\n              respondedAt,\n              params,\n            },\n          }}\n        />\n      )\n    }\n\n    WithFetch.propTypes = {\n      fetching: PropTypes.bool.isRequired,\n      error: PropTypes.string.isRequired,\n      response: PropTypes.any,\n      respondedAt: PropTypes.string.isRequired,\n      fetchedAt: PropTypes.string.isRequired,\n      fetchStart: PropTypes.func.isRequired,\n      fetchSuccess: PropTypes.func.isRequired,\n      fetchFail: PropTypes.func.isRequired,\n    }\n\n    return connect(\n      (state, props) => {\n        const params = getParams(props)\n        const fetchId = getFetchId(name, params)\n\n        return selectors.fetch.getFetchState(state.fetch, fetchId)\n      },\n      actions.fetch\n    )(WithFetch)\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Message, Button } from \"semantic-ui-react\"\n\nexport function Loading(props) {\n  if (props.loading) {\n    return props.renderLoading()\n  }\n\n  if (props.error) {\n    return (\n      <Message negative>\n        <p>{props.error}</p>\n        <Button onClick={props.onClickRetry}>Retry</Button>\n      </Message>\n    )\n  }\n\n  return props.children\n}\n\nLoading.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onClickRetry: PropTypes.func.isRequired,\n  renderLoading: PropTypes.func.isRequired,\n}\n\nLoading.defaultProps = {\n  renderLoading: () => <div>Loading...</div>,\n}\n\nexport default Loading\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styles from \"./LinkButton.module.css\"\n\nexport function LinkButton(props) {\n  const { onClick, children } = props\n\n  return (\n    <button className={styles.LinkButton} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default LinkButton\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport LinkButton from \"../../components/LinkButton\"\nimport styles from \"./PlantHeader.module.css\"\n\nexport function PlantHeader(props) {\n  const { plant, onClick } = props\n\n  return (\n    <div className={styles.component}>\n      <LinkButton onClick={onClick}>Plant {plant.id}</LinkButton>\n      <div className={styles.devices}>{plant.devices.length} devices</div>\n    </div>\n  )\n}\n\nPlantHeader.defaultProps = {\n  plant: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    devices: PropTypes.array.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default PlantHeader\n","import moment from \"moment-timezone\"\n\nexport function timeZone(str) {\n  return moment.tz(str, process.env.REACT_APP_TIME_ZONE)\n}\n\nexport function now() {\n  return moment().unix()\n}\n\nexport function getMonth(unixTime) {\n  return moment.tz(unixTime * 1000, process.env.REACT_APP_TIME_ZONE).month()\n}\n","function getNumDigits(x) {\n  return Math.max(Math.floor(Math.log10(Math.abs(x))), 0) + 1\n}\n\nfunction getDigit(x, n) {\n  return Math.floor((x / Math.pow(10, n - 1)) % 10)\n}\n\nexport function roundInterval(max, min, numSteps) {\n  const numDigits = getNumDigits((max - min) / numSteps)\n  const lastDigit = getDigit((max - min) / numSteps, numDigits)\n\n  // mapping from last digit to scale\n  // 9, 10 -> 10\n  // 7, 8 -> 8\n  // ...\n  // 1, 2 -> 1\n  const scale = 2 * Math.ceil(lastDigit / 2)\n  return scale * 10 ** (numDigits - 1)\n}\n\nexport function bound(val, min = -Infinity, max = Infinity) {\n  return Math.min(Math.max(val, min), max)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function GraphPlaceholder(props) {\n  const { width, height, backgroundColor } = props\n\n  return <div style={{ width, height, backgroundColor }} />\n}\n\nGraphPlaceholder.defaultProps = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n}\n\nexport default GraphPlaceholder\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Graph } from \"react-canvas-time-series\"\nimport { get } from \"../../util\"\nimport { timeZone } from \"../../util/date\"\nimport { roundInterval } from \"../../util/math\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport GraphPlaceholder from \"./GraphPlaceholder\"\nimport styles from \"./FiscalEnergyGraph.module.css\"\n\nconst MIN_Y_MAX = 1000\nconst X_MIN = 0.5\nconst X_MAX = 12.5\nconst Y_MIN = 0\n\nconst LINE_DATA = [...new Array(12)].map((_, i) => ({\n  x: i + 1,\n  y: 100 * i,\n}))\n\nexport function FiscalEnergyGraph(props) {\n  const { width, height, getEnergy } = props\n\n  const { fetching, fetchedAt, fetch, error } = getEnergy\n\n  const data = get(getEnergy, [\"response\", \"data\"], [])\n  const yMax = Math.max(MIN_Y_MAX, get(getEnergy, [\"response\", \"yMax\"], 0))\n  const energyLastMonth = get(data, [data.length - 2, \"diff\"], 0)\n  const energyCurrentMonth = get(data, [data.length - 1, \"diff\"], 0)\n\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  return (\n    <Loading\n      loading={fetching || !fetchedAt}\n      error={error}\n      onClickRetry={fetch}\n      renderLoading={() => (\n        <GraphPlaceholder\n          width={width}\n          height={height}\n          backgroundColor=\"whitesmoke\"\n        />\n      )}\n    >\n      <div>\n        <div className={styles.stats}>\n          <div className={styles.month}>\n            Last month{\" \"}\n            <span className={styles.number}>\n              {energyLastMonth.toLocaleString()} kWh\n            </span>\n          </div>\n          <div className={styles.month}>\n            This month{\" \"}\n            <span className={styles.number}>\n              {energyCurrentMonth.toLocaleString()} kWh\n            </span>\n          </div>\n        </div>\n        <Graph\n          width={width}\n          height={height}\n          backgroundColor=\"beige\"\n          animate={false}\n          xMin={X_MIN}\n          xMax={X_MAX}\n          yMin={Y_MIN}\n          yMax={yMax}\n          xAxisAt=\"bottom\"\n          xAxisHeight={20}\n          xAxisLineColor=\"lightgrey\"\n          xTickInterval={1}\n          xTickLength={5}\n          showXLine={false}\n          yAxisAt=\"right\"\n          yAxisWidth={70}\n          yAxisLineColor=\"lightgrey\"\n          yTickInterval={yTickInterval}\n          renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n          yLabels={[\n            {\n              y: yMax,\n              width: 70,\n              height: 20,\n              render: y => `${y.toLocaleString()} kWh`,\n              color: \"white\",\n              backgroundColor: \"blue\",\n              drawLine: true,\n              lineColor: \"blue\",\n            },\n          ]}\n          graphs={[\n            {\n              type: \"bars\",\n              barWidth: 16,\n              getBarColor: () => \"orange\",\n              data,\n            },\n            /*\n            {\n              type: \"line\",\n              data: LINE_DATA,\n              lineColor: \"red\",\n              step: 1,\n            },\n            */\n          ]}\n        />\n      </div>\n    </Loading>\n  )\n}\n\nFiscalEnergyGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n    error: PropTypes.string.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n      yMax: PropTypes.number.isRequired,\n    }),\n  }),\n}\n\nasync function getEnergy(params, props) {\n  const { plantId } = params\n\n  const now = new Date()\n\n  // Find the first cluster controller\n  const device = props.plant.devices.find(\n    device => device.model == \"Cluster Controller\"\n  )\n\n  const res = await api.getEnergy({\n    plantId,\n    deviceId: device.id,\n    unit: \"MONTH\",\n    timestamp: {\n      // last year December\n      gte: timeZone(now.toISOString())\n        .startOf(\"year\")\n        .subtract(1, \"month\")\n        .toISOString(),\n      // end of current month\n      lte: timeZone(now.toISOString())\n        .endOf(\"month\")\n        .toISOString(),\n    },\n  })\n\n  const data = res.map((energy, i) => ({\n    ...energy,\n    x: i + 1,\n    y: energy.diff,\n  }))\n\n  const yMax = Math.max(...data.map(d => d.y))\n\n  return {\n    data,\n    yMax,\n  }\n}\n\nexport default withFetch(getEnergy, {\n  name: \"getEnergy\",\n  getFetchId: (name, params) => `${name}-${params.plantId}`,\n  getParams: props => ({ plantId: props.plant.id }),\n  shouldFetch: (props, response) => !response,\n})(FiscalEnergyGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose, chunk } from \"../../util\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport PlantHeader from \"./PlantHeader\"\nimport FiscalEnergyGraph from \"./FiscalEnergyGraph\"\n\nconst PADDING = 10\nconst MIN_GRAPH_WIDTH = 340\nconst GRAPH_HEIGHT = 210\n\nexport function getNumGraphsPerRow(width) {\n  if (width < MIN_GRAPH_WIDTH * 2 + 2 * PADDING) {\n    return 1\n  }\n  if (width < MIN_GRAPH_WIDTH * 3 + 2 * PADDING) {\n    return 2\n  }\n  if (width < MIN_GRAPH_WIDTH * 5 + 2 * PADDING) {\n    return 3\n  }\n\n  return 5\n}\n\nfunction Graph(props) {\n  const { width, plant, onClick } = props\n  const padding = 10\n\n  return (\n    <div>\n      <div className={styles.plantHeader}>\n        <PlantHeader plant={plant} onClick={onClick} />\n      </div>\n      <div style={{ padding, paddingTop: 0 }}>\n        <FiscalEnergyGraph\n          width={width - 2 * padding}\n          height={GRAPH_HEIGHT}\n          plant={plant}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function HomePage(props) {\n  const { divSize, getPowerPlants } = props\n\n  const numGraphsPerRow = getNumGraphsPerRow(divSize.width)\n  const graphWidth = Math.max(\n    Math.floor((divSize.width - 2 * PADDING) / numGraphsPerRow),\n    MIN_GRAPH_WIDTH\n  )\n\n  const count = get(getPowerPlants, [\"response\", \"count\"], 0)\n  const data = get(getPowerPlants, [\"response\", \"data\"], [])\n\n  return (\n    <Loading\n      loading={getPowerPlants.fetching || !getPowerPlants.fetchedAt}\n      error={getPowerPlants.error}\n      onClickRetry={getPowerPlants.fetch}\n    >\n      <div className={styles.count}>{count} power plants</div>\n      <div className={styles.col}>\n        {chunk(data, numGraphsPerRow).map((plants, i) => (\n          <div key={i} className={styles.row}>\n            {plants.map(plant => (\n              <Graph\n                key={plant.id}\n                width={graphWidth}\n                plant={plant}\n                onClick={() => props.history.push(`/plants/${plant.id}`)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </Loading>\n  )\n}\n\nHomePage.propTypes = {\n  divSize: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  getPowerPlants: PropTypes.shape({\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      data: PropTypes.array.isRequired,\n      count: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(api.getPowerPlants, {\n    name: \"getPowerPlants\",\n    shouldFetch: (props, response) => !response,\n  })\n)(HomePage)\n","const COLORS = [\n  \"#1CE6FF\",\n  \"#FF34FF\",\n  \"#FF4A46\",\n  \"#008941\",\n  \"#006FA6\",\n  \"#A30059\",\n  \"#FFDBE5\",\n  \"#7A4900\",\n  \"#0000A6\",\n  \"#63FFAC\",\n  \"#B79762\",\n  \"#004D43\",\n  \"#8FB0FF\",\n  \"#997D87\",\n  \"#5A0007\",\n  \"#809693\",\n  \"#1B4400\",\n  \"#4FC601\",\n  \"#3B5DFF\",\n  \"#4A3B53\",\n  \"#FF2F80\",\n  \"#61615A\",\n  \"#BA0900\",\n  \"#6B7900\",\n  \"#00C2A0\",\n  \"#FFAA92\",\n  \"#FF90C9\",\n  \"#B903AA\",\n  \"#D16100\",\n  \"#7B4F4B\",\n  \"#A1C299\",\n  \"#300018\",\n  \"#0AA6D8\",\n  \"#013349\",\n  \"#00846F\",\n  \"#372101\",\n  \"#FFB500\",\n  \"#C2FFED\",\n  \"#A079BF\",\n  \"#CC0744\",\n  \"#C0B9B2\",\n  \"#C2FF99\",\n  \"#00489C\",\n  \"#6F0062\",\n  \"#0CBD66\",\n  \"#EEC3FF\",\n  \"#456D75\",\n  \"#B77B68\",\n  \"#7A87A1\",\n  \"#788D66\",\n  \"#885578\",\n  \"#FAD09F\",\n  \"#FF8A9A\",\n  \"#D157A0\",\n  \"#BEC459\",\n  \"#456648\",\n  \"#0086ED\",\n  \"#886F4C\",\n\n  \"#34362D\",\n  \"#B4A8BD\",\n  \"#00A6AA\",\n  \"#452C2C\",\n  \"#636375\",\n  \"#A3C8C9\",\n  \"#FF913F\",\n  \"#938A81\",\n  \"#575329\",\n  \"#00FECF\",\n  \"#B05B6F\",\n  \"#8CD0FF\",\n  \"#3B9700\",\n  \"#04F757\",\n  \"#C8A1A1\",\n  \"#1E6E00\",\n  \"#7900D7\",\n  \"#A77500\",\n  \"#6367A9\",\n  \"#A05837\",\n  \"#6B002C\",\n  \"#772600\",\n  \"#D790FF\",\n  \"#9B9700\",\n  \"#549E79\",\n  \"#FFF69F\",\n  \"#72418F\",\n  \"#BC23FF\",\n  \"#99ADC0\",\n  \"#3A2465\",\n  \"#922329\",\n  \"#5B4534\",\n  \"#404E55\",\n  \"#0089A3\",\n  \"#CB7E98\",\n  \"#A4E804\",\n  \"#324E72\",\n  \"#6A3A4C\",\n  \"#83AB58\",\n  \"#D1F7CE\",\n  \"#004B28\",\n  \"#C8D0F6\",\n  \"#A3A489\",\n  \"#806C66\",\n  \"#BF5650\",\n  \"#E83000\",\n  \"#66796D\",\n  \"#DA007C\",\n  \"#FF1A59\",\n  \"#8ADBB4\",\n  \"#5B4E51\",\n  \"#C895C5\",\n  \"#320033\",\n  \"#FF6832\",\n  \"#66E1D3\",\n  \"#CFCDAC\",\n  \"#D0AC94\",\n  \"#7ED379\",\n  \"#012C58\",\n]\n\nexport default COLORS\n","import React, { useState } from \"react\"\n\nexport default function withParams(initialParams = {}) {\n  return Component => {\n    function WithParams(props) {\n      const [params, setParams] = useState(initialParams)\n\n      return <Component {...props} params={params} setParams={setParams} />\n    }\n\n    return WithParams\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function ColorBox(props) {\n  const { size, margin, color } = props\n\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        margin: margin,\n        backgroundColor: color,\n      }}\n    />\n  )\n}\n\nColorBox.defaultProps = {\n  color: \"red\",\n  size: 10,\n  margin: 5,\n}\n\nColorBox.propTypes = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  margin: PropTypes.number.isRequired,\n}\n\nexport default ColorBox\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Checkbox, Dropdown, Button } from \"semantic-ui-react\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./DeviceFilter.module.css\"\n\nfunction Row(props) {\n  const { onClick, checked, color, text } = props\n\n  return (\n    <Dropdown.Item onClick={onClick}>\n      <div className={styles.cell}>\n        <Checkbox checked={!!checked} />\n        <ColorBox color={color} />\n        <div>{text}</div>\n      </div>\n    </Dropdown.Item>\n  )\n}\n\nexport function DeviceFilter(props) {\n  const { devices, checked, colors, onToggle } = props\n\n  const [open, setOpen] = useState(false)\n\n  function onClick(id) {\n    if (id == \"all\") {\n      onToggle(\"all\", devices.map(({ id }) => id))\n    } else {\n      onToggle(id)\n    }\n  }\n\n  const count = Object.values(checked).filter(v => v).length\n  const all = count == devices.length\n\n  return (\n    <Button.Group basic size=\"small\">\n      <Dropdown open={open}>\n        <Dropdown.Menu style={{ maxHeight: 200, overflow: \"auto\" }}>\n          <Row\n            onClick={() => onClick(\"all\")}\n            checked={all}\n            color=\"transparent\"\n            text={`All ${devices.length} devices`}\n          />\n          <Dropdown.Divider />\n          {devices.map((device, i) => (\n            <Row\n              key={i}\n              onClick={() => onClick(device.id)}\n              checked={checked[device.id]}\n              color={colors[device.id]}\n              text={`${device.model} - ${device.id}`}\n            />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Button\n        labelPosition=\"right\"\n        icon=\"caret down\"\n        content={`Showing ${count} devices`}\n        onClick={() => setOpen(!open)}\n      />\n    </Button.Group>\n  )\n}\n\nDeviceFilter.propTypes = {\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  checked: PropTypes.object.isRequired,\n  colors: PropTypes.object.isRequired,\n}\n\nexport default DeviceFilter\n","import { useState } from \"react\"\n\nexport default function useToggle(ids) {\n  const [checked, setState] = useState(\n    ids.reduce((checked, id) => {\n      checked[id] = true\n      return checked\n    }, {})\n  )\n\n  function _toggle(id) {\n    setState({\n      ...checked,\n      [id]: !checked[id],\n    })\n  }\n\n  function _toggleAll(ids = []) {\n    const all = Object.values(checked).filter(v => v).length == ids.length\n\n    if (all) {\n      setState({})\n    } else {\n      setState(\n        ids.reduce((checked, id) => {\n          checked[id] = true\n          return checked\n        }, {})\n      )\n    }\n  }\n\n  function toggle(id, ids) {\n    if (id == \"all\") {\n      _toggleAll(ids)\n    } else {\n      _toggle(id)\n    }\n  }\n\n  return [checked, toggle]\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport styles from \"./TimeUnitButtons.module.css\"\n\nexport const UNITS = [\"MONTH\", \"DAY\", \"HOUR\"]\n\nconst TEXT = {\n  MONTH: \"Month\",\n  DAY: \"Day\",\n  HOUR: \"Hour\",\n}\n\nexport function TimeUnitButtons(props) {\n  const { active } = props\n\n  function getColor(key) {\n    return key == active ? \"yellow\" : undefined\n  }\n\n  return (\n    <div className={styles.TimeUnitButtons}>\n      {UNITS.map(unit => (\n        <Button\n          key={unit}\n          color={getColor(unit)}\n          onClick={() => props.onClick(unit)}\n        >\n          {TEXT[unit]}\n        </Button>\n      ))}\n    </div>\n  )\n}\n\nTimeUnitButtons.propTypes = {\n  active: PropTypes.oneOf(UNITS).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default TimeUnitButtons\n","import React from \"react\"\n\nexport default function disableScroll(Component) {\n  function DisableScroll(props) {\n    function disableScroll() {\n      document.body.style.overflow = \"hidden\"\n    }\n\n    function enableScroll() {\n      document.body.style.overflow = \"unset\"\n    }\n\n    return (\n      <Component\n        {...props}\n        disableScroll={disableScroll}\n        enableScroll={enableScroll}\n      />\n    )\n  }\n\n  return DisableScroll\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./Labels.module.css\"\n\nexport function Labels(props) {\n  const { timestamp, labels } = props\n\n  return (\n    <div>\n      <div className={styles.timestamp}>{timestamp}</div>\n      <div className={styles.labels}>\n        {labels.map(label => (\n          <div key={label.id} className={styles.label}>\n            <ColorBox color={label.color} />\n            <div>{label.value}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nLabels.propTypes = {\n  timestamp: PropTypes.string.isRequired,\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default Labels\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  layout,\n  zoomable,\n  draggable,\n} from \"react-canvas-time-series\"\nimport { get } from \"../../../util\"\nimport { timeZone } from \"../../../util/date\"\nimport { roundInterval } from \"../../../util/math\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport Labels from \"../../../components/Labels\"\nimport styles from \"./BarGraph.module.css\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst MIN_BAR_WIDTH = 5\nconst BAR_PADDING = 5\n\nconst HEIGHT = 200\n\nconst Y_MIN = 0\n\nfunction getNumXTicks(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return 12\n    case \"DAY\":\n      return 6\n    case \"HOUR\":\n      return 6\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction renderXLabel(unit, x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  const now = new Date()\n\n  switch (unit) {\n    case \"MONTH\":\n      return timeZone(now.toISOString())\n        .startOf(\"month\")\n        .add(Math.round(x), \"month\")\n        .format(\"YYYY-MM\")\n    case \"DAY\":\n      return timeZone(now.toISOString())\n        .startOf(\"day\")\n        .add(Math.round(x), \"day\")\n        .format(\"YYYY-MM-DD\")\n    case \"HOUR\":\n      return timeZone(now.toISOString())\n        .startOf(\"hour\")\n        .add(Math.round(x), \"hour\")\n        .format(\"YYYY-MM-DD HH:mm\")\n    default:\n      return\n  }\n}\n\nfunction renderYLabel(y) {\n  if (!y) {\n    return \"0 kWh\"\n  }\n\n  return `${Math.round(y).toLocaleString()} kWh`\n}\n\nexport function BarGraph(props) {\n  const {\n    width,\n    data,\n    yMaxs,\n    xs,\n    loading,\n    devices,\n    checked,\n    colors,\n    xMin,\n    xMax,\n    unit,\n    onChangeXRange,\n  } = props\n\n  const [mouse, setMouse] = useState({\n    x: undefined,\n    y: undefined,\n  })\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    diffs: {},\n  })\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n  const yMax = Math.max(...checkedDevices.map(device => yMaxs[device.id]), 10)\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouse(mouse)\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(xs, x)\n\n      const timestamp = get(data, [get(devices, [0, \"id\"]), i, \"timestamp\"])\n\n      if (timestamp) {\n        setNearest({\n          timestamp,\n          diffs: checkedDevices.reduce((diffs, device) => {\n            diffs[device.id] = get(data, [device.id, i, \"diff\"], 0)\n            return diffs\n          }, {}),\n        })\n      }\n    } else {\n      props.enableScroll()\n\n      setMouse({\n        x: undefined,\n        y: undefined,\n      })\n\n      setNearest({\n        timestamp: undefined,\n        diffs: {},\n      })\n    }\n\n    onChangeXRange(xRange)\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouse({\n      x: undefined,\n      y: undefined,\n    })\n\n    setNearest({\n      timestamp: undefined,\n      diffs: {},\n    })\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    onChangeXRange(xRange)\n  }\n\n  const barWidth = Math.max(\n    MIN_BAR_WIDTH,\n    Math.floor(graph.width / (xMax - xMin)) - 2 * BAR_PADDING\n  )\n\n  // TODO xTickInterval based on graph.width\n  const xTickInterval = Math.max(\n    1,\n    Math.floor((xMax - xMin) / getNumXTicks(unit))\n  )\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  const graphs = checkedDevices.map(device => ({\n    type: \"bars\",\n    barWidth,\n    getBarColor: () => colors[device.id],\n    data: data[device.id] || [],\n  }))\n\n  return (\n    <div className={styles.component}>\n      <Graph\n        width={width}\n        height={HEIGHT}\n        backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n        mouse={mouse}\n        xMin={xMin}\n        xMax={xMax}\n        yMin={Y_MIN}\n        yMax={yMax}\n        xAxisAt=\"bottom\"\n        xAxisHeight={20}\n        xAxisLineColor=\"lightgrey\"\n        xTickInterval={xTickInterval}\n        xTickLength={5}\n        renderXTick={x => renderXLabel(unit, x)}\n        showXLine={false}\n        yAxisAt=\"right\"\n        yAxisWidth={70}\n        yAxisLineColor=\"lightgrey\"\n        yTickInterval={yTickInterval}\n        yTickLength={5}\n        renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n        graphs={graphs}\n        xLabels={[\n          {\n            x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x),\n            width: 100,\n            height: 20,\n            render: x => renderXLabel(unit, x),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        yLabels={[\n          {\n            y: yMax,\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"black\",\n            backgroundColor: \"orange\",\n            lineColor: \"orange\",\n          },\n          {\n            y: canvas.math.getY(graph.height, graph.top, yMax, Y_MIN, mouse.y),\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        onMouseMove={onMouseMove}\n        onMouseOut={onMouseOut}\n        onWheel={onWheel}\n      />\n      <div className={styles.labels}>\n        <Labels\n          timestamp={nearest.timestamp}\n          labels={checkedDevices.map(device => ({\n            id: device.id,\n            color: colors[device.id],\n            value: `${get(nearest.diffs, [device.id], 0)} kWh`,\n          }))}\n        />\n      </div>\n    </div>\n  )\n}\n\nBarGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  yMaxs: PropTypes.object.isRequired,\n  xs: PropTypes.arrayOf(PropTypes.number).isRequired,\n  loading: PropTypes.bool.isRequired,\n  unit: PropTypes.oneOf([\"MONTH\", \"DAY\", \"HOUR\"]),\n  onChangeXRange: PropTypes.func.isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nexport default disableScroll(BarGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { get, compose } from \"../../../util\"\nimport { timeZone, now, getMonth } from \"../../../util/date\"\nimport * as api from \"../../../api\"\nimport withFetch from \"../../../components/withFetch\"\nimport withParams from \"../../../components/withParams\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport useToggle from \"../../../components/useToggle\"\nimport styles from \"./index.module.css\"\nimport TimeUnitButtons, { UNITS } from \"./TimeUnitButtons\"\nimport BarGraph from \"./BarGraph\"\n\nconst NOW = now()\nconst CURRENT_MONTH = getMonth(NOW)\n\nfunction getDefaultXRange(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return {\n        xMin: -(CURRENT_MONTH + 0.5),\n        xMax: 11 - (CURRENT_MONTH + 0.5),\n      }\n    case \"DAY\":\n      return {\n        xMin: -30.5,\n        xMax: 0.5,\n      }\n    case \"HOUR\":\n      return {\n        xMin: -72.5,\n        xMax: 0.5,\n      }\n    default:\n      console.error(`Unknown unit ${unit}`)\n  }\n}\n\nexport function EnergyGraph(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    params,\n    setParams,\n    getEnergy,\n  } = props\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  function onClickTimeUnitButton(unit) {\n    setParams({\n      ...params,\n      unit,\n      ...getDefaultXRange(unit),\n    })\n  }\n\n  function onChangeXRange({ xMin, xMax }) {\n    setParams({\n      ...params,\n      xMin,\n      xMax,\n    })\n  }\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <div className={styles.filterCol}>\n          <TimeUnitButtons\n            active={params.unit}\n            onClick={onClickTimeUnitButton}\n          />\n        </div>\n        <div className={styles.filterCol}>\n          <DeviceFilter\n            devices={devices}\n            checked={checked}\n            colors={colors}\n            onToggle={toggle}\n          />\n        </div>\n      </div>\n      <BarGraph\n        plantId={plantId}\n        devices={devices}\n        width={graphWidth}\n        checked={checked}\n        colors={colors}\n        data={get(getEnergy.response, [\"data\"], {})}\n        yMaxs={get(getEnergy.response, [\"yMaxs\"], {})}\n        xs={get(getEnergy.response, [\"xs\"], [])}\n        loading={getEnergy.fetching}\n        {...params}\n        onChangeXRange={onChangeXRange}\n      />\n    </>\n  )\n}\n\nEnergyGraph.propTypes = {\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  graphWidth: PropTypes.number.isRequired,\n  colors: PropTypes.object.isRequired,\n  params: PropTypes.shape({\n    unit: PropTypes.oneOf(UNITS).isRequired,\n    xMin: PropTypes.number.isRequired,\n    xMax: PropTypes.number.isRequired,\n  }).isRequired,\n  setParams: PropTypes.func.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n  }).isRequired,\n}\n\nfunction getGte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) - 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getLte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) + 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getUnixTimeFromX(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .endOf(_unit)\n        .add(x, _unit)\n        .unix()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getXFromUnixTime({ xMin, xMax, tMin, tMax, t }) {\n  const d = (xMax - xMin) / (tMax - tMin)\n  const x0 = xMin - d * tMin\n\n  return Math.round(d * t + x0)\n}\n\nasync function getEnergy(params, props) {\n  const { plantId, deviceIds, unit, xMin, xMax } = params\n\n  const now = new Date()\n\n  const gte = getGte(unit, now, xMin)\n  const lte = getLte(unit, now, xMax)\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getEnergy({\n        plantId,\n        deviceId,\n        unit,\n        timestamp: {\n          gte,\n          lte,\n        },\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n  const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n\n  const data = res.reduce((map, { deviceId, data }) => {\n    map[deviceId] = data.map(d => ({\n      ...d,\n      x: getXFromUnixTime({\n        xMin: parseInt(xMin),\n        xMax: parseInt(xMax),\n        tMin,\n        tMax,\n        t: d.unixTime,\n      }),\n      y: d.diff,\n    }))\n\n    return map\n  }, {})\n\n  const yMaxs = res.reduce((yMaxs, { deviceId, data }) => {\n    yMaxs[deviceId] = Math.max(...data.map(d => d.diff), 0)\n\n    return yMaxs\n  }, {})\n\n  return {\n    data,\n    yMaxs,\n    xs: get(data, [deviceIds[0]], []).map(({ x }) => x),\n  }\n}\n\nexport default compose(\n  withParams({\n    unit: UNITS[0],\n    ...getDefaultXRange(UNITS[0]),\n  }),\n  withFetch(getEnergy, {\n    name: \"getEnergy\",\n    getFetchId: (name, params) => `${name}-${params.plantId}-${params.unit}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      unit: props.params.unit,\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {\n      // props.cacheEnergy({\n      //   id: getCacheId(props),\n      //   data: response,\n      // })\n    },\n    shouldFetch: () => true,\n    // shouldFetch: (props, response, params) => {\n    //   const {\n    //     energy: { data },\n    //   } = props\n    //\n    //   const { unit, xMin, xMax } = params\n    //\n    //   const now = new Date()\n    //   const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n    //   const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n    //\n    //   return (\n    //     data.length == 0 ||\n    //     tMin < data[0].unixTime ||\n    //     tMax > data[data.length - 1].unixTime\n    //   )\n    // },\n  })\n)(EnergyGraph)\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  zoomable,\n  draggable,\n  layout,\n} from \"react-canvas-time-series\"\nimport { roundInterval } from \"../../../util/math\"\nimport { timeZone } from \"../../../util/date\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst HEIGHT = 150\n\nfunction renderXLabel(x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  return timeZone(x * 1000).format(\"MM DD HH:mm\")\n}\n\nfunction renderYLabel(y, unit) {\n  if (!y) {\n    return `${y} ${unit}`\n  }\n\n  return `${Math.round(y).toLocaleString()} ${unit}`\n}\n\nexport function LineGraph(props) {\n  const { loading, width, lines, yMin, yMax, xMin, xMax, mouseX, unit } = props\n\n  const [mouseY, setMouseY] = useState()\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      setMouseY(mouse.y)\n    } else {\n      setMouseY()\n    }\n\n    props.onMouseMove(mouse, graph, xRange)\n  }\n\n  function onMouseOut() {\n    setMouseY()\n    props.onMouseOut()\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    props.onWheel(xRange)\n  }\n\n  const xTickInterval = 24 * 3600\n  const yTickInterval = roundInterval(yMax, yMin, 4)\n\n  const graphs = lines.map(line => ({\n    type: \"line\",\n    data: line.data,\n    lineColor: line.color,\n    step: 1,\n  }))\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const mouse = {\n    x: mouseX,\n    y: mouseY,\n  }\n\n  return (\n    <Graph\n      width={width}\n      height={HEIGHT}\n      backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n      mouse={mouse}\n      xMin={xMin}\n      xMax={xMax}\n      yMin={yMin}\n      yMax={yMax}\n      xAxisAt=\"bottom\"\n      xAxisHeight={20}\n      xAxisLineColor=\"lightgrey\"\n      xTickInterval={xTickInterval}\n      xTickLength={5}\n      renderXTick={renderXLabel}\n      showXLine={true}\n      yAxisAt=\"right\"\n      yAxisWidth={70}\n      yAxisLineColor=\"lightgrey\"\n      yTickInterval={yTickInterval}\n      yTickLength={5}\n      renderYTick={y => renderYLabel(y, unit)}\n      graphs={graphs}\n      xLabels={[\n        {\n          x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouseX),\n          width: 100,\n          height: 20,\n          render: renderXLabel,\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      yLabels={[\n        {\n          y: canvas.math.getY(graph.height, graph.top, yMax, yMin, mouseY),\n          width: 70,\n          height: 20,\n          render: y => renderYLabel(y, unit),\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      onMouseMove={onMouseMove}\n      onMouseOut={onMouseOut}\n      onWheel={onWheel}\n    />\n  )\n}\n\nLineGraph.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired,\n  xMin: PropTypes.number.isRequired,\n  xMax: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n  lines: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      data: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n  unit: PropTypes.oneOf([\"watts\", \"amp\", \"v\", \"kOhm\"]).isRequired,\n}\n\nexport default LineGraph\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport DatePicker from \"react-date-picker\"\nimport { canvas } from \"react-canvas-time-series\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../../util\"\nimport * as api from \"../../../api\"\nimport withParams from \"../../../components/withParams\"\nimport withFetch from \"../../../components/withFetch\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport useToggle from \"../../../components/useToggle\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport Labels from \"../../../components/Labels\"\nimport LineGraph from \"./LineGraph\"\nimport styles from \"./index.module.css\"\n\nconst X_MIN = Math.round(new Date().getTime() / 1000 - 5 * 24 * 3600)\nconst X_MAX = Math.round(new Date().getTime() / 1000)\n\n// const NOW = Math.round(new Date().getTime() / 1000)\n// const X_MIN = NOW - 9 * 24 * 3600\n// const X_MAX = NOW + 24 * 3600\n\nexport function InverterGraphs(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    getLogs,\n    params,\n    setParams,\n  } = props\n\n  const { fetching } = getLogs\n\n  const data = get(getLogs, [\"response\"], {})\n  const logs = get(data, [\"logs\"], {})\n  const unixTimes = get(data, [\"unixTimes\"], {})\n\n  const maxPower = get(data, [\"maxPower\"], 0)\n  const maxCurrent = get(data, [\"maxCurrent\"], 0)\n  const maxVoltage = get(data, [\"maxVoltage\"], 0)\n  const maxInsulationResistance = get(data, [\"maxInsulationResistance\"], 0)\n  const maxResidualCurrent = get(data, [\"maxResidualCurrent\"], 0)\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  const [mouseX, setMouseX] = useState()\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    power: {},\n    current: {},\n    voltage: {},\n    insulationResistance: {},\n    residualCurrent: {},\n  })\n\n  const [filterDates, setFilterDates] = useState({\n    gte: new Date(X_MIN * 1000),\n    lte: new Date(X_MAX * 1000),\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n\n  function setFilterDate(name, date) {\n    setFilterDates({\n      ...filterDates,\n      [name]: date,\n    })\n  }\n\n  function onClickFilter() {\n    setParams({\n      ...params,\n      xMin: Math.round(filterDates.gte.getTime() / 1000),\n      xMax: Math.round(filterDates.lte.getTime() / 1000),\n    })\n  }\n\n  function onMouseMove(mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouseX(mouse.x)\n\n      const { xMin, xMax } = xRange\n\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(unixTimes, x)\n\n      const unixTime = unixTimes[i]\n\n      if (unixTime) {\n        const nearest = {\n          timestamp: new Date(unixTime * 1000).toISOString(),\n          power: {},\n          current: {},\n          voltage: {},\n          insulationResistance: {},\n          residualCurrent: {},\n        }\n\n        for (const device of checkedDevices) {\n          nearest.power[device.id] = get(logs, [device.id, \"power\", i, \"y\"], 0)\n          nearest.current[device.id] = get(\n            logs,\n            [device.id, \"current\", i, \"y\"],\n            0\n          )\n          nearest.voltage[device.id] = get(\n            logs,\n            [device.id, \"voltage\", i, \"y\"],\n            0\n          )\n          nearest.insulationResistance[device.id] = get(\n            logs,\n            [device.id, \"insulationResistance\", i, \"y\"],\n            0\n          )\n          nearest.residualCurrent[device.id] = get(\n            logs,\n            [device.id, \"residualCurrent\", i, \"y\"],\n            0\n          )\n        }\n\n        setNearest(nearest)\n      }\n    } else {\n      props.enableScroll()\n\n      setMouseX()\n\n      setNearest({\n        timestamp: undefined,\n        power: {},\n        current: {},\n        voltage: {},\n        insulationResistance: {},\n        residualCurrent: {},\n      })\n    }\n\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouseX()\n\n    setNearest({\n      timestamp: undefined,\n      power: {},\n      current: {},\n      voltage: {},\n      insulationResistance: {},\n      residualCurrent: {},\n    })\n  }\n\n  function onWheel(xRange) {\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  const { xMin, xMax } = params\n\n  return (\n    <div>\n      <div className={styles.filters}>\n        <DeviceFilter\n          devices={devices}\n          checked={checked}\n          colors={colors}\n          onToggle={toggle}\n        />\n        <div className={styles.dateFilters}>\n          <DatePicker\n            format=\"yyyy-MM-dd\"\n            value={filterDates.gte}\n            disabled={fetching}\n            onChange={date => setFilterDate(\"gte\", date)}\n          />\n          <div> - </div>\n          <DatePicker\n            format=\"yyyy-MM-dd\"\n            value={filterDates.lte}\n            disabled={fetching}\n            onChange={date => setFilterDate(\"lte\", date)}\n          />\n        </div>\n        <Button loading={fetching} onClick={onClickFilter}>\n          Filter\n        </Button>\n      </div>\n      <h5 className={styles.graphHeader}>Power (watts)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"power\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"watts\"\n          yMax={maxPower}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.power, [device.id], 0)} watts`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Current (amp)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          plantId={plantId}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"current\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"amp\"\n          yMax={maxCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.current, [device.id], 0)} amp`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Voltage (v)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"voltage\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"v\"\n          yMax={maxVoltage}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.voltage, [device.id], 0)} v`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Insulation Resistance (kOhm)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"insulationResistance\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"kOhm\"\n          yMax={maxInsulationResistance}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(\n                nearest.insulationResistance,\n                [device.id],\n                0\n              )} kOhm`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Residual Current (mA)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"residualCurrent\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"mA\"\n          yMax={maxResidualCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.residualCurrent, [device.id], 0)} mA`,\n            }))}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nInverterGraphs.propTypes = {\n  graphWidth: PropTypes.number.isRequired,\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nasync function getLogs(params, props) {\n  const { plantId, deviceIds, xMin, xMax } = params\n\n  const gte = new Date(xMin * 1000).toISOString()\n  const lte = new Date(xMax * 1000).toISOString()\n  const step = 5\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getLogs({\n        plantId,\n        deviceId,\n        gte,\n        lte,\n        step,\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const unixTimes = get(res, [0, \"data\"], []).map(({ unixTime }) => unixTime)\n\n  let maxPower = 0\n  let maxCurrent = 0\n  let maxVoltage = 0\n  let maxInsulationResistance = 0\n  let maxResidualCurrent = 0\n\n  const logs = {}\n\n  for (const { deviceId, data } of res) {\n    logs[deviceId] = {\n      power: [],\n      current: [],\n      voltage: [],\n      insulationResistance: [],\n      residualCurrent: [],\n    }\n\n    for (const d of data) {\n      logs[deviceId].power.push({\n        x: d.unixTime,\n        y: d.power,\n      })\n\n      logs[deviceId].current.push({\n        x: d.unixTime,\n        y: d.current,\n      })\n\n      logs[deviceId].voltage.push({\n        x: d.unixTime,\n        y: d.voltage,\n      })\n\n      logs[deviceId].insulationResistance.push({\n        x: d.unixTime,\n        y: d.insulationResistance,\n      })\n\n      logs[deviceId].residualCurrent.push({\n        x: d.unixTime,\n        y: d.residualCurrent,\n      })\n\n      maxPower = Math.max(d.power, maxPower)\n      maxCurrent = Math.max(d.current, maxCurrent)\n      maxVoltage = Math.max(d.voltage, maxVoltage)\n      maxInsulationResistance = Math.max(\n        d.insulationResistance,\n        maxInsulationResistance\n      )\n      maxResidualCurrent = Math.max(d.residualCurrent, maxResidualCurrent)\n    }\n  }\n\n  return {\n    maxPower,\n    maxCurrent,\n    maxVoltage,\n    maxInsulationResistance,\n    maxResidualCurrent,\n    logs,\n    unixTimes,\n  }\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  disableScroll,\n  withParams({\n    xMin: X_MIN,\n    xMax: X_MAX,\n  }),\n  withFetch(getLogs, {\n    name: \"getLogs\",\n    getFetchId: (name, params) => `${name}-${params.plantId}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {},\n    shouldFetch: (props, repsonse, params) => true,\n  })\n)(InverterGraphs)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../util\"\nimport * as api from \"../../api\"\nimport COLORS from \"../../lib/colors\"\nimport { bound } from \"../../util/math\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport EnergyGraph from \"./EnergyGraph\"\nimport InverterGraphs from \"./InverterGraphs\"\n\nconst GRAPH_PADDING = 10\nconst MIN_GRAPH_WIDTH = 300\nconst MAX_GRAPH_WIDTH = 1200\n\nexport function PowerPlantDetailPage(props) {\n  const { divSize, getPowerPlant } = props\n\n  const devices = get(getPowerPlant, [\"response\", \"devices\"], [])\n\n  const colors = devices.reduce((colors, device, i) => {\n    colors[device.id] = COLORS[i]\n    return colors\n  }, {})\n\n  const graphWidth = bound(\n    divSize.width - 2 * GRAPH_PADDING,\n    MIN_GRAPH_WIDTH,\n    MAX_GRAPH_WIDTH\n  )\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <div className={styles.headerText}>\n          Plant {props.match.params.plantId}\n        </div>\n        <div className={styles.subHeader}>{devices.length} devices</div>\n      </div>\n      <Loading\n        loading={getPowerPlant.fetching || !getPowerPlant.fetchedAt}\n        error={getPowerPlant.error}\n        onClickRetry={getPowerPlant.fetch}\n      >\n        {devices.length > 0 && (\n          <>\n            <EnergyGraph\n              plantId={props.match.params.plantId}\n              devices={devices}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n            <InverterGraphs\n              plantId={props.match.params.plantId}\n              devices={devices.filter(\n                device => device.model != \"Cluster Controller\"\n              )}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n          </>\n        )}\n      </Loading>\n    </div>\n  )\n}\n\nPowerPlantDetailPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      plantId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  divSize: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  getPowerPlant: PropTypes.shape({\n    response: PropTypes.shape({\n      devices: PropTypes.array.isRequired,\n    }),\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(params => api.getPowerPlant(params), {\n    name: \"getPowerPlant\",\n    getFetchId: (name, params) => `${name}-${params.id}`,\n    getParams: props => ({ id: props.match.params.plantId }),\n    shouldFetch: (props, response) => !response,\n  })\n)(PowerPlantDetailPage)\n","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport styles from \"./App.module.css\"\nimport withDivSize from \"./components/withDivSize\"\nimport HomePage from \"./pages/HomePage\"\nimport PowerPlantDetailPage from \"./pages/PowerPlantDetailPage\"\n\nexport function App() {\n  // \"/solar-mesh-energy-logs-web-ui\"\n  return (\n    <div className={styles.component}>\n      <h5>Time zone: {process.env.REACT_APP_TIME_ZONE}</h5>\n\n      <Switch>\n        <Route path=\"/plants/:plantId\" component={PowerPlantDetailPage} />\n        <Route component={HomePage} />\n      </Switch>\n\n      <div className={styles.footer} />\n    </div>\n  )\n}\n\nexport default withDivSize(App)\n","import React, { useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions } from \"../reducer\"\n\nexport default function withDivSize(Component) {\n  function WithDivSize(props) {\n    const ref = useRef()\n\n    useEffect(() => {\n      function setDivSize() {\n        props.updateDivSize({\n          // size of div\n          height: ref.current.clientHeight,\n          width: ref.current.clientWidth,\n        })\n      }\n\n      setDivSize()\n\n      window.addEventListener(\"resize\", setDivSize)\n\n      return () => {\n        window.removeEventListener(\"resize\", setDivSize)\n      }\n    }, [])\n\n    return (\n      <div ref={ref}>\n        <Component {...props} />\n      </div>\n    )\n  }\n\n  WithDivSize.propTypes = {\n    updateDivSize: PropTypes.func.isRequired,\n  }\n\n  return connect(\n    undefined,\n    actions.divSize\n  )(WithDivSize)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n// redux\nimport { applyMiddleware, createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport { reducer } from \"./reducer\"\n\nlet middlewares = [thunk]\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(logger)\n}\n\nconst store = createStore(reducer, applyMiddleware(...middlewares))\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"FiscalEnergyGraph_stats__3j2T_\",\"month\":\"FiscalEnergyGraph_month__1qsdS\",\"number\":\"FiscalEnergyGraph_number__3ViBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"HomePage_count__3Q6q8\",\"col\":\"HomePage_col__33bFf\",\"row\":\"HomePage_row__i7JCH\",\"plantHeader\":\"HomePage_plantHeader__26-Kz\"};"],"sourceRoot":""}