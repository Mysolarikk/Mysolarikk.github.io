{"version":3,"sources":["App.module.css","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.module.css","components/LinkButton.module.css","components/DeviceFilter.module.css","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.module.css","pages/PowerPlantDetailPage/InverterGraphs/index.module.css","reducer/divSize.js","reducer/fetch.js","reducer/energy.js","reducer/energyById.js","reducer/index.js","util/index.js","api.js","components/withFetch.js","components/Loading.js","components/LinkButton.js","pages/HomePage/PlantHeader.js","util/date.js","util/math.js","pages/HomePage/GraphPlaceholder.js","pages/HomePage/FiscalEnergyGraph.js","pages/HomePage/index.js","lib/colors.js","components/withParams.js","components/ColorBox.js","components/DeviceFilter.js","components/useToggle.js","pages/PowerPlantDetailPage/EnergyGraph/TimeUnitButtons.js","components/disableScroll.js","components/Labels.js","pages/PowerPlantDetailPage/EnergyGraph/BarGraph.js","pages/PowerPlantDetailPage/EnergyGraph/index.js","pages/PowerPlantDetailPage/InverterGraphs/LineGraph.js","pages/PowerPlantDetailPage/InverterGraphs/index.js","pages/PowerPlantDetailPage/index.js","App.js","components/withDivSize.js","serviceWorker.js","index.js","pages/HomePage/FiscalEnergyGraph.module.css","pages/HomePage/index.module.css","pages/HomePage/PlantHeader.module.css","pages/PowerPlantDetailPage/index.module.css","pages/PowerPlantDetailPage/EnergyGraph/index.module.css","components/Labels.module.css"],"names":["module","exports","component","footer","labels","LinkButton","table","cell","TimeUnitButtons","graphHeader","row","UPDATE","initialState","width","height","actions","updateDivSize","_ref","type","START","SUCCESS","FAIL","fetchStart","fetchId","fetchSuccess","_ref2","response","fetchFail","_ref3","error","INITIAL_FETCH_STATE","fetching","undefined","fetchedAt","respondedAt","getFetchState","state","selectors","CACHE","cacheEnergy","data","INITIAL_STATE","sortByTimestamp","a","b","unixTime","reducer","arguments","length","action","map","d","i","concat","Object","toConsumableArray","sort","id","INITIAL_ENERGY_STATE","energy","get","combineReducers","divSize","objectSpread","fetch","defineProperty","now","Date","toISOString","energyById","compose","_len","funcs","Array","_key","val","slice","reverse","reduce","v","f","keys","defaultVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","key","value","err","return","sendQuery","_callee","url","query","variables","res","text","_res","regenerator_default","wrap","_context","prev","method","body","JSON","stringify","headers","Content-Type","sent","parse","errors","console","Error","message","abrupt","t0","stop","POWER_PLANTS_URL","_callee2","_context2","powerPlants","_callee3","params","_context3","powerPlant","ENERGY_URL","getEnergy","_x5","_getEnergy","apply","this","_callee4","plantId","deviceId","unit","_params$timestamp","lte","gte","diff","_context4","timestamp","timeZoneOffset","Math","floor","push","getTime","getLogs","_x6","_getLogs","_callee5","_params$step","logs","_context5","step","log","parseFloat","power","current","voltage","insulationResistance","residualCurrent","withFetch","request","_ref$name","name","_ref$getFetchId","getFetchId","_ref$getParams","getParams","props","_ref$shouldFetch","shouldFetch","_ref$saveCache","saveCache","_ref$debounce","debounce","Component","connect","rest","objectWithoutProperties","paramId","delay","_useState","useState","_useState2","slicedToArray","debouncedVal","setDebouncedVal","useEffect","timer","setTimeout","clearTimeout","useDebounce","_fetch","asyncToGenerator","mark","_response","react_default","createElement","assign","Loading","loading","renderLoading","Message","negative","Button","onClick","onClickRetry","children","defaultProps","className","styles","PlantHeader","plant","components_LinkButton","devices","deviceLabel","Label","circular","PropTypes","shape","string","isRequired","array","func","timeZone","str","moment","tz","process","roundInterval","max","min","numSteps","x","numDigits","log10","abs","lastDigit","n","pow","getDigit","ceil","GraphPlaceholder","backgroundColor","style","number","MIN_Y_MAX","X_MIN","X_MAX","Y_MIN","device","yMax","find","model","api","startOf","subtract","endOf","y","energyLastMonth","energyCurrentMonth","yTickInterval","components_Loading","HomePage_GraphPlaceholder","stats","month","toLocaleString","index_es","animate","xMin","xMax","yMin","xAxisAt","xAxisHeight","xAxisLineColor","xTickInterval","xTickLength","showXLine","yAxisAt","yAxisWidth","yAxisLineColor","renderYTick","round","yLabels","render","color","drawLine","lineColor","graphs","barWidth","getBarColor","PADDING","MIN_GRAPH_WIDTH","GRAPH_HEIGHT","Graph","plantHeader","HomePage_PlantHeader","padding","paddingTop","HomePage_FiscalEnergyGraph","_getPowerPlants","getPowerPlants","numGraphsPerRow","graphWidth","count","col","arr","size","chunks","chunk","plants","history","COLORS","withParams","initialParams","setParams","ColorBox","margin","Row","checked","Dropdown","Item","Checkbox","components_ColorBox","DeviceFilter","colors","onToggle","open","setOpen","values","filter","all","Group","basic","Menu","maxHeight","overflow","Divider","labelPosition","icon","content","useToggle","ids","setState","_toggleAll","_toggle","UNITS","TEXT","MONTH","DAY","HOUR","active","disableScroll","document","enableScroll","Labels","label","zoomable","draggable","ReactCanvasTimeSeries","getLayout","layout","MIN_BAR_WIDTH","BAR_PADDING","HEIGHT","renderXLabel","isNaN","add","format","renderYLabel","yMaxs","xs","onChangeXRange","mouse","setMouse","_useState3","diffs","_useState4","nearest","setNearest","graph","checkedDevices","getNumXTicks","BarGraph_Graph","renderXTick","yTickLength","xLabels","canvas","math","getX","left","getY","top","onMouseMove","e","xRange","isInside","findNearestIndex","onMouseOut","onWheel","components_Labels","getGte","_unit","toLowerCase","getLte","getUnixTimeFromX","unix","getXFromUnixTime","tMin","tMax","t","x0","deviceIds","Promise","_ref5","_x3","parseInt","_ref6","_ref7","_ref8","_ref4","_useToggle","_useToggle2","toggle","Fragment","filterCol","EnergyGraph_TimeUnitButtons","getDefaultXRange","components_DeviceFilter","EnergyGraph_BarGraph","LineGraph","lines","mouseX","mouseY","setMouseY","line","LineGraph_Graph","unixTimes","maxPower","maxCurrent","maxVoltage","maxInsulationResistance","maxResidualCurrent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","finish","t1","repsonse","setMouseX","InverterGraphs_LineGraph","GRAPH_PADDING","MAX_GRAPH_WIDTH","_x4","_getPowerPlant","match","getPowerPlant","Infinity","bound","header","headerText","subHeader","PowerPlantDetailPage_EnergyGraph","PowerPlantDetailPage_InverterGraphs","withDivSize","react_router","path","PowerPlantDetailPage","HomePage","ref","useRef","setDivSize","clientHeight","clientWidth","window","addEventListener","removeEventListener","Boolean","location","hostname","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","react_router_dom","basename","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41579668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__1dd61\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"BarGraph_component__2Avo8\",\"labels\":\"BarGraph_labels__3I-cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"LinkButton_LinkButton__38eEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DeviceFilter_table__lKnNt\",\"cell\":\"DeviceFilter_cell__3_4bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeUnitButtons\":\"TimeUnitButtons_TimeUnitButtons__2HFO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphHeader\":\"InverterGraphs_graphHeader__20S_9\",\"row\":\"InverterGraphs_row__Gj9MO\",\"labels\":\"InverterGraphs_labels__1li5R\"};","const UPDATE = \"DIV_SIZE/UPDATE\"\n\nconst initialState = {\n  width: 0,\n  height: 0,\n}\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        width: action.width,\n        height: action.height,\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  updateDivSize: ({ width, height }) => ({ type: UPDATE, width, height }),\n}\n","const START = \"FETCH/START\"\nconst SUCCESS = \"FETCH/SUCCESS\"\nconst FAIL = \"FETCH/FAIL\"\n\nexport const actions = {\n  fetchStart: ({ fetchId }) => ({ type: START, fetchId }),\n  fetchSuccess: ({ fetchId, response }) => ({\n    type: SUCCESS,\n    fetchId,\n    response,\n  }),\n  fetchFail: ({ fetchId, error }) => ({ type: FAIL, fetchId, error }),\n}\n\nconst INITIAL_FETCH_STATE = {\n  fetching: false,\n  error: \"\",\n  response: undefined,\n  fetchedAt: \"\",\n  respondedAt: \"\",\n}\n\nfunction getFetchState(state, fetchId) {\n  return state[fetchId] || INITIAL_FETCH_STATE\n}\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case START: {\n      const { fetchId } = action\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: true,\n          error: \"\",\n        },\n      }\n    }\n    case SUCCESS: {\n      const { fetchId, response } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          response,\n          fetchedAt: now,\n          respondedAt: now,\n        },\n      }\n    }\n    case FAIL: {\n      const { fetchId, error } = action\n\n      const now = new Date().toISOString()\n\n      return {\n        ...state,\n        [fetchId]: {\n          ...getFetchState(state, fetchId),\n          fetching: false,\n          error,\n          fetchedAt: now,\n        },\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  getFetchState: (state, fetchId) => state[fetchId] || INITIAL_FETCH_STATE,\n}\n","const CACHE = \"ENERGY/CACHE\"\n\nexport const actions = {\n  cacheEnergy: data => ({ type: CACHE, data }),\n}\n\nconst INITIAL_STATE = []\n\nfunction sortByTimestamp(a, b) {\n  return a.unixTime - b.unixTime\n}\n\nexport function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CACHE: {\n      const { data } = action\n\n      return data.map((d, i) =>\n        [...(state[i] || []), ...d].sort(sortByTimestamp)\n      )\n    }\n    default:\n      return state\n  }\n}\n","import * as energy from \"./energy\"\n\nconst CACHE = \"ENERGY_BY_ID/CACHE\"\n\nexport const actions = {\n  cacheEnergy: ({ id, data }) => ({ type: CACHE, id, data }),\n}\n\nconst INITIAL_ENERGY_STATE = energy.reducer(undefined, {})\n\nexport function reducer(state = {}, action) {\n  switch (action.type) {\n    case CACHE: {\n      const { id, data } = action\n      return {\n        ...state,\n        [id]: energy.reducer(state[id], energy.actions.cacheEnergy(data)),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const selectors = {\n  get: (state, id) => state[id] || INITIAL_ENERGY_STATE,\n}\n","import { combineReducers } from \"redux\"\nimport * as divSize from \"./divSize\"\nimport * as fetch from \"./fetch\"\nimport * as energyById from \"./energyById\"\n\nexport const reducer = combineReducers({\n  divSize: divSize.reducer,\n  fetch: fetch.reducer,\n  energyById: energyById.reducer,\n})\n\nexport const actions = {\n  divSize: divSize.actions,\n  fetch: fetch.actions,\n  energyById: energyById.actions,\n}\n\nexport const selectors = {\n  fetch: fetch.selectors,\n  energyById: energyById.selectors,\n}\n","export function compose(...funcs) {\n  return val =>\n    funcs\n      .slice()\n      .reverse()\n      .reduce((v, f) => {\n        return f(v)\n      }, val)\n}\n\nexport function chunk(arr, size) {\n  let chunks = []\n\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size))\n  }\n\n  return chunks\n}\n\nexport function get(val, keys, defaultVal) {\n  for (let key of keys) {\n    if (val == undefined) {\n      break\n    }\n    val = val[key]\n  }\n\n  if (val == undefined) {\n    return defaultVal\n  }\n\n  return val\n}\n","async function sendQuery(url, query, variables) {\n  const res = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  const text = await res.text()\n\n  try {\n    const res = JSON.parse(text)\n\n    if (res.errors) {\n      console.error(\"GraphQL error\", res.errors)\n      throw new Error(res.errors[0].message)\n    }\n\n    return res\n  } catch (error) {\n    throw error\n  }\n}\n\nconst POWER_PLANTS_URL = \"http://192.168.196.203:6200\"\n\nexport async function getPowerPlants() {\n  const query = `\n    query {\n      powerPlants {\n        count\n        data {\n          id\n          devices {\n            id\n            model\n          }\n        }\n      }\n    }\n  `\n\n  const res = await sendQuery(POWER_PLANTS_URL, query)\n  return res.data.powerPlants\n}\n\nexport async function getPowerPlant(params) {\n  const { id } = params\n\n  const query = `\n    query PowerPlant($id: String!) {\n      powerPlant(id: $id) {\n        id\n        devices {\n          id\n          model\n        }\n      }\n    }\n  `\n\n  const variables = { id }\n\n  const res = await sendQuery(POWER_PLANTS_URL, query, variables)\n  return res.data.powerPlant\n}\n\nconst ENERGY_URL = \"http://192.168.196.203:6300\"\n\nexport async function getEnergy(params) {\n  const query = `\n    query Energy($plantId: String!, $deviceId: String!, $unit: Unit! $timestamp: TimeZoneRangeInput!) {\n      energy(plantId: $plantId, deviceId: $deviceId, unit: $unit, timestamp: $timestamp) {\n        timestamp\n        energy\n      }\n    }\n  `\n\n  const {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: { lte, gte },\n  } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    unit,\n    timestamp: {\n      timeZoneOffset: -540,\n      lte,\n      gte,\n    },\n  }\n\n  const res = await sendQuery(ENERGY_URL, query, variables)\n  const { energy } = res.data\n\n  let data = []\n  for (let i = 1; i < energy.length; i++) {\n    const diff = Math.floor(energy[i].energy) - Math.floor(energy[i - 1].energy)\n\n    data.push({\n      timestamp: energy[i].timestamp,\n      energy: energy[i].energy,\n      unixTime: Math.floor(new Date(energy[i].timestamp).getTime() / 1000),\n      diff,\n    })\n\n    if (diff < 0) {\n      console.error(\n        `Found negative energy diff for plant ${plantId} device ${deviceId}`,\n        data\n      )\n    }\n  }\n\n  return data\n}\n\nexport async function getLogs(params) {\n  const query = `\n    query Logs($plantId: String!, $deviceId: String!, $timestamp: TimestampRangeInput!) {\n      logs(plantId: $plantId, deviceId: $deviceId, timestamp: $timestamp) {\n        timestamp\n        energy\n        power\n        current\n        voltage\n        insulationResistance\n        residualCurrent\n      }\n    }\n  `\n\n  const { plantId, deviceId, lte, gte, step = 1 } = params\n\n  const variables = {\n    plantId,\n    deviceId,\n    timestamp: {\n      lte,\n      gte,\n      step,\n    },\n  }\n\n  const res = await sendQuery(ENERGY_URL, query, variables)\n  const { logs } = res.data\n\n  return logs.map(log => ({\n    ...log,\n    energy: parseFloat(log.energy),\n    power: parseFloat(log.power),\n    current: parseFloat(log.current),\n    voltage: parseFloat(log.voltage),\n    insulationResistance: parseFloat(log.insulationResistance),\n    residualCurrent: parseFloat(log.residualCurrent),\n    unixTime: Math.floor(new Date(log.timestamp).getTime() / 1000),\n  }))\n}\n","import React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions, selectors } from \"../reducer\"\n\nfunction useDebounce(val, delay) {\n  const [debouncedVal, setDebouncedVal] = useState(val)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedVal(val)\n    }, delay)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [val])\n\n  return debouncedVal\n}\n\nexport default function withFetch(\n  request,\n  {\n    name = \"fetch\",\n    getFetchId = (name, params) => name,\n    getParams = props => ({}),\n    shouldFetch = (props, response, params) => true,\n    saveCache = (props, response, params) => {},\n    debounce = 0,\n  } = {}\n) {\n  return Component => {\n    function WithFetch(props) {\n      const {\n        fetching,\n        error,\n        response,\n        fetchedAt,\n        respondedAt,\n        fetchStart,\n        fetchSuccess,\n        fetchFail,\n        ...rest\n      } = props\n\n      const params = getParams(props)\n      const fetchId = getFetchId(name, params)\n      const paramId = useDebounce(JSON.stringify(params), debounce)\n\n      async function fetch() {\n        if (!shouldFetch(props, response, params)) {\n          return\n        }\n\n        if (fetching) {\n          return\n        }\n\n        fetchStart({ fetchId })\n\n        try {\n          const response = await request(params, props)\n\n          fetchSuccess({ fetchId, response })\n          saveCache(props, response, params)\n        } catch (error) {\n          fetchFail({ fetchId, error: error.message })\n        }\n      }\n\n      useEffect(() => {\n        fetch()\n      }, [paramId])\n\n      return (\n        <Component\n          {...rest}\n          {...{\n            [name]: {\n              fetching,\n              error,\n              fetch,\n              response,\n              fetchedAt,\n              respondedAt,\n              params,\n            },\n          }}\n        />\n      )\n    }\n\n    WithFetch.propTypes = {\n      fetching: PropTypes.bool.isRequired,\n      error: PropTypes.string.isRequired,\n      response: PropTypes.any,\n      respondedAt: PropTypes.string.isRequired,\n      fetchedAt: PropTypes.string.isRequired,\n      fetchStart: PropTypes.func.isRequired,\n      fetchSuccess: PropTypes.func.isRequired,\n      fetchFail: PropTypes.func.isRequired,\n    }\n\n    return connect(\n      (state, props) => {\n        const params = getParams(props)\n        const fetchId = getFetchId(name, params)\n\n        return selectors.fetch.getFetchState(state.fetch, fetchId)\n      },\n      actions.fetch\n    )(WithFetch)\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Message, Button } from \"semantic-ui-react\"\n\nexport function Loading(props) {\n  if (props.loading) {\n    return props.renderLoading()\n  }\n\n  if (props.error) {\n    return (\n      <Message negative>\n        <p>{props.error}</p>\n        <Button onClick={props.onClickRetry}>Retry</Button>\n      </Message>\n    )\n  }\n\n  return props.children\n}\n\nLoading.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onClickRetry: PropTypes.func.isRequired,\n  renderLoading: PropTypes.func.isRequired,\n}\n\nLoading.defaultProps = {\n  renderLoading: () => <div>Loading...</div>,\n}\n\nexport default Loading\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styles from \"./LinkButton.module.css\"\n\nexport function LinkButton(props) {\n  const { onClick, children } = props\n\n  return (\n    <button className={styles.LinkButton} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default LinkButton\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Label } from \"semantic-ui-react\"\nimport LinkButton from \"../../components/LinkButton\"\nimport styles from \"./PlantHeader.module.css\"\n\nexport function PlantHeader(props) {\n  const { plant, onClick } = props\n\n  return (\n    <div className={styles.component}>\n      <LinkButton onClick={onClick}>Plant {plant.id}</LinkButton>\n      <div className={styles.devices}>\n        <div className={styles.deviceLabel}>Devices</div>\n        <Label circular>{plant.devices.length}</Label>\n      </div>\n    </div>\n  )\n}\n\nPlantHeader.defaultProps = {\n  plant: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    devices: PropTypes.array.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default PlantHeader\n","import moment from \"moment-timezone\"\n\nexport function timeZone(str) {\n  return moment.tz(str, process.env.REACT_APP_TIME_ZONE)\n}\n","function getNumDigits(x) {\n  return Math.max(Math.floor(Math.log10(Math.abs(x))), 0) + 1\n}\n\nfunction getDigit(x, n) {\n  return Math.floor((x / Math.pow(10, n - 1)) % 10)\n}\n\nexport function roundInterval(max, min, numSteps) {\n  const numDigits = getNumDigits((max - min) / numSteps)\n  const lastDigit = getDigit((max - min) / numSteps, numDigits)\n\n  // mapping from last digit to scale\n  // 9, 10 -> 10\n  // 7, 8 -> 8\n  // ...\n  // 1, 2 -> 1\n  const scale = 2 * Math.ceil(lastDigit / 2)\n  return scale * 10 ** (numDigits - 1)\n}\n\nexport function bound(val, min = -Infinity, max = Infinity) {\n  return Math.min(Math.max(val, min), max)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function GraphPlaceholder(props) {\n  const { width, height, backgroundColor } = props\n\n  return <div style={{ width, height, backgroundColor }} />\n}\n\nGraphPlaceholder.defaultProps = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n}\n\nexport default GraphPlaceholder\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Graph } from \"react-canvas-time-series\"\nimport { get } from \"../../util\"\nimport { timeZone } from \"../../util/date\"\nimport { roundInterval } from \"../../util/math\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport GraphPlaceholder from \"./GraphPlaceholder\"\nimport styles from \"./FiscalEnergyGraph.module.css\"\n\nconst MIN_Y_MAX = 1000\nconst X_MIN = 0.5\nconst X_MAX = 12.5\nconst Y_MIN = 0\n\nexport function FiscalEnergyGraph(props) {\n  const { width, height, getEnergy } = props\n\n  const { fetching, fetchedAt, fetch, error } = getEnergy\n  const data = get(getEnergy, [\"response\", \"data\"], [])\n  const yMax = Math.max(MIN_Y_MAX, get(getEnergy, [\"response\", \"yMax\"], 0))\n\n  const energyLastMonth = get(data, [data.length - 2, \"diff\"], 0)\n  const energyCurrentMonth = get(data, [data.length - 1, \"diff\"], 0)\n\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  return (\n    <Loading\n      loading={fetching || !fetchedAt}\n      error={error}\n      onClickRetry={fetch}\n      renderLoading={() => (\n        <GraphPlaceholder\n          width={width}\n          height={height}\n          backgroundColor=\"whitesmoke\"\n        />\n      )}\n    >\n      <div>\n        <div className={styles.stats}>\n          <div className={styles.month}>\n            Last month{\" \"}\n            <span className={styles.number}>\n              {energyLastMonth.toLocaleString()} kWh\n            </span>\n          </div>\n          <div className={styles.month}>\n            This month{\" \"}\n            <span className={styles.number}>\n              {energyCurrentMonth.toLocaleString()} kWh\n            </span>\n          </div>\n        </div>\n        <Graph\n          width={width}\n          height={height}\n          backgroundColor=\"beige\"\n          animate={false}\n          xMin={X_MIN}\n          xMax={X_MAX}\n          yMin={Y_MIN}\n          yMax={yMax}\n          xAxisAt=\"bottom\"\n          xAxisHeight={20}\n          xAxisLineColor=\"lightgrey\"\n          xTickInterval={1}\n          xTickLength={5}\n          showXLine={false}\n          yAxisAt=\"right\"\n          yAxisWidth={70}\n          yAxisLineColor=\"lightgrey\"\n          yTickInterval={yTickInterval}\n          renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n          yLabels={[\n            {\n              y: yMax,\n              width: 70,\n              height: 20,\n              render: y => `${y.toLocaleString()} kWh`,\n              color: \"white\",\n              backgroundColor: \"blue\",\n              drawLine: true,\n              lineColor: \"blue\",\n            },\n          ]}\n          graphs={[\n            {\n              type: \"bars\",\n              barWidth: 16,\n              getBarColor: () => \"orange\",\n              data,\n            },\n          ]}\n        />\n      </div>\n    </Loading>\n  )\n}\n\nFiscalEnergyGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n    error: PropTypes.string.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n        })\n      ).isRequired,\n      yMax: PropTypes.number.isRequired,\n    }),\n  }),\n}\n\nasync function getEnergy(params, props) {\n  const { plantId } = params\n\n  const now = new Date()\n\n  const device = props.plant.devices.find(\n    device => device.model == \"Cluster Controller\"\n  )\n\n  const res = await api.getEnergy({\n    plantId,\n    deviceId: device.id,\n    unit: \"MONTH\",\n    timestamp: {\n      // last year December\n      gte: timeZone(now.toISOString())\n        .startOf(\"year\")\n        .subtract(1, \"month\")\n        .toISOString(),\n      // end of current month\n      lte: timeZone(now.toISOString())\n        .endOf(\"month\")\n        .toISOString(),\n      timeZoneOffset: -540,\n    },\n  })\n\n  const data = res.map((energy, i) => ({\n    ...energy,\n    x: i + 1,\n    y: energy.diff,\n  }))\n\n  const yMax = Math.max(...data.map(d => d.y))\n\n  return {\n    data,\n    yMax,\n  }\n}\n\nexport default withFetch(getEnergy, {\n  name: \"getEnergy\",\n  getFetchId: (name, params) => `${name}-${params.plantId}`,\n  getParams: props => ({ plantId: props.plant.id }),\n  shouldFetch: (props, response) => !response,\n})(FiscalEnergyGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose, chunk } from \"../../util\"\nimport * as api from \"../../api\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport PlantHeader from \"./PlantHeader\"\nimport FiscalEnergyGraph from \"./FiscalEnergyGraph\"\n\nconst PADDING = 10\nconst MIN_GRAPH_WIDTH = 340\nconst GRAPH_HEIGHT = 210\n\nexport function getNumGraphsPerRow(width) {\n  if (width < MIN_GRAPH_WIDTH * 2 + 2 * PADDING) {\n    return 1\n  }\n  if (width < MIN_GRAPH_WIDTH * 3 + 2 * PADDING) {\n    return 2\n  }\n  if (width < MIN_GRAPH_WIDTH * 5 + 2 * PADDING) {\n    return 3\n  }\n\n  return 5\n}\n\nfunction Graph(props) {\n  const { width, plant, onClick } = props\n  const padding = 10\n\n  return (\n    <div>\n      <div className={styles.plantHeader}>\n        <PlantHeader plant={plant} onClick={onClick} />\n      </div>\n      <div style={{ padding, paddingTop: 0 }}>\n        <FiscalEnergyGraph\n          width={width - 2 * padding}\n          height={GRAPH_HEIGHT}\n          plant={plant}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function HomePage(props) {\n  const { divSize, getPowerPlants } = props\n\n  const numGraphsPerRow = getNumGraphsPerRow(divSize.width)\n  const graphWidth = Math.max(\n    Math.floor((divSize.width - 2 * PADDING) / numGraphsPerRow),\n    MIN_GRAPH_WIDTH\n  )\n\n  const count = get(getPowerPlants, [\"response\", \"count\"], 0)\n  const data = get(getPowerPlants, [\"response\", \"data\"], [])\n\n  return (\n    <Loading\n      loading={getPowerPlants.fetching || !getPowerPlants.fetchedAt}\n      error={getPowerPlants.error}\n      onClickRetry={getPowerPlants.fetch}\n    >\n      <div className={styles.count}>{count} power plants</div>\n      <div className={styles.col}>\n        {chunk(data, numGraphsPerRow).map((plants, i) => (\n          <div key={i} className={styles.row}>\n            {plants.map(plant => (\n              <Graph\n                key={plant.id}\n                width={graphWidth}\n                plant={plant}\n                onClick={() => props.history.push(`/plants/${plant.id}`)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </Loading>\n  )\n}\n\nHomePage.propTypes = {\n  divSize: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  getPowerPlants: PropTypes.shape({\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n    response: PropTypes.shape({\n      data: PropTypes.array.isRequired,\n      count: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(api.getPowerPlants, {\n    name: \"getPowerPlants\",\n    shouldFetch: (props, response) => !response,\n  })\n)(HomePage)\n","const COLORS = [\n  \"#1CE6FF\",\n  \"#FF34FF\",\n  \"#FF4A46\",\n  \"#008941\",\n  \"#006FA6\",\n  \"#A30059\",\n  \"#FFDBE5\",\n  \"#7A4900\",\n  \"#0000A6\",\n  \"#63FFAC\",\n  \"#B79762\",\n  \"#004D43\",\n  \"#8FB0FF\",\n  \"#997D87\",\n  \"#5A0007\",\n  \"#809693\",\n  \"#1B4400\",\n  \"#4FC601\",\n  \"#3B5DFF\",\n  \"#4A3B53\",\n  \"#FF2F80\",\n  \"#61615A\",\n  \"#BA0900\",\n  \"#6B7900\",\n  \"#00C2A0\",\n  \"#FFAA92\",\n  \"#FF90C9\",\n  \"#B903AA\",\n  \"#D16100\",\n  \"#7B4F4B\",\n  \"#A1C299\",\n  \"#300018\",\n  \"#0AA6D8\",\n  \"#013349\",\n  \"#00846F\",\n  \"#372101\",\n  \"#FFB500\",\n  \"#C2FFED\",\n  \"#A079BF\",\n  \"#CC0744\",\n  \"#C0B9B2\",\n  \"#C2FF99\",\n  \"#00489C\",\n  \"#6F0062\",\n  \"#0CBD66\",\n  \"#EEC3FF\",\n  \"#456D75\",\n  \"#B77B68\",\n  \"#7A87A1\",\n  \"#788D66\",\n  \"#885578\",\n  \"#FAD09F\",\n  \"#FF8A9A\",\n  \"#D157A0\",\n  \"#BEC459\",\n  \"#456648\",\n  \"#0086ED\",\n  \"#886F4C\",\n\n  \"#34362D\",\n  \"#B4A8BD\",\n  \"#00A6AA\",\n  \"#452C2C\",\n  \"#636375\",\n  \"#A3C8C9\",\n  \"#FF913F\",\n  \"#938A81\",\n  \"#575329\",\n  \"#00FECF\",\n  \"#B05B6F\",\n  \"#8CD0FF\",\n  \"#3B9700\",\n  \"#04F757\",\n  \"#C8A1A1\",\n  \"#1E6E00\",\n  \"#7900D7\",\n  \"#A77500\",\n  \"#6367A9\",\n  \"#A05837\",\n  \"#6B002C\",\n  \"#772600\",\n  \"#D790FF\",\n  \"#9B9700\",\n  \"#549E79\",\n  \"#FFF69F\",\n  \"#72418F\",\n  \"#BC23FF\",\n  \"#99ADC0\",\n  \"#3A2465\",\n  \"#922329\",\n  \"#5B4534\",\n  \"#404E55\",\n  \"#0089A3\",\n  \"#CB7E98\",\n  \"#A4E804\",\n  \"#324E72\",\n  \"#6A3A4C\",\n  \"#83AB58\",\n  \"#D1F7CE\",\n  \"#004B28\",\n  \"#C8D0F6\",\n  \"#A3A489\",\n  \"#806C66\",\n  \"#BF5650\",\n  \"#E83000\",\n  \"#66796D\",\n  \"#DA007C\",\n  \"#FF1A59\",\n  \"#8ADBB4\",\n  \"#5B4E51\",\n  \"#C895C5\",\n  \"#320033\",\n  \"#FF6832\",\n  \"#66E1D3\",\n  \"#CFCDAC\",\n  \"#D0AC94\",\n  \"#7ED379\",\n  \"#012C58\",\n]\n\nexport default COLORS\n","import React, { useState } from \"react\"\n\nexport default function withParams(initialParams = {}) {\n  return Component => {\n    function WithParams(props) {\n      const [params, setParams] = useState(initialParams)\n\n      return <Component {...props} params={params} setParams={setParams} />\n    }\n\n    return WithParams\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport function ColorBox(props) {\n  const { size, margin, color } = props\n\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        margin: margin,\n        backgroundColor: color,\n      }}\n    />\n  )\n}\n\nColorBox.defaultProps = {\n  color: \"red\",\n  size: 10,\n  margin: 5,\n}\n\nColorBox.propTypes = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  margin: PropTypes.number.isRequired,\n}\n\nexport default ColorBox\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Checkbox, Dropdown, Button } from \"semantic-ui-react\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./DeviceFilter.module.css\"\n\nfunction Row(props) {\n  const { onClick, checked, color, text } = props\n\n  return (\n    <Dropdown.Item onClick={onClick}>\n      <div className={styles.cell}>\n        <Checkbox checked={!!checked} />\n        <ColorBox color={color} />\n        <div>{text}</div>\n      </div>\n    </Dropdown.Item>\n  )\n}\n\nexport function DeviceFilter(props) {\n  const { devices, checked, colors, onToggle } = props\n\n  const [open, setOpen] = useState(false)\n\n  function onClick(id) {\n    if (id == \"all\") {\n      onToggle(\"all\", devices.map(({ id }) => id))\n    } else {\n      onToggle(id)\n    }\n  }\n\n  const count = Object.values(checked).filter(v => v).length\n  const all = count == devices.length\n\n  return (\n    <Button.Group basic size=\"small\">\n      <Dropdown open={open}>\n        <Dropdown.Menu style={{ maxHeight: 200, overflow: \"auto\" }}>\n          <Row\n            onClick={() => onClick(\"all\")}\n            checked={all}\n            color=\"transparent\"\n            text={`All ${devices.length} devices`}\n          />\n          <Dropdown.Divider />\n          {devices.map((device, i) => (\n            <Row\n              key={i}\n              onClick={() => onClick(device.id)}\n              checked={checked[device.id]}\n              color={colors[device.id]}\n              text={`${device.model} - ${device.id}`}\n            />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Button\n        labelPosition=\"right\"\n        icon=\"caret down\"\n        content={`Showing ${count} devices`}\n        onClick={() => setOpen(!open)}\n      />\n    </Button.Group>\n  )\n}\n\nDeviceFilter.propTypes = {\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  checked: PropTypes.object.isRequired,\n  colors: PropTypes.object.isRequired,\n}\n\nexport default DeviceFilter\n","import { useState } from \"react\"\n\nexport default function useToggle(ids) {\n  const [checked, setState] = useState(\n    ids.reduce((checked, id) => {\n      checked[id] = true\n      return checked\n    }, {})\n  )\n\n  function _toggle(id) {\n    setState({\n      ...checked,\n      [id]: !checked[id],\n    })\n  }\n\n  function _toggleAll(ids = []) {\n    const all = Object.values(checked).filter(v => v).length == ids.length\n\n    if (all) {\n      setState({})\n    } else {\n      setState(\n        ids.reduce((checked, id) => {\n          checked[id] = true\n          return checked\n        }, {})\n      )\n    }\n  }\n\n  function toggle(id, ids) {\n    if (id == \"all\") {\n      _toggleAll(ids)\n    } else {\n      _toggle(id)\n    }\n  }\n\n  return [checked, toggle]\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"semantic-ui-react\"\nimport styles from \"./TimeUnitButtons.module.css\"\n\nexport const UNITS = [\"MONTH\", \"DAY\", \"HOUR\"]\n\nconst TEXT = {\n  MONTH: \"Month\",\n  DAY: \"Day\",\n  HOUR: \"Hour\",\n}\n\nexport function TimeUnitButtons(props) {\n  const { active } = props\n\n  function getColor(key) {\n    return key == active ? \"yellow\" : undefined\n  }\n\n  return (\n    <div className={styles.TimeUnitButtons}>\n      {UNITS.map(unit => (\n        <Button\n          key={unit}\n          color={getColor(unit)}\n          onClick={() => props.onClick(unit)}\n        >\n          {TEXT[unit]}\n        </Button>\n      ))}\n    </div>\n  )\n}\n\nTimeUnitButtons.propTypes = {\n  active: PropTypes.oneOf(UNITS).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default TimeUnitButtons\n","import React from \"react\"\n\nexport default function disableScroll(Component) {\n  function DisableScroll(props) {\n    function disableScroll() {\n      document.body.style.overflow = \"hidden\"\n    }\n\n    function enableScroll() {\n      document.body.style.overflow = \"unset\"\n    }\n\n    return (\n      <Component\n        {...props}\n        disableScroll={disableScroll}\n        enableScroll={enableScroll}\n      />\n    )\n  }\n\n  return DisableScroll\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ColorBox from \"./ColorBox\"\nimport styles from \"./Labels.module.css\"\n\nexport function Labels(props) {\n  const { timestamp, labels } = props\n\n  return (\n    <div>\n      <div className={styles.timestamp}>{timestamp}</div>\n      <div className={styles.labels}>\n        {labels.map(label => (\n          <div key={label.id} className={styles.label}>\n            <ColorBox color={label.color} />\n            <div>{label.value}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nLabels.propTypes = {\n  timestamp: PropTypes.string.isRequired,\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default Labels\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  layout,\n  zoomable,\n  draggable,\n} from \"react-canvas-time-series\"\nimport { get } from \"../../../util\"\nimport { timeZone } from \"../../../util/date\"\nimport { roundInterval } from \"../../../util/math\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport Labels from \"../../../components/Labels\"\nimport styles from \"./BarGraph.module.css\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst MIN_BAR_WIDTH = 5\nconst BAR_PADDING = 5\n\nconst HEIGHT = 200\n\nconst Y_MIN = 0\n\nfunction getNumXTicks(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return 12\n    case \"DAY\":\n      return 6\n    case \"HOUR\":\n      return 6\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction renderXLabel(unit, x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  const now = new Date()\n\n  switch (unit) {\n    case \"MONTH\":\n      return timeZone(now.toISOString())\n        .startOf(\"month\")\n        .add(Math.round(x), \"month\")\n        .format(\"YYYY-MM\")\n    case \"DAY\":\n      return timeZone(now.toISOString())\n        .startOf(\"day\")\n        .add(Math.round(x), \"day\")\n        .format(\"YYYY-MM-DD\")\n    case \"HOUR\":\n      return timeZone(now.toISOString())\n        .startOf(\"hour\")\n        .add(Math.round(x), \"hour\")\n        .format(\"YYYY-MM-DD HH:mm\")\n    default:\n      return\n  }\n}\n\nfunction renderYLabel(y) {\n  if (!y) {\n    return \"0 kWh\"\n  }\n\n  return `${Math.round(y).toLocaleString()} kWh`\n}\n\nexport function BarGraph(props) {\n  const {\n    width,\n    data,\n    yMaxs,\n    xs,\n    loading,\n    devices,\n    checked,\n    colors,\n    xMin,\n    xMax,\n    unit,\n    onChangeXRange,\n  } = props\n\n  const [mouse, setMouse] = useState({\n    x: undefined,\n    y: undefined,\n  })\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    diffs: {},\n  })\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n  const yMax = Math.max(...checkedDevices.map(device => yMaxs[device.id]), 100)\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouse(mouse)\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(xs, x)\n\n      const timestamp = get(data, [get(devices, [0, \"id\"]), i, \"timestamp\"])\n\n      if (timestamp) {\n        setNearest({\n          timestamp,\n          diffs: checkedDevices.reduce((diffs, device) => {\n            diffs[device.id] = get(data, [device.id, i, \"diff\"], 0)\n            return diffs\n          }, {}),\n        })\n      }\n    } else {\n      props.enableScroll()\n\n      setMouse({\n        x: undefined,\n        y: undefined,\n      })\n\n      setNearest({\n        timestamp: undefined,\n        diffs: {},\n      })\n    }\n\n    onChangeXRange(xRange)\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouse({\n      x: undefined,\n      y: undefined,\n    })\n\n    setNearest({\n      timestamp: undefined,\n      diffs: {},\n    })\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    onChangeXRange(xRange)\n  }\n\n  const barWidth = Math.max(\n    MIN_BAR_WIDTH,\n    Math.floor(graph.width / (xMax - xMin)) - 2 * BAR_PADDING\n  )\n\n  // TODO xTickInterval based on graph.width\n  const xTickInterval = Math.max(\n    1,\n    Math.floor((xMax - xMin) / getNumXTicks(unit))\n  )\n  const yTickInterval = roundInterval(yMax, Y_MIN, 4)\n\n  const graphs = checkedDevices.map(device => ({\n    type: \"bars\",\n    barWidth,\n    getBarColor: () => colors[device.id],\n    data: data[device.id] || [],\n  }))\n\n  return (\n    <div className={styles.component}>\n      <Graph\n        width={width}\n        height={HEIGHT}\n        backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n        mouse={mouse}\n        xMin={xMin}\n        xMax={xMax}\n        yMin={Y_MIN}\n        yMax={yMax}\n        xAxisAt=\"bottom\"\n        xAxisHeight={20}\n        xAxisLineColor=\"lightgrey\"\n        xTickInterval={xTickInterval}\n        xTickLength={5}\n        renderXTick={x => renderXLabel(unit, x)}\n        showXLine={false}\n        yAxisAt=\"right\"\n        yAxisWidth={70}\n        yAxisLineColor=\"lightgrey\"\n        yTickInterval={yTickInterval}\n        yTickLength={5}\n        renderYTick={y => `${Math.round(y).toLocaleString()} kWh`}\n        graphs={graphs}\n        xLabels={[\n          {\n            x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x),\n            width: 100,\n            height: 20,\n            render: x => renderXLabel(unit, x),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        yLabels={[\n          {\n            y: yMax,\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"black\",\n            backgroundColor: \"orange\",\n            lineColor: \"orange\",\n          },\n          {\n            y: canvas.math.getY(graph.height, graph.top, yMax, Y_MIN, mouse.y),\n            width: 70,\n            height: 20,\n            render: y => renderYLabel(y),\n            color: \"white\",\n            backgroundColor: \"black\",\n            lineColor: \"black\",\n          },\n        ]}\n        onMouseMove={onMouseMove}\n        onMouseOut={onMouseOut}\n        onWheel={onWheel}\n      />\n      <div className={styles.labels}>\n        <Labels\n          timestamp={nearest.timestamp}\n          labels={checkedDevices.map(device => ({\n            id: device.id,\n            color: colors[device.id],\n            value: `${get(nearest.diffs, [device.id], 0)} kWh`,\n          }))}\n        />\n      </div>\n    </div>\n  )\n}\n\nBarGraph.propTypes = {\n  width: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  yMaxs: PropTypes.object.isRequired,\n  xs: PropTypes.arrayOf(PropTypes.number).isRequired,\n  loading: PropTypes.bool.isRequired,\n  unit: PropTypes.oneOf([\"MONTH\", \"DAY\", \"HOUR\"]),\n  onChangeXRange: PropTypes.func.isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nexport default disableScroll(BarGraph)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { get, compose } from \"../../../util\"\nimport { timeZone } from \"../../../util/date\"\nimport * as api from \"../../../api\"\nimport withFetch from \"../../../components/withFetch\"\nimport withParams from \"../../../components/withParams\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport useToggle from \"../../../components/useToggle\"\nimport styles from \"./index.module.css\"\nimport TimeUnitButtons, { UNITS } from \"./TimeUnitButtons\"\nimport BarGraph from \"./BarGraph\"\n\nfunction getDefaultXRange(unit) {\n  switch (unit) {\n    case \"MONTH\":\n      return {\n        xMin: -6.5,\n        xMax: 5.5,\n      }\n    case \"DAY\":\n      return {\n        xMin: -30.5,\n        xMax: 0.5,\n      }\n    case \"HOUR\":\n      return {\n        xMin: -72.5,\n        xMax: 0.5,\n      }\n    default:\n      throw new Error(`Unknown unit ${unit}`)\n  }\n}\n\nexport function EnergyGraph(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    params,\n    setParams,\n    getEnergy,\n  } = props\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  function onClickTimeUnitButton(unit) {\n    setParams({\n      ...params,\n      unit,\n      ...getDefaultXRange(unit),\n    })\n  }\n\n  function onChangeXRange({ xMin, xMax }) {\n    setParams({\n      ...params,\n      xMin,\n      xMax,\n    })\n  }\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <div className={styles.filterCol}>\n          <TimeUnitButtons\n            active={params.unit}\n            onClick={onClickTimeUnitButton}\n          />\n        </div>\n        <div className={styles.filterCol}>\n          <DeviceFilter\n            devices={devices}\n            checked={checked}\n            colors={colors}\n            onToggle={toggle}\n          />\n        </div>\n      </div>\n      <BarGraph\n        plantId={plantId}\n        devices={devices}\n        width={graphWidth}\n        checked={checked}\n        colors={colors}\n        data={get(getEnergy.response, [\"data\"], {})}\n        yMaxs={get(getEnergy.response, [\"yMaxs\"], {})}\n        xs={get(getEnergy.response, [\"xs\"], [])}\n        loading={getEnergy.fetching}\n        {...params}\n        onChangeXRange={onChangeXRange}\n      />\n    </>\n  )\n}\n\nEnergyGraph.propTypes = {\n  plantId: PropTypes.string.isRequired,\n  graphWidth: PropTypes.number.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  colors: PropTypes.object.isRequired,\n  params: PropTypes.shape({\n    unit: PropTypes.oneOf(UNITS).isRequired,\n    xMin: PropTypes.number.isRequired,\n    xMax: PropTypes.number.isRequired,\n  }).isRequired,\n  setParams: PropTypes.func.isRequired,\n  getEnergy: PropTypes.shape({\n    fetching: PropTypes.bool.isRequired,\n  }).isRequired,\n}\n\nfunction getGte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) - 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getLte(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .startOf(_unit)\n        .add(Math.round(x) + 1, _unit)\n        .toISOString()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getUnixTimeFromX(unit, now, x) {\n  switch (unit) {\n    case \"MONTH\":\n    case \"DAY\":\n    case \"HOUR\":\n      const _unit = unit.toLowerCase()\n\n      return timeZone(now.toISOString())\n        .endOf(_unit)\n        .add(x, _unit)\n        .unix()\n    default:\n      console.error(`Invalid unit ${unit}`)\n  }\n}\n\nfunction getXFromUnixTime({ xMin, xMax, tMin, tMax, t }) {\n  const d = (xMax - xMin) / (tMax - tMin)\n  const x0 = xMin - d * tMin\n\n  return Math.round(d * t + x0)\n}\n\nasync function getEnergy(params, props) {\n  const { plantId, deviceIds, unit, xMin, xMax } = params\n\n  const now = new Date()\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getEnergy({\n        plantId,\n        deviceId,\n        unit,\n        timestamp: {\n          gte: getGte(unit, now, xMin),\n          lte: getLte(unit, now, xMax),\n          timeZoneOffset: -540,\n        },\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n  const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n\n  const data = res.reduce((map, { deviceId, data }) => {\n    map[deviceId] = data.map(d => ({\n      ...d,\n      x: getXFromUnixTime({\n        xMin: parseInt(xMin),\n        xMax: parseInt(xMax),\n        tMin,\n        tMax,\n        t: d.unixTime,\n      }),\n      y: d.diff,\n    }))\n\n    return map\n  }, {})\n\n  const yMaxs = res.reduce((yMaxs, { deviceId, data }) => {\n    yMaxs[deviceId] = Math.max(...data.map(d => d.diff), 0)\n\n    return yMaxs\n  }, {})\n\n  return {\n    data,\n    yMaxs,\n    xs: get(data, [deviceIds[0]], []).map(({ x }) => x),\n  }\n}\n\nexport default compose(\n  withParams({\n    unit: UNITS[0],\n    xMin: -6.5,\n    xMax: 5.5,\n  }),\n  withFetch(getEnergy, {\n    name: \"getEnergy\",\n    getFetchId: (name, params) => `${name}-${params.plantId}-${params.unit}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      unit: props.params.unit,\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {\n      // props.cacheEnergy({\n      //   id: getCacheId(props),\n      //   data: response,\n      // })\n    },\n    shouldFetch: () => true,\n    // shouldFetch: (props, response, params) => {\n    //   const {\n    //     energy: { data },\n    //   } = props\n    //\n    //   const { unit, xMin, xMax } = params\n    //\n    //   const now = new Date()\n    //   const tMin = getUnixTimeFromX(unit, now, parseInt(xMin))\n    //   const tMax = getUnixTimeFromX(unit, now, parseInt(xMax))\n    //\n    //   return (\n    //     data.length == 0 ||\n    //     tMin < data[0].unixTime ||\n    //     tMax > data[data.length - 1].unixTime\n    //   )\n    // },\n  })\n)(EnergyGraph)\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ReactCanvasTimeSeries, {\n  canvas,\n  zoomable,\n  draggable,\n  layout,\n} from \"react-canvas-time-series\"\nimport { roundInterval } from \"../../../util/math\"\nimport { timeZone } from \"../../../util/date\"\n\nconst Graph = zoomable(draggable(ReactCanvasTimeSeries.Graph))\nconst { getLayout } = layout\n\nconst HEIGHT = 150\n\nfunction renderXLabel(x) {\n  if (x == undefined || isNaN(x)) {\n    return\n  }\n\n  return timeZone(x * 1000).format(\"MM DD HH:mm\")\n}\n\nfunction renderYLabel(y, unit) {\n  if (!y) {\n    return `${y} ${unit}`\n  }\n\n  return `${Math.round(y).toLocaleString()} ${unit}`\n}\n\nexport function LineGraph(props) {\n  const { loading, width, lines, yMin, yMax, xMin, xMax, mouseX, unit } = props\n\n  const [mouseY, setMouseY] = useState()\n\n  function onMouseMove(e, mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      setMouseY(mouse.y)\n    } else {\n      setMouseY()\n    }\n\n    props.onMouseMove(mouse, graph, xRange)\n  }\n\n  function onMouseOut() {\n    setMouseY()\n    props.onMouseOut()\n  }\n\n  function onWheel(e, mouse, graph, xRange) {\n    props.onWheel(xRange)\n  }\n\n  const xTickInterval = 24 * 3600\n  const yTickInterval = roundInterval(yMax, yMin, 4)\n\n  const graphs = lines.map(line => ({\n    type: \"line\",\n    data: line.data,\n    lineColor: line.color,\n    step: 1,\n  }))\n\n  const { graph } = getLayout({\n    padding: 10,\n    width,\n    height: HEIGHT,\n    xAxisAt: \"bottom\",\n    xAxisHeight: 20,\n    yAxisAt: \"right\",\n    yAxisWidth: 70,\n  })\n\n  const mouse = {\n    x: mouseX,\n    y: mouseY,\n  }\n\n  return (\n    <Graph\n      width={width}\n      height={HEIGHT}\n      backgroundColor={loading ? \"whitesmoke\" : \"beige\"}\n      mouse={mouse}\n      xMin={xMin}\n      xMax={xMax}\n      yMin={yMin}\n      yMax={yMax}\n      xAxisAt=\"bottom\"\n      xAxisHeight={20}\n      xAxisLineColor=\"lightgrey\"\n      xTickInterval={xTickInterval}\n      xTickLength={5}\n      renderXTick={renderXLabel}\n      showXLine={true}\n      yAxisAt=\"right\"\n      yAxisWidth={70}\n      yAxisLineColor=\"lightgrey\"\n      yTickInterval={yTickInterval}\n      yTickLength={5}\n      renderYTick={y => renderYLabel(y, unit)}\n      graphs={graphs}\n      xLabels={[\n        {\n          x: canvas.math.getX(graph.width, graph.left, xMax, xMin, mouseX),\n          width: 100,\n          height: 20,\n          render: renderXLabel,\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      yLabels={[\n        {\n          y: canvas.math.getY(graph.height, graph.top, yMax, yMin, mouseY),\n          width: 70,\n          height: 20,\n          render: y => renderYLabel(y, unit),\n          color: \"white\",\n          backgroundColor: \"black\",\n          drawLine: true,\n          lineColor: \"black\",\n        },\n      ]}\n      onMouseMove={onMouseMove}\n      onMouseOut={onMouseOut}\n      onWheel={onWheel}\n    />\n  )\n}\n\nLineGraph.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired,\n  xMin: PropTypes.number.isRequired,\n  xMax: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n  lines: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      data: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n  unit: PropTypes.oneOf([\"watts\", \"amp\", \"v\", \"kOhm\"]).isRequired,\n}\n\nexport default LineGraph\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { canvas } from \"react-canvas-time-series\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../../util\"\nimport * as api from \"../../../api\"\nimport withParams from \"../../../components/withParams\"\nimport withFetch from \"../../../components/withFetch\"\nimport disableScroll from \"../../../components/disableScroll\"\nimport useToggle from \"../../../components/useToggle\"\nimport DeviceFilter from \"../../../components/DeviceFilter\"\nimport Labels from \"../../../components/Labels\"\nimport LineGraph from \"./LineGraph\"\nimport styles from \"./index.module.css\"\n\nconst X_MIN = Math.round(new Date(2019, 5, 20).getTime() / 1000)\nconst X_MAX = Math.round(new Date(2019, 5, 23).getTime() / 1000)\n\n// const NOW = Math.round(new Date().getTime() / 1000)\n// const X_MIN = NOW - 9 * 24 * 3600\n// const X_MAX = NOW + 24 * 3600\n\nexport function InverterGraphs(props) {\n  const {\n    plantId,\n    devices,\n    graphWidth,\n    colors,\n    getLogs,\n    params,\n    setParams,\n  } = props\n\n  const { fetching } = getLogs\n\n  const data = get(getLogs, [\"response\"], {})\n  const logs = get(data, [\"logs\"], {})\n  const unixTimes = get(data, [\"unixTimes\"], {})\n\n  const maxPower = get(data, [\"maxPower\"], 0)\n  const maxCurrent = get(data, [\"maxCurrent\"], 0)\n  const maxVoltage = get(data, [\"maxVoltage\"], 0)\n  const maxInsulationResistance = get(data, [\"maxInsulationResistance\"], 0)\n  const maxResidualCurrent = get(data, [\"maxResidualCurrent\"], 0)\n\n  const [checked, toggle] = useToggle(devices.map(({ id }) => id))\n\n  const [mouseX, setMouseX] = useState()\n\n  const [nearest, setNearest] = useState({\n    timestamp: undefined,\n    power: {},\n    current: {},\n    voltage: {},\n    insulationResistance: {},\n    residualCurrent: {},\n  })\n\n  const checkedDevices = devices.filter(device => checked[device.id])\n\n  function onMouseMove(mouse, graph, xRange) {\n    if (canvas.math.isInside(graph, mouse)) {\n      props.disableScroll()\n\n      setMouseX(mouse.x)\n\n      const { xMin, xMax } = xRange\n\n      const x = canvas.math.getX(graph.width, graph.left, xMax, xMin, mouse.x)\n      const i = canvas.math.findNearestIndex(unixTimes, x)\n\n      const unixTime = unixTimes[i]\n\n      if (unixTime) {\n        const nearest = {\n          timestamp: new Date(unixTime * 1000).toISOString(),\n          power: {},\n          current: {},\n          voltage: {},\n          insulationResistance: {},\n          residualCurrent: {},\n        }\n\n        for (const device of checkedDevices) {\n          nearest.power[device.id] = get(logs, [device.id, \"power\", i, \"y\"], 0)\n          nearest.current[device.id] = get(\n            logs,\n            [device.id, \"current\", i, \"y\"],\n            0\n          )\n          nearest.voltage[device.id] = get(\n            logs,\n            [device.id, \"voltage\", i, \"y\"],\n            0\n          )\n          nearest.insulationResistance[device.id] = get(\n            logs,\n            [device.id, \"insulationResistance\", i, \"y\"],\n            0\n          )\n          nearest.residualCurrent[device.id] = get(\n            logs,\n            [device.id, \"residualCurrent\", i, \"y\"],\n            0\n          )\n        }\n\n        setNearest(nearest)\n      }\n    } else {\n      props.enableScroll()\n\n      setMouseX()\n\n      setNearest({\n        timestamp: undefined,\n        power: {},\n        current: {},\n        voltage: {},\n        insulationResistance: {},\n        residualCurrent: {},\n      })\n    }\n\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  function onMouseOut() {\n    props.enableScroll()\n\n    setMouseX()\n\n    setNearest({\n      timestamp: undefined,\n      power: {},\n      current: {},\n      voltage: {},\n      insulationResistance: {},\n      residualCurrent: {},\n    })\n  }\n\n  function onWheel(xRange) {\n    setParams({\n      ...params,\n      ...xRange,\n    })\n  }\n\n  const { xMin, xMax } = params\n\n  // TODO residualCurrent (mA)\n\n  return (\n    <div>\n      <DeviceFilter\n        devices={devices}\n        checked={checked}\n        colors={colors}\n        onToggle={toggle}\n      />\n      <h5 className={styles.graphHeader}>Power (watts)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"power\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"watts\"\n          yMax={maxPower}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.power, [device.id], 0)} watts`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Current (amp)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          plantId={plantId}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"current\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"amp\"\n          yMax={maxCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.current, [device.id], 0)} amp`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Voltage (v)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"voltage\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"v\"\n          yMax={maxVoltage}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.voltage, [device.id], 0)} v`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Insulation Resistance (kOhm)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"insulationResistance\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"kOhm\"\n          yMax={maxInsulationResistance}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(\n                nearest.insulationResistance,\n                [device.id],\n                0\n              )} kOhm`,\n            }))}\n          />\n        </div>\n      </div>\n\n      <h5 className={styles.graphHeader}>Residual Current (kOhm)</h5>\n      <div className={styles.row}>\n        <LineGraph\n          loading={fetching}\n          lines={checkedDevices.map(device => ({\n            data: get(logs, [device.id, \"residualCurrent\"], []),\n            color: colors[device.id],\n          }))}\n          width={graphWidth}\n          unit=\"kOhm\"\n          yMax={maxResidualCurrent}\n          yMin={0}\n          xMin={xMin}\n          xMax={xMax}\n          mouseX={mouseX}\n          onMouseMove={onMouseMove}\n          onMouseOut={onMouseOut}\n          onWheel={onWheel}\n        />\n        <div className={styles.labels}>\n          <Labels\n            timestamp={nearest.timestamp}\n            labels={checkedDevices.map(device => ({\n              id: device.id,\n              color: colors[device.id],\n              value: `${get(nearest.residualCurrent, [device.id], 0)} kOhm`,\n            }))}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nInverterGraphs.propTypes = {\n  graphWidth: PropTypes.number.isRequired,\n  plantId: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      model: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  disableScroll: PropTypes.func.isRequired,\n  enableScroll: PropTypes.func.isRequired,\n}\n\nasync function getLogs(params, props) {\n  const { plantId, deviceIds, xMin, xMax } = params\n\n  const gte = new Date(xMin * 1000).toISOString()\n  const lte = new Date(xMax * 1000).toISOString()\n  const step = 5\n\n  const res = await Promise.all(\n    deviceIds.map(async deviceId => {\n      const data = await api.getLogs({\n        plantId,\n        deviceId,\n        gte,\n        lte,\n        step,\n      })\n\n      return {\n        deviceId,\n        data,\n      }\n    })\n  )\n\n  const unixTimes = get(res, [0, \"data\"], []).map(({ unixTime }) => unixTime)\n\n  let maxPower = 0\n  let maxCurrent = 0\n  let maxVoltage = 0\n  let maxInsulationResistance = 0\n  let maxResidualCurrent = 0\n\n  const logs = {}\n\n  for (const { deviceId, data } of res) {\n    logs[deviceId] = {\n      power: [],\n      current: [],\n      voltage: [],\n      insulationResistance: [],\n      residualCurrent: [],\n    }\n\n    for (const d of data) {\n      logs[deviceId].power.push({\n        x: d.unixTime,\n        y: d.power,\n      })\n\n      logs[deviceId].current.push({\n        x: d.unixTime,\n        y: d.current,\n      })\n\n      logs[deviceId].voltage.push({\n        x: d.unixTime,\n        y: d.voltage,\n      })\n\n      logs[deviceId].insulationResistance.push({\n        x: d.unixTime,\n        y: d.insulationResistance,\n      })\n\n      logs[deviceId].residualCurrent.push({\n        x: d.unixTime,\n        y: d.residualCurrent,\n      })\n\n      maxPower = Math.max(d.power, maxPower)\n      maxCurrent = Math.max(d.current, maxCurrent)\n      maxVoltage = Math.max(d.voltage, maxVoltage)\n      maxInsulationResistance = Math.max(\n        d.insulationResistance,\n        maxInsulationResistance\n      )\n      maxResidualCurrent = Math.max(d.residualCurrent, maxResidualCurrent)\n    }\n  }\n\n  return {\n    maxPower,\n    maxCurrent,\n    maxVoltage,\n    maxInsulationResistance,\n    maxResidualCurrent,\n    logs,\n    unixTimes,\n  }\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  disableScroll,\n  withParams({\n    xMin: X_MIN,\n    xMax: X_MAX,\n  }),\n  withFetch(getLogs, {\n    name: \"getLogs\",\n    getFetchId: (name, params) => `${name}-${params.plantId}`,\n    debounce: 500,\n    getParams: props => ({\n      plantId: props.plantId,\n      deviceIds: props.devices.map(({ id }) => id),\n      xMin: props.params.xMin,\n      xMax: props.params.xMax,\n    }),\n    saveCache: (props, response) => {},\n    shouldFetch: (props, repsonse, params) => true,\n  })\n)(InverterGraphs)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { get, compose } from \"../../util\"\nimport * as api from \"../../api\"\nimport COLORS from \"../../lib/colors\"\nimport { bound } from \"../../util/math\"\nimport withFetch from \"../../components/withFetch\"\nimport Loading from \"../../components/Loading\"\nimport styles from \"./index.module.css\"\nimport EnergyGraph from \"./EnergyGraph\"\nimport InverterGraphs from \"./InverterGraphs\"\n\nconst GRAPH_PADDING = 10\nconst MIN_GRAPH_WIDTH = 300\nconst MAX_GRAPH_WIDTH = 1200\n\nexport function PowerPlantDetailPage(props) {\n  const { divSize, getPowerPlant } = props\n\n  const devices = get(getPowerPlant, [\"response\", \"devices\"], [])\n\n  const colors = devices.reduce((colors, device, i) => {\n    colors[device.id] = COLORS[i]\n    return colors\n  }, {})\n\n  const graphWidth = bound(\n    divSize.width - 2 * GRAPH_PADDING,\n    MIN_GRAPH_WIDTH,\n    MAX_GRAPH_WIDTH\n  )\n\n  // TODO only render graph when new data\n  // TODO stacked bar graph\n  // TODO filter graph by date\n  return (\n    <div>\n      <div className={styles.header}>\n        <div className={styles.headerText}>\n          Plant {props.match.params.plantId}\n        </div>\n        <div className={styles.subHeader}>{devices.length} devices</div>\n      </div>\n      <Loading\n        loading={getPowerPlant.fetching || !getPowerPlant.fetchedAt}\n        error={getPowerPlant.error}\n        onClickRetry={getPowerPlant.fetch}\n      >\n        {devices.length > 0 && (\n          <>\n            <EnergyGraph\n              plantId={props.match.params.plantId}\n              devices={devices}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n            <InverterGraphs\n              plantId={props.match.params.plantId}\n              devices={devices.filter(\n                device => device.model != \"Cluster Controller\"\n              )}\n              graphWidth={graphWidth}\n              colors={colors}\n            />\n          </>\n        )}\n      </Loading>\n    </div>\n  )\n}\n\nPowerPlantDetailPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      plantId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  divSize: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  getPowerPlant: PropTypes.shape({\n    response: PropTypes.shape({\n      devices: PropTypes.array.isRequired,\n    }),\n    error: PropTypes.string.isRequired,\n    fetching: PropTypes.bool.isRequired,\n    fetch: PropTypes.func.isRequired,\n    fetchedAt: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default compose(\n  connect(state => ({ divSize: state.divSize })),\n  withFetch(params => api.getPowerPlant(params), {\n    name: \"getPowerPlant\",\n    getFetchId: (name, params) => `${name}-${params.id}`,\n    getParams: props => ({ id: props.match.params.plantId }),\n    shouldFetch: (props, response) => !response,\n  })\n)(PowerPlantDetailPage)\n","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport styles from \"./App.module.css\"\nimport withDivSize from \"./components/withDivSize\"\nimport HomePage from \"./pages/HomePage\"\nimport PowerPlantDetailPage from \"./pages/PowerPlantDetailPage\"\n\nexport function App() {\n  return (\n    <div className={styles.component}>\n      <h5>Time zone: {process.env.REACT_APP_TIME_ZONE}</h5>\n\n      <Switch>\n        <Route path=\"/plants/:plantId\" component={PowerPlantDetailPage} />\n        <Route component={HomePage} />\n      </Switch>\n\n      <div className={styles.footer} />\n    </div>\n  )\n}\n\nexport default withDivSize(App)\n","import React, { useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { actions } from \"../reducer\"\n\nexport default function withDivSize(Component) {\n  function WithDivSize(props) {\n    const ref = useRef()\n\n    useEffect(() => {\n      function setDivSize() {\n        props.updateDivSize({\n          // size of div\n          height: ref.current.clientHeight,\n          width: ref.current.clientWidth,\n        })\n      }\n\n      setDivSize()\n\n      window.addEventListener(\"resize\", setDivSize)\n\n      return () => {\n        window.removeEventListener(\"resize\", setDivSize)\n      }\n    }, [])\n\n    return (\n      <div ref={ref}>\n        <Component {...props} />\n      </div>\n    )\n  }\n\n  WithDivSize.propTypes = {\n    updateDivSize: PropTypes.func.isRequired,\n  }\n\n  return connect(\n    undefined,\n    actions.divSize\n  )(WithDivSize)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n// redux\nimport { applyMiddleware, createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport { reducer } from \"./reducer\"\n\nlet middlewares = [thunk]\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(logger)\n}\n\nconst store = createStore(reducer, applyMiddleware(...middlewares))\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"FiscalEnergyGraph_stats__3j2T_\",\"month\":\"FiscalEnergyGraph_month__1qsdS\",\"number\":\"FiscalEnergyGraph_number__3ViBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"HomePage_count__3Q6q8\",\"col\":\"HomePage_col__33bFf\",\"row\":\"HomePage_row__i7JCH\",\"plantHeader\":\"HomePage_plantHeader__26-Kz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PlantHeader_component__NDfu0\",\"devices\":\"PlantHeader_devices__2U2Un\",\"deviceLabel\":\"PlantHeader_deviceLabel__2-z7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PowerPlantDetailPage_header__2Oy6X\",\"headerText\":\"PowerPlantDetailPage_headerText__3xQIM\",\"subHeader\":\"PowerPlantDetailPage_subHeader__4shvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"EnergyGraph_filter__sXpE0\",\"filterCol\":\"EnergyGraph_filterCol__3lRs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timestamp\":\"Labels_timestamp__14xTO\",\"labels\":\"Labels_labels__3OjBJ\",\"label\":\"Labels_label__3jxsh\"};"],"sourceRoot":""}